// JSHIR:      "jsir.file"() <{comments = []}> ({
// JSHIR-NEXT:   "jsir.program"() <{source_type = "script"}> ({
// JSHIR-NEXT:     "jshir.for_statement"() ({
// JSHIR-NEXT:       "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:         %0 = "jsir.identifier_ref"() <{name = "i"}> : () -> !jsir.any
// JSHIR-NEXT:         %1 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSHIR-NEXT:         %2 = "jsir.variable_declarator"(%0, %1) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:         "jsir.exprs_region_end"(%2) : (!jsir.any) -> ()
// JSHIR-NEXT:       }) : () -> ()
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       %0 = "jsir.identifier"() <{name = "i"}> : () -> !jsir.any
// JSHIR-NEXT:       %1 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "10", 1.000000e+01 : f64>, value = 1.000000e+01 : f64}> : () -> !jsir.any
// JSHIR-NEXT:       %2 = "jsir.binary_expression"(%0, %1) <{operator_ = "<"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.expr_region_end"(%2) : (!jsir.any) -> ()
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       %0 = "jsir.identifier_ref"() <{name = "i"}> : () -> !jsir.any
// JSHIR-NEXT:       %1 = "jsir.update_expression"(%0) <{operator_ = "++", prefix = false}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.expr_region_end"(%1) : (!jsir.any) -> ()
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       %0 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:       %1 = "jsir.member_expression"(%0) <{literal_property = #jsir<identifier   <L 2 C 10>, <L 2 C 13>, "log", 39, 42, 1, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       %2 = "jsir.identifier"() <{name = "i"}> : () -> !jsir.any
// JSHIR-NEXT:       %3 = "jsir.call_expression"(%1, %2) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.expression_statement"(%3) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:   }, {
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:   }) : () -> ()
// JSHIR-NEXT: }) : () -> ()
// JSHIR-NEXT: jsir.file {[]} ({
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:       // <executable>
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT:     jsir.program {"script"} ({
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:         jshir.for_statement ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { }
// JSHIR-NEXT:                 %0 = jsir.identifier_ref {"i"}
// JSHIR-NEXT:                   // %0 = <unknown>
// JSHIR-NEXT:                   // State [default = <unknown>] { }
// JSHIR-NEXT:                 %1 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSHIR-NEXT:                   // %1 = 0.000000e+00 : f64
// JSHIR-NEXT:                   // State [default = <unknown>] { }
// JSHIR-NEXT:                 %2 = jsir.variable_declarator (%0, %1)
// JSHIR-NEXT:                   // %2 = <uninitialized>
// JSHIR-NEXT:                   // State [default = <unknown>] { <i#0 : 0.000000e+00 : f64> }
// JSHIR-NEXT:                 jsir.exprs_region_end (%2)
// JSHIR-NEXT:                   // State [default = <unknown>] { <i#0 : 0.000000e+00 : f64> }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // State [default = <unknown>] { <i#0 : 0.000000e+00 : f64> }
// JSHIR-NEXT:         }, {
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %0 = jsir.identifier {"i"}
// JSHIR-NEXT:               // %0 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %1 = jsir.numeric_literal {#jsir<numeric_literal_extra "10", 1.000000e+01 : f64>, 1.000000e+01 : f64}
// JSHIR-NEXT:               // %1 = 1.000000e+01 : f64
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %2 = jsir.binary_expression (%0, %1) {"<"}
// JSHIR-NEXT:               // %2 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             jsir.expr_region_end (%2)
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:         }, {
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %0 = jsir.identifier_ref {"i"}
// JSHIR-NEXT:               // %0 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %1 = jsir.update_expression (%0) {"++", false}
// JSHIR-NEXT:               // %1 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             jsir.expr_region_end (%1)
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:         }, {
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %0 = jsir.identifier {"console"}
// JSHIR-NEXT:               // %0 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %1 = jsir.member_expression (%0) {#jsir<identifier   <L 2 C 10>, <L 2 C 13>, "log", 39, 42, 1, "log">}
// JSHIR-NEXT:               // %1 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %2 = jsir.identifier {"i"}
// JSHIR-NEXT:               // %2 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %3 = jsir.call_expression (%1, %2)
// JSHIR-NEXT:               // %3 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             jsir.expression_statement (%3)
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:     })
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT: })
// JSHIR-NEXT:   // State [default = <uninitialized>] { }
