// JSHIR:      "jsir.file"() <{comments = []}> ({
// JSHIR-NEXT:   "jsir.program"() <{source_type = "script"}> ({
// JSHIR-NEXT:     "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:       %4 = "jsir.identifier_ref"() <{name = "x"}> : () -> !jsir.any
// JSHIR-NEXT:       %5 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "3", 3.000000e+00 : f64>, value = 3.000000e+00 : f64}> : () -> !jsir.any
// JSHIR-NEXT:       %6 = "jsir.variable_declarator"(%4, %5) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.exprs_region_end"(%6) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     "jshir.while_statement"() ({
// JSHIR-NEXT:       %4 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSHIR-NEXT:       "jsir.expr_region_end"(%4) : (!jsir.any) -> ()
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       "jshir.block_statement"() ({
// JSHIR-NEXT:         "jshir.break_statement"() : () -> ()
// JSHIR-NEXT:         %4 = "jsir.identifier_ref"() <{name = "x"}> : () -> !jsir.any
// JSHIR-NEXT:         %5 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "2", 2.000000e+00 : f64>, value = 2.000000e+00 : f64}> : () -> !jsir.any
// JSHIR-NEXT:         %6 = "jsir.assignment_expression"(%4, %5) <{operator_ = "="}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:         "jsir.expression_statement"(%6) : (!jsir.any) -> ()
// JSHIR-NEXT:       }, {
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:       }) : () -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     %0 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:     %1 = "jsir.member_expression"(%0) <{literal_property = #jsir<identifier   <L 6 C 8>, <L 6 C 11>, "log", 54, 57, 0, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:     %2 = "jsir.identifier"() <{name = "x"}> : () -> !jsir.any
// JSHIR-NEXT:     %3 = "jsir.call_expression"(%1, %2) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:     "jsir.expression_statement"(%3) : (!jsir.any) -> ()
// JSHIR-NEXT:   }, {
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:   }) : () -> ()
// JSHIR-NEXT: }) : () -> ()
// JSHIR-NEXT: jsir.file {[]} ({
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:       // <executable>
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT:     jsir.program {"script"} ({
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:         jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %4 = jsir.identifier_ref {"x"}
// JSHIR-NEXT:               // %4 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %5 = jsir.numeric_literal {#jsir<numeric_literal_extra "3", 3.000000e+00 : f64>, 3.000000e+00 : f64}
// JSHIR-NEXT:               // %5 = 3.000000e+00 : f64
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %6 = jsir.variable_declarator (%4, %5)
// JSHIR-NEXT:               // %6 = <uninitialized>
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:             jsir.exprs_region_end (%6)
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         jshir.while_statement ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:             %4 = jsir.boolean_literal {true}
// JSHIR-NEXT:               // %4 = true
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:             jsir.expr_region_end (%4)
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         }, {
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:             jshir.block_statement ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:                 jshir.break_statement
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:                 %4 = jsir.identifier_ref {"x"}
// JSHIR-NEXT:                   // %4 = <unknown>
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:                 %5 = jsir.numeric_literal {#jsir<numeric_literal_extra "2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// JSHIR-NEXT:                   // %5 = 2.000000e+00 : f64
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:                 %6 = jsir.assignment_expression (%4, %5) {"="}
// JSHIR-NEXT:                   // %6 = <unknown>
// JSHIR-NEXT:                   // State [default = <uninitialized>] { <x#0 : 2.000000e+00 : f64> }
// JSHIR-NEXT:                 jsir.expression_statement (%6)
// JSHIR-NEXT:                   // State [default = <uninitialized>] { <x#0 : 2.000000e+00 : f64> }
// JSHIR-NEXT:             }, {
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // State [default = <uninitialized>] { }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         %0 = jsir.identifier {"console"}
// JSHIR-NEXT:           // %0 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         %1 = jsir.member_expression (%0) {#jsir<identifier   <L 6 C 8>, <L 6 C 11>, "log", 54, 57, 0, "log">}
// JSHIR-NEXT:           // %1 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         %2 = jsir.identifier {"x"}
// JSHIR-NEXT:           // %2 = 3.000000e+00 : f64
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         %3 = jsir.call_expression (%1, %2)
// JSHIR-NEXT:           // %3 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:         jsir.expression_statement (%3)
// JSHIR-NEXT:           // State [default = <unknown>] { <x#0 : 3.000000e+00 : f64> }
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:     })
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT: })
// JSHIR-NEXT:   // State [default = <uninitialized>] { }
