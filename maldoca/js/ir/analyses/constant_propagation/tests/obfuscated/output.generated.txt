// JSLIR:      "jsir.file"() <{comments = [#jsir<comment_line  <L 1 C 27>, <L 1 C 31>, 27, 31, " s">, #jsir<comment_line  <L 5 C 22>, <L 5 C 26>, 62, 66, " e">, #jsir<comment_line  <L 7 C 18>, <L 7 C 22>, 87, 91, " l">, #jsir<comment_line  <L 9 C 18>, <L 9 C 22>, 112, 116, " l">]}> ({
// JSLIR-NEXT:   "jsir.program"() <{source_type = "script"}> ({
// JSLIR-NEXT:     %0 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSLIR-NEXT:     %1 = "jsir.string_literal"() <{extra = #jsir<string_literal_extra "''", "">, value = ""}> : () -> !jsir.any
// JSLIR-NEXT:     %2 = "jsir.binary_expression"(%0, %1) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %3 = "jsir.parenthesized_expression"(%2) : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %4 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSLIR-NEXT:     %5 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSLIR-NEXT:     %6 = "jsir.binary_expression"(%4, %5) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %7 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSLIR-NEXT:     %8 = "jsir.binary_expression"(%6, %7) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %9 = "jsir.member_expression"(%3, %8) : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %10 = "jsir.string_literal"() <{extra = #jsir<string_literal_extra "'h'", "h">, value = "h"}> : () -> !jsir.any
// JSLIR-NEXT:     %11 = "jsir.binary_expression"(%9, %10) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %12 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSLIR-NEXT:     %13 = "jsir.unary_expression"(%12) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %14 = "jsir.string_literal"() <{extra = #jsir<string_literal_extra "''", "">, value = ""}> : () -> !jsir.any
// JSLIR-NEXT:     %15 = "jsir.binary_expression"(%13, %14) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %16 = "jsir.parenthesized_expression"(%15) : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %17 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %18 = "jsir.unary_expression"(%17) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %19 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %20 = "jsir.unary_expression"(%19) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %21 = "jsir.binary_expression"(%18, %20) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %22 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %23 = "jsir.unary_expression"(%22) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %24 = "jsir.binary_expression"(%21, %23) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %25 = "jsir.member_expression"(%16, %24) : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %26 = "jsir.binary_expression"(%11, %25) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %27 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSLIR-NEXT:     %28 = "jsir.string_literal"() <{extra = #jsir<string_literal_extra "''", "">, value = ""}> : () -> !jsir.any
// JSLIR-NEXT:     %29 = "jsir.binary_expression"(%27, %28) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %30 = "jsir.parenthesized_expression"(%29) : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %31 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %32 = "jsir.unary_expression"(%31) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %33 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %34 = "jsir.unary_expression"(%33) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %35 = "jsir.binary_expression"(%32, %34) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %36 = "jsir.member_expression"(%30, %35) : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %37 = "jsir.binary_expression"(%26, %36) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %38 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSLIR-NEXT:     %39 = "jsir.string_literal"() <{extra = #jsir<string_literal_extra "''", "">, value = ""}> : () -> !jsir.any
// JSLIR-NEXT:     %40 = "jsir.binary_expression"(%38, %39) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %41 = "jsir.parenthesized_expression"(%40) : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %42 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %43 = "jsir.unary_expression"(%42) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %44 = "jsir.numeric_literal"() <{extra = #jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, value = 0.000000e+00 : f64}> : () -> !jsir.any
// JSLIR-NEXT:     %45 = "jsir.unary_expression"(%44) <{operator_ = "!", prefix = true}> : (!jsir.any) -> !jsir.any
// JSLIR-NEXT:     %46 = "jsir.binary_expression"(%43, %45) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %47 = "jsir.member_expression"(%41, %46) : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     %48 = "jsir.binary_expression"(%37, %47) <{operator_ = "+"}> : (!jsir.any, !jsir.any) -> !jsir.any
// JSLIR-NEXT:     "jsir.expression_statement"(%48) : (!jsir.any) -> ()
// JSLIR-NEXT:   }, {
// JSLIR-NEXT:   ^bb0:
// JSLIR-NEXT:   }) : () -> ()
// JSLIR-NEXT: }) : () -> ()
// JSLIR-NEXT: jsir.file {[#jsir<comment_line  <L 1 C 27>, <L 1 C 31>, 27, 31, " s">, #jsir<comment_line  <L 5 C 22>, <L 5 C 26>, 62, 66, " e">, #jsir<comment_line  <L 7 C 18>, <L 7 C 22>, 87, 91, " l">, #jsir<comment_line  <L 9 C 18>, <L 9 C 22>, 112, 116, " l">]} ({
// JSLIR-NEXT:   ^bb0:
// JSLIR-NEXT:       // <executable>
// JSLIR-NEXT:       // State [default = <unknown>] { }
// JSLIR-NEXT:     jsir.program {"script"} ({
// JSLIR-NEXT:       ^bb0:
// JSLIR-NEXT:           // <executable>
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %0 = jsir.boolean_literal {false}
// JSLIR-NEXT:           // %0 = false
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %1 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// JSLIR-NEXT:           // %1 = ""
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %2 = jsir.binary_expression (%0, %1) {"+"}
// JSLIR-NEXT:           // %2 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %3 = jsir.parenthesized_expression (%2)
// JSLIR-NEXT:           // %3 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %4 = jsir.boolean_literal {true}
// JSLIR-NEXT:           // %4 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %5 = jsir.boolean_literal {true}
// JSLIR-NEXT:           // %5 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %6 = jsir.binary_expression (%4, %5) {"+"}
// JSLIR-NEXT:           // %6 = 2.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %7 = jsir.boolean_literal {true}
// JSLIR-NEXT:           // %7 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %8 = jsir.binary_expression (%6, %7) {"+"}
// JSLIR-NEXT:           // %8 = 3.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %9 = jsir.member_expression (%3, %8)
// JSLIR-NEXT:           // %9 = "s"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %10 = jsir.string_literal {#jsir<string_literal_extra "'h'", "h">, "h"}
// JSLIR-NEXT:           // %10 = "h"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %11 = jsir.binary_expression (%9, %10) {"+"}
// JSLIR-NEXT:           // %11 = "sh"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %12 = jsir.boolean_literal {false}
// JSLIR-NEXT:           // %12 = false
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %13 = jsir.unary_expression (%12) {"!", true}
// JSLIR-NEXT:           // %13 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %14 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// JSLIR-NEXT:           // %14 = ""
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %15 = jsir.binary_expression (%13, %14) {"+"}
// JSLIR-NEXT:           // %15 = "true"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %16 = jsir.parenthesized_expression (%15)
// JSLIR-NEXT:           // %16 = "true"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %17 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %17 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %18 = jsir.unary_expression (%17) {"!", true}
// JSLIR-NEXT:           // %18 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %19 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %19 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %20 = jsir.unary_expression (%19) {"!", true}
// JSLIR-NEXT:           // %20 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %21 = jsir.binary_expression (%18, %20) {"+"}
// JSLIR-NEXT:           // %21 = 2.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %22 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %22 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %23 = jsir.unary_expression (%22) {"!", true}
// JSLIR-NEXT:           // %23 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %24 = jsir.binary_expression (%21, %23) {"+"}
// JSLIR-NEXT:           // %24 = 3.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %25 = jsir.member_expression (%16, %24)
// JSLIR-NEXT:           // %25 = "e"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %26 = jsir.binary_expression (%11, %25) {"+"}
// JSLIR-NEXT:           // %26 = "she"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %27 = jsir.boolean_literal {false}
// JSLIR-NEXT:           // %27 = false
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %28 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// JSLIR-NEXT:           // %28 = ""
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %29 = jsir.binary_expression (%27, %28) {"+"}
// JSLIR-NEXT:           // %29 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %30 = jsir.parenthesized_expression (%29)
// JSLIR-NEXT:           // %30 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %31 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %31 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %32 = jsir.unary_expression (%31) {"!", true}
// JSLIR-NEXT:           // %32 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %33 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %33 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %34 = jsir.unary_expression (%33) {"!", true}
// JSLIR-NEXT:           // %34 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %35 = jsir.binary_expression (%32, %34) {"+"}
// JSLIR-NEXT:           // %35 = 2.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %36 = jsir.member_expression (%30, %35)
// JSLIR-NEXT:           // %36 = "l"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %37 = jsir.binary_expression (%26, %36) {"+"}
// JSLIR-NEXT:           // %37 = "shel"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %38 = jsir.boolean_literal {false}
// JSLIR-NEXT:           // %38 = false
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %39 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// JSLIR-NEXT:           // %39 = ""
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %40 = jsir.binary_expression (%38, %39) {"+"}
// JSLIR-NEXT:           // %40 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %41 = jsir.parenthesized_expression (%40)
// JSLIR-NEXT:           // %41 = "false"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %42 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %42 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %43 = jsir.unary_expression (%42) {"!", true}
// JSLIR-NEXT:           // %43 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %44 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// JSLIR-NEXT:           // %44 = 0.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %45 = jsir.unary_expression (%44) {"!", true}
// JSLIR-NEXT:           // %45 = true
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %46 = jsir.binary_expression (%43, %45) {"+"}
// JSLIR-NEXT:           // %46 = 2.000000e+00 : f64
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %47 = jsir.member_expression (%41, %46)
// JSLIR-NEXT:           // %47 = "l"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         %48 = jsir.binary_expression (%37, %47) {"+"}
// JSLIR-NEXT:           // %48 = "shell"
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:         jsir.expression_statement (%48)
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:     }, {
// JSLIR-NEXT:       ^bb0:
// JSLIR-NEXT:           // <executable>
// JSLIR-NEXT:           // State [default = <unknown>] { }
// JSLIR-NEXT:     })
// JSLIR-NEXT:       // State [default = <unknown>] { }
// JSLIR-NEXT: })
// JSLIR-NEXT:   // State [default = <uninitialized>] { }
