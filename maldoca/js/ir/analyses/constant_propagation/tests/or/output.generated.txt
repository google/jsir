// JSHIR:      "jsir.file"() <{comments = []}> ({
// JSHIR-NEXT:   "jsir.program"() <{source_type = "script"}> ({
// JSHIR-NEXT:     "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:       %16 = "jsir.identifier_ref"() <{name = "a"}> : () -> !jsir.any
// JSHIR-NEXT:       %17 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSHIR-NEXT:       %18 = "jshir.logical_expression"(%17) <{operator_ = "||"}> ({
// JSHIR-NEXT:         %20 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSHIR-NEXT:         "jsir.expr_region_end"(%20) : (!jsir.any) -> ()
// JSHIR-NEXT:       }) : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       %19 = "jsir.variable_declarator"(%16, %18) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.exprs_region_end"(%19) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:       %16 = "jsir.identifier_ref"() <{name = "b"}> : () -> !jsir.any
// JSHIR-NEXT:       %17 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSHIR-NEXT:       %18 = "jshir.logical_expression"(%17) <{operator_ = "||"}> ({
// JSHIR-NEXT:         %20 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSHIR-NEXT:         "jsir.expr_region_end"(%20) : (!jsir.any) -> ()
// JSHIR-NEXT:       }) : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       %19 = "jsir.variable_declarator"(%16, %18) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.exprs_region_end"(%19) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:       %16 = "jsir.identifier_ref"() <{name = "c"}> : () -> !jsir.any
// JSHIR-NEXT:       %17 = "jsir.identifier"() <{name = "x"}> : () -> !jsir.any
// JSHIR-NEXT:       %18 = "jshir.logical_expression"(%17) <{operator_ = "||"}> ({
// JSHIR-NEXT:         %20 = "jsir.boolean_literal"() <{value = true}> : () -> !jsir.any
// JSHIR-NEXT:         "jsir.expr_region_end"(%20) : (!jsir.any) -> ()
// JSHIR-NEXT:       }) : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       %19 = "jsir.variable_declarator"(%16, %18) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.exprs_region_end"(%19) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     "jsir.variable_declaration"() <{kind = "var"}> ({
// JSHIR-NEXT:       %16 = "jsir.identifier_ref"() <{name = "d"}> : () -> !jsir.any
// JSHIR-NEXT:       %17 = "jsir.identifier"() <{name = "x"}> : () -> !jsir.any
// JSHIR-NEXT:       %18 = "jshir.logical_expression"(%17) <{operator_ = "||"}> ({
// JSHIR-NEXT:         %20 = "jsir.boolean_literal"() <{value = false}> : () -> !jsir.any
// JSHIR-NEXT:         "jsir.expr_region_end"(%20) : (!jsir.any) -> ()
// JSHIR-NEXT:       }) : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:       %19 = "jsir.variable_declarator"(%16, %18) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:       "jsir.exprs_region_end"(%19) : (!jsir.any) -> ()
// JSHIR-NEXT:     }) : () -> ()
// JSHIR-NEXT:     %0 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:     %1 = "jsir.member_expression"(%0) <{literal_property = #jsir<identifier   <L 5 C 8>, <L 5 C 11>, "log", 93, 96, 0, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:     %2 = "jsir.identifier"() <{name = "a"}> : () -> !jsir.any
// JSHIR-NEXT:     %3 = "jsir.call_expression"(%1, %2) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:     "jsir.expression_statement"(%3) : (!jsir.any) -> ()
// JSHIR-NEXT:     %4 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:     %5 = "jsir.member_expression"(%4) <{literal_property = #jsir<identifier   <L 6 C 8>, <L 6 C 11>, "log", 109, 112, 0, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:     %6 = "jsir.identifier"() <{name = "b"}> : () -> !jsir.any
// JSHIR-NEXT:     %7 = "jsir.call_expression"(%5, %6) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:     "jsir.expression_statement"(%7) : (!jsir.any) -> ()
// JSHIR-NEXT:     %8 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:     %9 = "jsir.member_expression"(%8) <{literal_property = #jsir<identifier   <L 7 C 8>, <L 7 C 11>, "log", 125, 128, 0, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:     %10 = "jsir.identifier"() <{name = "c"}> : () -> !jsir.any
// JSHIR-NEXT:     %11 = "jsir.call_expression"(%9, %10) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:     "jsir.expression_statement"(%11) : (!jsir.any) -> ()
// JSHIR-NEXT:     %12 = "jsir.identifier"() <{name = "console"}> : () -> !jsir.any
// JSHIR-NEXT:     %13 = "jsir.member_expression"(%12) <{literal_property = #jsir<identifier   <L 8 C 8>, <L 8 C 11>, "log", 141, 144, 0, "log">}> : (!jsir.any) -> !jsir.any
// JSHIR-NEXT:     %14 = "jsir.identifier"() <{name = "d"}> : () -> !jsir.any
// JSHIR-NEXT:     %15 = "jsir.call_expression"(%13, %14) : (!jsir.any, !jsir.any) -> !jsir.any
// JSHIR-NEXT:     "jsir.expression_statement"(%15) : (!jsir.any) -> ()
// JSHIR-NEXT:   }, {
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:   }) : () -> ()
// JSHIR-NEXT: }) : () -> ()
// JSHIR-NEXT: jsir.file {[]} ({
// JSHIR-NEXT:   ^bb0:
// JSHIR-NEXT:       // <executable>
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT:     jsir.program {"script"} ({
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:         jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %16 = jsir.identifier_ref {"a"}
// JSHIR-NEXT:               // %16 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %17 = jsir.boolean_literal {true}
// JSHIR-NEXT:               // %17 = true
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %18 = jshir.logical_expression (%17) {"||"} ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <not executable>
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:                 %20 = jsir.boolean_literal {true}
// JSHIR-NEXT:                   // %20 = <uninitialized>
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:                 jsir.expr_region_end (%20)
// JSHIR-NEXT:                   // State [default = <uninitialized>] { }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // %18 = true
// JSHIR-NEXT:               // State [default = <unknown>] { }
// JSHIR-NEXT:             %19 = jsir.variable_declarator (%16, %18)
// JSHIR-NEXT:               // %19 = <uninitialized>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             jsir.exprs_region_end (%19)
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:         jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             %16 = jsir.identifier_ref {"b"}
// JSHIR-NEXT:               // %16 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             %17 = jsir.boolean_literal {false}
// JSHIR-NEXT:               // %17 = false
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             %18 = jshir.logical_expression (%17) {"||"} ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:                 %20 = jsir.boolean_literal {false}
// JSHIR-NEXT:                   // %20 = false
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:                 jsir.expr_region_end (%20)
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // %18 = false
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> }
// JSHIR-NEXT:             %19 = jsir.variable_declarator (%16, %18)
// JSHIR-NEXT:               // %19 = <uninitialized>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             jsir.exprs_region_end (%19)
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %16 = jsir.identifier_ref {"c"}
// JSHIR-NEXT:               // %16 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %17 = jsir.identifier {"x"}
// JSHIR-NEXT:               // %17 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %18 = jshir.logical_expression (%17) {"||"} ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:                 %20 = jsir.boolean_literal {true}
// JSHIR-NEXT:                   // %20 = true
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:                 jsir.expr_region_end (%20)
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // %18 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %19 = jsir.variable_declarator (%16, %18)
// JSHIR-NEXT:               // %19 = <uninitialized>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             jsir.exprs_region_end (%19)
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.variable_declaration {"var"} ({
// JSHIR-NEXT:           ^bb0:
// JSHIR-NEXT:               // <executable>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %16 = jsir.identifier_ref {"d"}
// JSHIR-NEXT:               // %16 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %17 = jsir.identifier {"x"}
// JSHIR-NEXT:               // %17 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %18 = jshir.logical_expression (%17) {"||"} ({
// JSHIR-NEXT:               ^bb0:
// JSHIR-NEXT:                   // <executable>
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:                 %20 = jsir.boolean_literal {false}
// JSHIR-NEXT:                   // %20 = false
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:                 jsir.expr_region_end (%20)
// JSHIR-NEXT:                   // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             })
// JSHIR-NEXT:               // %18 = <unknown>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             %19 = jsir.variable_declarator (%16, %18)
// JSHIR-NEXT:               // %19 = <uninitialized>
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:             jsir.exprs_region_end (%19)
// JSHIR-NEXT:               // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         })
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %0 = jsir.identifier {"console"}
// JSHIR-NEXT:           // %0 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %1 = jsir.member_expression (%0) {#jsir<identifier   <L 5 C 8>, <L 5 C 11>, "log", 93, 96, 0, "log">}
// JSHIR-NEXT:           // %1 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %2 = jsir.identifier {"a"}
// JSHIR-NEXT:           // %2 = true
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %3 = jsir.call_expression (%1, %2)
// JSHIR-NEXT:           // %3 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.expression_statement (%3)
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %4 = jsir.identifier {"console"}
// JSHIR-NEXT:           // %4 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %5 = jsir.member_expression (%4) {#jsir<identifier   <L 6 C 8>, <L 6 C 11>, "log", 109, 112, 0, "log">}
// JSHIR-NEXT:           // %5 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %6 = jsir.identifier {"b"}
// JSHIR-NEXT:           // %6 = false
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %7 = jsir.call_expression (%5, %6)
// JSHIR-NEXT:           // %7 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.expression_statement (%7)
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %8 = jsir.identifier {"console"}
// JSHIR-NEXT:           // %8 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %9 = jsir.member_expression (%8) {#jsir<identifier   <L 7 C 8>, <L 7 C 11>, "log", 125, 128, 0, "log">}
// JSHIR-NEXT:           // %9 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %10 = jsir.identifier {"c"}
// JSHIR-NEXT:           // %10 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %11 = jsir.call_expression (%9, %10)
// JSHIR-NEXT:           // %11 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.expression_statement (%11)
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %12 = jsir.identifier {"console"}
// JSHIR-NEXT:           // %12 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %13 = jsir.member_expression (%12) {#jsir<identifier   <L 8 C 8>, <L 8 C 11>, "log", 141, 144, 0, "log">}
// JSHIR-NEXT:           // %13 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %14 = jsir.identifier {"d"}
// JSHIR-NEXT:           // %14 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         %15 = jsir.call_expression (%13, %14)
// JSHIR-NEXT:           // %15 = <unknown>
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:         jsir.expression_statement (%15)
// JSHIR-NEXT:           // State [default = <unknown>] { <a#0 : true> <b#0 : false> }
// JSHIR-NEXT:     }, {
// JSHIR-NEXT:       ^bb0:
// JSHIR-NEXT:           // <executable>
// JSHIR-NEXT:           // State [default = <unknown>] { }
// JSHIR-NEXT:     })
// JSHIR-NEXT:       // State [default = <unknown>] { }
// JSHIR-NEXT: })
// JSHIR-NEXT:   // State [default = <uninitialized>] { }
