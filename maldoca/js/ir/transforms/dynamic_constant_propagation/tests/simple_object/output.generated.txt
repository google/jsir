// SOURCE:      let object = {
// SOURCE-NEXT:   'a': "a",
// SOURCE-NEXT:   'b': "b",
// SOURCE-NEXT:   c: "c",
// SOURCE-NEXT:   ["d"]: "d"
// SOURCE-NEXT: };
// SOURCE-NEXT: console.log("a");
// SOURCE-NEXT: console.log("a");
// SOURCE-NEXT: console.log("b");
// SOURCE-NEXT: console.log("b");
// SOURCE-NEXT: console.log("c");
// SOURCE-NEXT: console.log("d");
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Prelude:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Dataflow:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: jsir.file ({
// SOURCE-NEXT:   ^bb0:
// SOURCE-NEXT:       // <executable>
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT:     jsir.program {"script"} ({
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %38 = jsir.identifier_ref {"object"}
// SOURCE-NEXT:               // %38 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %39 = jsir.object_expression ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %41 = jsir.string_literal {#jsir<string_literal_extra "'a'", "a">, "a"}
// SOURCE-NEXT:                   // %41 = "a"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %42 = jsir.object_property (%41) {#jsir<string_literal   <L 2 C 2>, <L 2 C 5>, 17, 20, 0, "a",  "'a'", "a">, false}
// SOURCE-NEXT:                   // %42 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %43 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// SOURCE-NEXT:                   // %43 = ""
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %44 = jsir.string_literal {#jsir<string_literal_extra "'b'", "b">, "b"}
// SOURCE-NEXT:                   // %44 = "b"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %45 = jsir.binary_expression (%43, %44) {"+"}
// SOURCE-NEXT:                   // %45 = "b"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %46 = jsir.object_property (%45) {#jsir<string_literal   <L 3 C 2>, <L 3 C 5>, 29, 32, 0, "b",  "'b'", "b">, false}
// SOURCE-NEXT:                   // %46 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %47 = jsir.string_literal {#jsir<string_literal_extra "'c'", "c">, "c"}
// SOURCE-NEXT:                   // %47 = "c"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %48 = jsir.object_property (%47) {#jsir<identifier   <L 4 C 2>, <L 4 C 3>, "c", 46, 47, 0, "c">, false}
// SOURCE-NEXT:                   // %48 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %49 = jsir.string_literal {#jsir<string_literal_extra "'d'", "d">, "d"}
// SOURCE-NEXT:                   // %49 = "d"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %50 = jsir.string_literal {#jsir<string_literal_extra "'d'", "d">, "d"}
// SOURCE-NEXT:                   // %50 = "d"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %51 = jsir.object_property (%49, %50) {false}
// SOURCE-NEXT:                   // %51 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%42, %46, %48, %51)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %39 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %40 = jsir.variable_declarator (%38, %39)
// SOURCE-NEXT:               // %40 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%40)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %0 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %0 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %1 = jsir.member_expression (%0) {#jsir<identifier   <L 8 C 8>, <L 8 C 11>, "log", 80, 83, 0, "log">}
// SOURCE-NEXT:           // %1 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %2 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %2 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %3 = jsir.string_literal {#jsir<string_literal_extra "'a'", "a">, "a"}
// SOURCE-NEXT:           // %3 = "a"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %4 = jsir.member_expression (%2, %3)
// SOURCE-NEXT:           // %4 = "a"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %5 = jsir.call_expression (%1, %4)
// SOURCE-NEXT:           // %5 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%5)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %6 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %6 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %7 = jsir.member_expression (%6) {#jsir<identifier   <L 9 C 8>, <L 9 C 11>, "log", 106, 109, 0, "log">}
// SOURCE-NEXT:           // %7 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %8 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %8 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %9 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// SOURCE-NEXT:           // %9 = ""
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %10 = jsir.string_literal {#jsir<string_literal_extra "'a'", "a">, "a"}
// SOURCE-NEXT:           // %10 = "a"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %11 = jsir.binary_expression (%9, %10) {"+"}
// SOURCE-NEXT:           // %11 = "a"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %12 = jsir.member_expression (%8, %11)
// SOURCE-NEXT:           // %12 = "a"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %13 = jsir.call_expression (%7, %12)
// SOURCE-NEXT:           // %13 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%13)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %14 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %14 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %15 = jsir.member_expression (%14) {#jsir<identifier   <L 10 C 8>, <L 10 C 11>, "log", 137, 140, 0, "log">}
// SOURCE-NEXT:           // %15 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %16 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %16 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %17 = jsir.string_literal {#jsir<string_literal_extra "'b'", "b">, "b"}
// SOURCE-NEXT:           // %17 = "b"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %18 = jsir.member_expression (%16, %17)
// SOURCE-NEXT:           // %18 = "b"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %19 = jsir.call_expression (%15, %18)
// SOURCE-NEXT:           // %19 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%19)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %20 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %20 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %21 = jsir.member_expression (%20) {#jsir<identifier   <L 11 C 8>, <L 11 C 11>, "log", 163, 166, 0, "log">}
// SOURCE-NEXT:           // %21 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %22 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %22 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %23 = jsir.string_literal {#jsir<string_literal_extra "''", "">, ""}
// SOURCE-NEXT:           // %23 = ""
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %24 = jsir.string_literal {#jsir<string_literal_extra "'b'", "b">, "b"}
// SOURCE-NEXT:           // %24 = "b"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %25 = jsir.binary_expression (%23, %24) {"+"}
// SOURCE-NEXT:           // %25 = "b"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %26 = jsir.member_expression (%22, %25)
// SOURCE-NEXT:           // %26 = "b"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %27 = jsir.call_expression (%21, %26)
// SOURCE-NEXT:           // %27 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%27)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %28 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %28 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %29 = jsir.member_expression (%28) {#jsir<identifier   <L 12 C 8>, <L 12 C 11>, "log", 194, 197, 0, "log">}
// SOURCE-NEXT:           // %29 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %30 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %30 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %31 = jsir.member_expression (%30) {#jsir<identifier   <L 12 C 19>, <L 12 C 20>, "c", 205, 206, 0, "c">}
// SOURCE-NEXT:           // %31 = "c"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %32 = jsir.call_expression (%29, %31)
// SOURCE-NEXT:           // %32 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%32)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %33 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %33 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %34 = jsir.member_expression (%33) {#jsir<identifier   <L 13 C 8>, <L 13 C 11>, "log", 217, 220, 0, "log">}
// SOURCE-NEXT:           // %34 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %35 = jsir.identifier {"object"}
// SOURCE-NEXT:           // %35 = #jsir_builtin<inline_expression_object  "a", "a",  "b", #jsir_builtin<inline_expression_binary_expression "", "b", "+">,  "c", "c",  "d", "d">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %36 = jsir.member_expression (%35) {#jsir<identifier   <L 13 C 19>, <L 13 C 20>, "d", 228, 229, 0, "d">}
// SOURCE-NEXT:           // %36 = "d"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %37 = jsir.call_expression (%34, %36)
// SOURCE-NEXT:           // %37 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%37)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     }, {
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     })
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT: })
// SOURCE-NEXT:   // State [default = <uninitialized>] { }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Bindings:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: object#0:
// SOURCE-NEXT:     /* 4 properties */ {
// SOURCE-NEXT:         ["a"]: "a",
// SOURCE-NEXT:         ["b"]: ("" + "b"),
// SOURCE-NEXT:         ["c"]: "c",
// SOURCE-NEXT:         ["d"]: "d",
// SOURCE-NEXT:     }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Computed constants:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: From [34, 42): `'' + 'b'` -> `b`
// SOURCE-NEXT: From [84, 95): `object['a']` -> `a`
// SOURCE-NEXT: From [117, 125): `'' + 'a'` -> `a`
// SOURCE-NEXT: From [110, 126): `object['' + 'a']` -> `a`
// SOURCE-NEXT: From [141, 152): `object['b']` -> `b`
// SOURCE-NEXT: From [174, 182): `'' + 'b'` -> `b`
// SOURCE-NEXT: From [167, 183): `object['' + 'b']` -> `b`
// SOURCE-NEXT: From [198, 206): `object.c` -> `c`
// SOURCE-NEXT: From [221, 229): `object.d` -> `d`
// SOURCE-NEXT: ================================================================
