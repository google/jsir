// SOURCE:      function hi() {
// SOURCE-NEXT:   var _0x24a11a = {
// SOURCE-NEXT:     'cmIIa': function (_0x4d887e, _0x258647) {
// SOURCE-NEXT:       return _0x4d887e === _0x258647;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'rvTTb': "LtmRg",
// SOURCE-NEXT:     'BLRju': function (_0x32f73d, _0x51021c) {
// SOURCE-NEXT:       return _0x32f73d === _0x51021c;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'INEBZ': "snjPo",
// SOURCE-NEXT:     'gCfqE': "Nngrv",
// SOURCE-NEXT:     'ZUNtd': "2|0|4|3|1",
// SOURCE-NEXT:     'soDZs': function (_0x38801d, _0xf075cb) {
// SOURCE-NEXT:       return _0x38801d(_0xf075cb);
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'NieDC': function (_0x320e85, _0x58fb4d) {
// SOURCE-NEXT:       return _0x320e85 + _0x58fb4d;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'yEDez': "return (function() ",
// SOURCE-NEXT:     'ZEmIi': "{}.constructor(\"return this\")( )",
// SOURCE-NEXT:     'jXOCo': function (_0x482b82, _0x2bafd9) {
// SOURCE-NEXT:       return _0x482b82 < _0x2bafd9;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'GyCwQ': "3|0|2|4|5|1",
// SOURCE-NEXT:     'Fmzmy': "log",
// SOURCE-NEXT:     'bDDQL': "warn",
// SOURCE-NEXT:     'wkULH': "info",
// SOURCE-NEXT:     'Wftmu': "error",
// SOURCE-NEXT:     'gXlVo': "exception",
// SOURCE-NEXT:     'DRyXW': "table",
// SOURCE-NEXT:     'fPEpB': function (_0x4d07dc) {
// SOURCE-NEXT:       return _0x4d07dc();
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'Xxejz': "Hello World!"
// SOURCE-NEXT:   };
// SOURCE-NEXT:   function _0x3e158c(_0x3bd438, _0x53f095, _0x2b1b5d, _0x1150ec) {
// SOURCE-NEXT:     return _0x107c(_0x1150ec - -343, _0x2b1b5d);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   var _0x58a38a = (function () {
// SOURCE-NEXT:     var _0x10bab4 = !![];
// SOURCE-NEXT:     return function (_0x1008f4, _0x4f3fc0) {
// SOURCE-NEXT:       function _0x3e158c(_0x22e15e, _0x5174c3, _0x1241d4, _0x8ab890) {
// SOURCE-NEXT:         return _0x107c(_0x8ab890 - 283, _0x5174c3);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       function _0x167d7e(_0x3c0256, _0x2b47e1, _0x4957e3, _0x3b662d) {
// SOURCE-NEXT:         return _0x107c(_0x4957e3 - 491, _0x3c0256);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       if (false) {
// SOURCE-NEXT:         var _0x5b6c55 = _0x3f313a ? function () {
// SOURCE-NEXT:           function _0x552a36(_0x5b91b5, _0x5a4c29, _0x102518, _0x1d60e6) {
// SOURCE-NEXT:             return _0x3e158c(_0x5b91b5 - 273, _0x5a4c29, _0x102518 - 81, _0x102518 - -946);
// SOURCE-NEXT:           }
// SOURCE-NEXT:           if (_0x330f38) {
// SOURCE-NEXT:             var _0x62708b = _0x293663["apply"](_0x408f4b, arguments);
// SOURCE-NEXT:             return _0x3b8fa6 = null, _0x62708b;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function () {};
// SOURCE-NEXT:         return _0x5ac793 = ![], _0x5b6c55;
// SOURCE-NEXT:       } else {
// SOURCE-NEXT:         var _0x46af11 = _0x10bab4 ? function () {
// SOURCE-NEXT:           if (_0x4f3fc0) {
// SOURCE-NEXT:             var _0x5b3fd6 = _0x4f3fc0["apply"](_0x1008f4, arguments);
// SOURCE-NEXT:             return _0x4f3fc0 = null, _0x5b3fd6;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function () {};
// SOURCE-NEXT:         return _0x10bab4 = ![], _0x46af11;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     };
// SOURCE-NEXT:   }());
// SOURCE-NEXT:   function _0x5fb062(_0x1176c2, _0x37fd7c, _0x5718e5, _0x3d07ce) {
// SOURCE-NEXT:     return _0x107c(_0x1176c2 - -122, _0x37fd7c);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   var _0x5a5e61 = _0x58a38a(this, function () {
// SOURCE-NEXT:     function _0x9092eb(_0x4068cb, _0x4ee7f0, _0x2d9ed5, _0x497bbc) {
// SOURCE-NEXT:       return _0x5fb062(_0x497bbc - 457, _0x4ee7f0, _0x2d9ed5 - 369, _0x497bbc - 84);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     function _0x620196(_0x425af0, _0x2a4dc9, _0x4f88d8, _0x5d56ca) {
// SOURCE-NEXT:       return _0x3e158c(_0x425af0 - 88, _0x2a4dc9 - 394, _0x2a4dc9, _0x5d56ca - 446);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     if (false) {
// SOURCE-NEXT:       var _0x2abedf = ('5|2|1|4|3|' + '0')[_0x620196(0x201, 0x1f7, 0x206, 0x210)]('|'),
// SOURCE-NEXT:         _0x53335d = 0x2 * 0x169 + 0x22ee + -0x25c0;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x2abedf[_0x53335d++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             _0x233f7c[_0x25cc23] = _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             var _0x527da8 = _0x4f1603[_0x25cc23] || _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x25cc23 = _0x4e0893[_0x3ab0e9];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             _0x185f9c[_0x9092eb(0x2c1, 0x2d7, 0x2c6, 0x2d3)] = _0x527da8[_0x620196(0x1ea, 0x200, 0x1ff, 0x1eb)][_0x9092eb(0x2f1, 0x302, 0x301, 0x2fc)](_0x527da8);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             _0x185f9c['__proto__'] = _0x486a8b[_0x620196(0x1fc, 0x205, 0x22b, 0x214)](_0x67a5a1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '5':
// SOURCE-NEXT:             var _0x185f9c = _0x4b92d5[_0x9092eb(0x30a, 0x2ee, 0x2eb, 0x2f1) + 'r'][_0x620196(0x234, 0x229, 0x218, 0x21a)]['bind'](_0x5026e1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     } else {
// SOURCE-NEXT:       var _0x1999fe = "2|0|4|3|1"["split"]("|"),
// SOURCE-NEXT:         _0x50c043 = 0;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x1999fe[_0x50c043++]) {
// SOURCE-NEXT:           case "0":
// SOURCE-NEXT:             try {
// SOURCE-NEXT:               var _0xc6ad63 = Function("return (function() {}.constructor(\"return this\")( ));");
// SOURCE-NEXT:               _0x2ed7aa = _0xc6ad63();
// SOURCE-NEXT:             } catch (_0x455513) {
// SOURCE-NEXT:               _0x2ed7aa = window;
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "1":
// SOURCE-NEXT:             for (var _0x4a8534 = 0; _0x24a11a["jXOCo"](_0x4a8534, _0x27bc28["length"]); _0x4a8534++) {
// SOURCE-NEXT:               var _0x20167d = "3|0|2|4|5|1"["split"]("|"),
// SOURCE-NEXT:                 _0x92b385 = 0;
// SOURCE-NEXT:               while (!![]) {
// SOURCE-NEXT:                 switch (_0x20167d[_0x92b385++]) {
// SOURCE-NEXT:                   case "0":
// SOURCE-NEXT:                     var _0x5154ca = _0x27bc28[_0x4a8534];
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "1":
// SOURCE-NEXT:                     _0x223732[_0x5154ca] = _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "2":
// SOURCE-NEXT:                     var _0x3bb083 = _0x223732[_0x5154ca] || _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "3":
// SOURCE-NEXT:                     var _0x3a6f48 = _0x58a38a["constructor"]["prototype"]["bind"](_0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "4":
// SOURCE-NEXT:                     _0x3a6f48["__proto__"] = _0x58a38a["bind"](_0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "5":
// SOURCE-NEXT:                     _0x3a6f48["toString"] = _0x3bb083["toString"]["bind"](_0x3bb083);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                 }
// SOURCE-NEXT:                 break;
// SOURCE-NEXT:               }
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "2":
// SOURCE-NEXT:             var _0x2ed7aa;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "3":
// SOURCE-NEXT:             var _0x27bc28 = ["log", "warn", "info", "error", "exception", "table", "trace"];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "4":
// SOURCE-NEXT:             var _0x223732 = _0x2ed7aa["console"] = _0x2ed7aa["console"] || {};
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     }
// SOURCE-NEXT:   });
// SOURCE-NEXT:   _0x5a5e61(), console["log"]("Hello World!");
// SOURCE-NEXT: }
// SOURCE-NEXT: hi();
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Prelude:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: function _0x55b1() {
// SOURCE-NEXT:   var _0x42f1e1 = [
// SOURCE-NEXT:     'zLbfCei',
// SOURCE-NEXT:     'C29ewNm',
// SOURCE-NEXT:     'wLvoDgq',
// SOURCE-NEXT:     'tM5NCNy',
// SOURCE-NEXT:     'EuvezxO',
// SOURCE-NEXT:     'C25Qug8',
// SOURCE-NEXT:     'D2fYBG',
// SOURCE-NEXT:     'DgfIBgu',
// SOURCE-NEXT:     'v2z0Bxu',
// SOURCE-NEXT:     'm29kr0f4BW',
// SOURCE-NEXT:     'ndu0mdG5m3r2Bw1yDa',
// SOURCE-NEXT:     'vM15vNa',
// SOURCE-NEXT:     'E30Uy29UC3rYDq',
// SOURCE-NEXT:     'mZziBMj0Ee8',
// SOURCE-NEXT:     'mJa0nJGYntbkvfrZAeW',
// SOURCE-NEXT:     'odyYwgvNsKLK',
// SOURCE-NEXT:     'x19WCM90B19F',
// SOURCE-NEXT:     'nJK3nZuZmgvqwgnTAW',
// SOURCE-NEXT:     'CM4GDgHPCYiPka',
// SOURCE-NEXT:     'zxjYB3i',
// SOURCE-NEXT:     'thrTuMC',
// SOURCE-NEXT:     'yxbWBhK',
// SOURCE-NEXT:     'ntiWogXKuvzzDa',
// SOURCE-NEXT:     'whHLANO',
// SOURCE-NEXT:     'zxHJzxb0Aw9U',
// SOURCE-NEXT:     'y29UC3rYDwn0BW',
// SOURCE-NEXT:     'z0nMCuu',
// SOURCE-NEXT:     'mNWWFdr8m3WX',
// SOURCE-NEXT:     'y3rVCIGICMv0Dq',
// SOURCE-NEXT:     'Bg9N',
// SOURCE-NEXT:     'm3WWFdj8nhW1Fa',
// SOURCE-NEXT:     'rM16BxK',
// SOURCE-NEXT:     'C3bSAxq',
// SOURCE-NEXT:     'nZG1sxj0r052',
// SOURCE-NEXT:     'z1HSvM8',
// SOURCE-NEXT:     'tMLLrem',
// SOURCE-NEXT:     'yMLUza',
// SOURCE-NEXT:     'D2TvteG',
// SOURCE-NEXT:     'CNzuvgi',
// SOURCE-NEXT:     'BgvUz3rO',
// SOURCE-NEXT:     'mZmXnZK1EujdBhvf',
// SOURCE-NEXT:     'mtm3mtz5CvfsyvC',
// SOURCE-NEXT:     'ChjVDg90ExbL',
// SOURCE-NEXT:     'Aw5MBW',
// SOURCE-NEXT:     'sgvSBg8Gv29YBa',
// SOURCE-NEXT:     'BMn0Aw9UkcKG',
// SOURCE-NEXT:     'yKreuuW',
// SOURCE-NEXT:     'DhjHy2u',
// SOURCE-NEXT:     'Dg9tDhjPBMC',
// SOURCE-NEXT:     'wKvTswK',
// SOURCE-NEXT:     'ALHpq28',
// SOURCE-NEXT:     'mte1nJCYnfvoyNDhsG',
// SOURCE-NEXT:     'y29UC29Szq'
// SOURCE-NEXT:   ];
// SOURCE-NEXT:   _0x55b1 = function() {
// SOURCE-NEXT:     return _0x42f1e1;
// SOURCE-NEXT:   };
// SOURCE-NEXT:   return _0x55b1();
// SOURCE-NEXT: }
// SOURCE-NEXT: function _0x107c(_0xb34c16, _0x5a0566) {
// SOURCE-NEXT:   var _0x10b1ac = _0x55b1();
// SOURCE-NEXT:   return _0x107c = function(_0x204f0a, _0x401549) {
// SOURCE-NEXT:     _0x204f0a = _0x204f0a - (0xf88 + -0x1a73 + -0x1 * -0xc6b);
// SOURCE-NEXT:     var _0x4ed5b7 = _0x10b1ac[_0x204f0a];
// SOURCE-NEXT:     if (_0x107c['xUWrKl'] === undefined) {
// SOURCE-NEXT:       var _0x1b40cf = function(_0x4e0893) {
// SOURCE-NEXT:         var _0x3ab0e9 =
// SOURCE-NEXT:             'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';
// SOURCE-NEXT:         var _0x4f1603 = '', _0x486a8b = '';
// SOURCE-NEXT:         for (var _0x67a5a1 = 0x1f23 + 0x1 * -0x1990 + 0x593 * -0x1, _0x233f7c,
// SOURCE-NEXT:                  _0x3b178e, _0x4e8da3 = 0xe36 + 0x2f * 0x31 + -0x1735;
// SOURCE-NEXT:              _0x3b178e = _0x4e0893['charAt'](_0x4e8da3++); ~_0x3b178e &&
// SOURCE-NEXT:                      (_0x233f7c = _0x67a5a1 %
// SOURCE-NEXT:                               (0x1ca * -0x5 + 0x10f * 0xc + 0x1 * -0x3be) ?
// SOURCE-NEXT:                           _0x233f7c *
// SOURCE-NEXT:                                   (-0x6 * 0x5d7 + 0x1 * -0x7ae + 0x55f * 0x8) +
// SOURCE-NEXT:                               _0x3b178e :
// SOURCE-NEXT:                           _0x3b178e,
// SOURCE-NEXT:                      _0x67a5a1++ % (-0x1f26 + 0x2 * 0xf04 + 0x122)) ?
// SOURCE-NEXT:                  _0x4f1603 += String['fromCharCode'](
// SOURCE-NEXT:                      -0x10b5 * 0x2 + 0x1f71 + 0x2f8 &
// SOURCE-NEXT:                      _0x233f7c >>
// SOURCE-NEXT:                          (-(-0x9e * -0x2 + -0x509 + 0x3cf) * _0x67a5a1 &
// SOURCE-NEXT:                           -0x27f * -0x9 + 0x6d * 0x7 + -0x196c)) :
// SOURCE-NEXT:                  -0x11fa + 0x1003 + 0x1f7 * 0x1) {
// SOURCE-NEXT:           _0x3b178e = _0x3ab0e9['indexOf'](_0x3b178e);
// SOURCE-NEXT:         }
// SOURCE-NEXT:         for (var _0x1778e4 = 0x477 + 0x9d5 + -0xe4c,
// SOURCE-NEXT:                  _0x560bb9 = _0x4f1603['length'];
// SOURCE-NEXT:              _0x1778e4 < _0x560bb9; _0x1778e4++) {
// SOURCE-NEXT:           _0x486a8b += '%' +
// SOURCE-NEXT:               ('00' +
// SOURCE-NEXT:                _0x4f1603['charCodeAt'](_0x1778e4)['toString'](
// SOURCE-NEXT:                    -0x130c + 0x1b94 + -0x878))['slice'](
// SOURCE-NEXT:                            -(-0x2 * 0x3fd + -0x12a0 + -0x34 * -0x83));
// SOURCE-NEXT:         }
// SOURCE-NEXT:         return decodeURIComponent(_0x486a8b);
// SOURCE-NEXT:       };
// SOURCE-NEXT:       _0x107c['rmDTmt'] = _0x1b40cf, _0xb34c16 = arguments,
// SOURCE-NEXT:       _0x107c['xUWrKl'] = !![];
// SOURCE-NEXT:     }
// SOURCE-NEXT:     var _0x4cbb54 = _0x10b1ac[-0xa * 0x231 + -0x8 * 0xf6 + -0x4ef * -0x6],
// SOURCE-NEXT:         _0x4b92d5 = _0x204f0a + _0x4cbb54, _0x5026e1 = _0xb34c16[_0x4b92d5];
// SOURCE-NEXT:     return !_0x5026e1 ? (_0x4ed5b7 = _0x107c['rmDTmt'](_0x4ed5b7),
// SOURCE-NEXT:                          _0xb34c16[_0x4b92d5] = _0x4ed5b7) :
// SOURCE-NEXT:                         _0x4ed5b7 = _0x5026e1,
// SOURCE-NEXT:                         _0x4ed5b7;
// SOURCE-NEXT:   }, _0x107c(_0xb34c16, _0x5a0566);
// SOURCE-NEXT: }
// SOURCE-NEXT: (function(_0x5b9586, _0x57cd49) {
// SOURCE-NEXT: var _0x5677d9 = _0x5b9586();
// SOURCE-NEXT: function _0xdb2cac(_0x5f34a9, _0x176ce0, _0x43e000, _0x7823af) {
// SOURCE-NEXT:   return _0x107c(_0x7823af - -0x374, _0x5f34a9);
// SOURCE-NEXT: }
// SOURCE-NEXT: function _0x25bda2(_0x2c9fa7, _0x17862b, _0x457726, _0x52c9a8) {
// SOURCE-NEXT:   return _0x107c(_0x17862b - -0x32, _0x457726);
// SOURCE-NEXT: }
// SOURCE-NEXT: while (!![]) {
// SOURCE-NEXT:   try {
// SOURCE-NEXT:     var _0x462c32 = parseInt(_0x25bda2(0x175, 0x178, 0x16b, 0x16c)) /
// SOURCE-NEXT:             (0x7 * -0x251 + -0xb93 * 0x1 + 0x1bcb) *
// SOURCE-NEXT:             (parseInt(_0xdb2cac(-0x1d9, -0x1f0, -0x1d5, -0x1dc)) /
// SOURCE-NEXT:              (-0x1 * 0x108f + -0xa * 0x10 + -0x3 * -0x5bb)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x174, 0x160, 0x146, 0x151)) /
// SOURCE-NEXT:             (0x17ba + 0x25b5 + -0x2 * 0x1eb6) *
// SOURCE-NEXT:             (-parseInt(_0xdb2cac(-0x1df, -0x1fe, -0x1ea, -0x1ed)) /
// SOURCE-NEXT:              (-0x43a + -0x193f + 0x1d7d)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x199, 0x17f, 0x182, 0x176)) /
// SOURCE-NEXT:             (0x2044 + 0x963 + 0x1 * -0x29a2) *
// SOURCE-NEXT:             (-parseInt(_0x25bda2(0x16c, 0x164, 0x15d, 0x175)) /
// SOURCE-NEXT:              (0x26f1 * 0x1 + -0x1b08 + 0x11 * -0xb3)) +
// SOURCE-NEXT:         -parseInt(_0xdb2cac(-0x1dc, -0x1dd, -0x1eb, -0x1e1)) /
// SOURCE-NEXT:             (-0x10 * -0xfb + -0x43 * 0x8d + -0x2 * -0xa9f) +
// SOURCE-NEXT:         -parseInt(_0xdb2cac(-0x1ef, -0x1e9, -0x1e1, -0x1d5)) /
// SOURCE-NEXT:             (0x4b2 * 0x8 + 0x3 * -0xba7 + 0x1 * -0x293) *
// SOURCE-NEXT:             (parseInt(_0x25bda2(0x167, 0x180, 0x174, 0x193)) /
// SOURCE-NEXT:              (-0x13d5 * -0x1 + 0x3 * -0xb22 + 0x2 * 0x6cd)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x16f, 0x168, 0x153, 0x156)) /
// SOURCE-NEXT:             (0x1 * -0x35b + -0xc94 + 0xff9) +
// SOURCE-NEXT:         parseInt(_0x25bda2(0x15c, 0x165, 0x17d, 0x163)) /
// SOURCE-NEXT:             (0xf5a + -0x2241 + 0x12f2);
// SOURCE-NEXT:     if (_0x462c32 === _0x57cd49)
// SOURCE-NEXT:       break;
// SOURCE-NEXT:     else
// SOURCE-NEXT:       _0x5677d9['push'](_0x5677d9['shift']());
// SOURCE-NEXT:   } catch (_0x23c6b4) {
// SOURCE-NEXT:     _0x5677d9['push'](_0x5677d9['shift']());
// SOURCE-NEXT:   }
// SOURCE-NEXT: }
// SOURCE-NEXT: }(_0x55b1, 0x9d * 0xa6d + -0x3fc67 + 0x5f392));
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Dataflow:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: jsir.file ({
// SOURCE-NEXT:   ^bb0:
// SOURCE-NEXT:       // <executable>
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT:     jsir.program {"script"} ({
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 156 C 9>, <L 156 C 11>, "hi", 5349, 5351, 18, "hi">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %2 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %2 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %786 = jsir.identifier_ref {"_0x24a11a"}
// SOURCE-NEXT:                   // %786 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %787 = jsir.object_expression ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %789 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %948 = jsir.identifier_ref {"_0x4d887e"}
// SOURCE-NEXT:                           // %948 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %949 = jsir.identifier_ref {"_0x258647"}
// SOURCE-NEXT:                           // %949 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%948, %949)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %944 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %944 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%944) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%944) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %945 = jsir.identifier {"_0x4d887e"}
// SOURCE-NEXT:                           // %945 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %946 = jsir.identifier {"_0x258647"}
// SOURCE-NEXT:                           // %946 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %947 = jsir.binary_expression (%945, %946) {"==="}
// SOURCE-NEXT:                           // %947 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%947)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%944) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %789 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %790 = jsir.object_property (%789) {#jsir<string_literal   <L 158 C 4>, <L 158 C 11>, 5380, 5387, 18, "cmIIa",  "'cmIIa'", "cmIIa">, false}
// SOURCE-NEXT:                       // %790 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %791 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %791 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %792 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x123", 2.910000e+02 : f64>, 2.910000e+02 : f64}
// SOURCE-NEXT:                       // %792 = 2.910000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %793 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x114", 2.760000e+02 : f64>, 2.760000e+02 : f64}
// SOURCE-NEXT:                       // %793 = 2.760000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %794 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x129", 2.970000e+02 : f64>, 2.970000e+02 : f64}
// SOURCE-NEXT:                       // %794 = 2.970000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %795 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12f", 3.030000e+02 : f64>, 3.030000e+02 : f64}
// SOURCE-NEXT:                       // %795 = 3.030000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %796 = jsir.call_expression (%791, %792, %793, %794, %795)
// SOURCE-NEXT:                       // %796 = "LtmRg"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %797 = jsir.object_property (%796) {#jsir<string_literal   <L 161 C 4>, <L 161 C 11>, 5471, 5478, 18, "rvTTb",  "'rvTTb'", "rvTTb">, false}
// SOURCE-NEXT:                       // %797 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %798 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %942 = jsir.identifier_ref {"_0x32f73d"}
// SOURCE-NEXT:                           // %942 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %943 = jsir.identifier_ref {"_0x51021c"}
// SOURCE-NEXT:                           // %943 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%942, %943)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %938 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %938 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%938) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%938) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %939 = jsir.identifier {"_0x32f73d"}
// SOURCE-NEXT:                           // %939 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %940 = jsir.identifier {"_0x51021c"}
// SOURCE-NEXT:                           // %940 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %941 = jsir.binary_expression (%939, %940) {"==="}
// SOURCE-NEXT:                           // %941 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%941)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%938) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %798 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %799 = jsir.object_property (%798) {#jsir<string_literal   <L 162 C 4>, <L 162 C 11>, 5523, 5530, 18, "BLRju",  "'BLRju'", "BLRju">, false}
// SOURCE-NEXT:                       // %799 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %800 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %800 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %801 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3f", 6.300000e+01 : f64>, 6.300000e+01 : f64}
// SOURCE-NEXT:                       // %801 = 6.300000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %802 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d", 4.500000e+01 : f64>, 4.500000e+01 : f64}
// SOURCE-NEXT:                       // %802 = 4.500000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %803 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x49", 7.300000e+01 : f64>, 7.300000e+01 : f64}
// SOURCE-NEXT:                       // %803 = 7.300000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %804 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37", 5.500000e+01 : f64>, 5.500000e+01 : f64}
// SOURCE-NEXT:                       // %804 = 5.500000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %805 = jsir.call_expression (%800, %801, %802, %803, %804)
// SOURCE-NEXT:                       // %805 = "snjPo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %806 = jsir.object_property (%805) {#jsir<string_literal   <L 165 C 4>, <L 165 C 11>, 5614, 5621, 18, "INEBZ",  "'INEBZ'", "INEBZ">, false}
// SOURCE-NEXT:                       // %806 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %807 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %807 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %808 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d", 4.500000e+01 : f64>, 4.500000e+01 : f64}
// SOURCE-NEXT:                       // %808 = 4.500000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %809 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x39", 5.700000e+01 : f64>, 5.700000e+01 : f64}
// SOURCE-NEXT:                       // %809 = 5.700000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %810 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x24", 3.600000e+01 : f64>, 3.600000e+01 : f64}
// SOURCE-NEXT:                       // %810 = 3.600000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %811 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x35", 5.300000e+01 : f64>, 5.300000e+01 : f64}
// SOURCE-NEXT:                       // %811 = 5.300000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %812 = jsir.call_expression (%807, %808, %809, %810, %811)
// SOURCE-NEXT:                       // %812 = "Nngrv"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %813 = jsir.object_property (%812) {#jsir<string_literal   <L 166 C 4>, <L 166 C 11>, 5662, 5669, 18, "gCfqE",  "'gCfqE'", "gCfqE">, false}
// SOURCE-NEXT:                       // %813 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %814 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %814 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %815 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:                       // %815 = 2.980000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %816 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x111", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:                       // %816 = 2.730000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %817 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13d", 3.170000e+02 : f64>, 3.170000e+02 : f64}
// SOURCE-NEXT:                       // %817 = 3.170000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %818 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11b", 2.830000e+02 : f64>, 2.830000e+02 : f64}
// SOURCE-NEXT:                       // %818 = 2.830000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %819 = jsir.call_expression (%814, %815, %816, %817, %818)
// SOURCE-NEXT:                       // %819 = "2|0|4|3|1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %820 = jsir.object_property (%819) {#jsir<string_literal   <L 167 C 4>, <L 167 C 11>, 5710, 5717, 18, "ZUNtd",  "'ZUNtd'", "ZUNtd">, false}
// SOURCE-NEXT:                       // %820 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %821 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %936 = jsir.identifier_ref {"_0x38801d"}
// SOURCE-NEXT:                           // %936 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %937 = jsir.identifier_ref {"_0xf075cb"}
// SOURCE-NEXT:                           // %937 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%936, %937)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %932 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %932 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%932) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%932) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %933 = jsir.identifier {"_0x38801d"}
// SOURCE-NEXT:                           // %933 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %934 = jsir.identifier {"_0xf075cb"}
// SOURCE-NEXT:                           // %934 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %935 = jsir.call_expression (%933, %934)
// SOURCE-NEXT:                           // %935 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%935)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%932) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %821 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %822 = jsir.object_property (%821) {#jsir<string_literal   <L 168 C 4>, <L 168 C 11>, 5762, 5769, 18, "soDZs",  "'soDZs'", "soDZs">, false}
// SOURCE-NEXT:                       // %822 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %823 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %930 = jsir.identifier_ref {"_0x320e85"}
// SOURCE-NEXT:                           // %930 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %931 = jsir.identifier_ref {"_0x58fb4d"}
// SOURCE-NEXT:                           // %931 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%930, %931)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %926 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %926 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%926) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%926) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %927 = jsir.identifier {"_0x320e85"}
// SOURCE-NEXT:                           // %927 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %928 = jsir.identifier {"_0x58fb4d"}
// SOURCE-NEXT:                           // %928 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %929 = jsir.binary_expression (%927, %928) {"+"}
// SOURCE-NEXT:                           // %929 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%929)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%926) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %823 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %824 = jsir.object_property (%823) {#jsir<string_literal   <L 171 C 4>, <L 171 C 11>, 5850, 5857, 18, "NieDC",  "'NieDC'", "NieDC">, false}
// SOURCE-NEXT:                       // %824 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %825 = jsir.string_literal {#jsir<string_literal_extra "'return\\x20(fu'", "return (fu">, "return (fu"}
// SOURCE-NEXT:                       // %825 = "return (fu"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %826 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %826 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %827 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x107", 2.630000e+02 : f64>, 2.630000e+02 : f64}
// SOURCE-NEXT:                       // %827 = 2.630000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %828 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10c", 2.680000e+02 : f64>, 2.680000e+02 : f64}
// SOURCE-NEXT:                       // %828 = 2.680000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %829 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x118", 2.800000e+02 : f64>, 2.800000e+02 : f64}
// SOURCE-NEXT:                       // %829 = 2.800000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %830 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x108", 2.640000e+02 : f64>, 2.640000e+02 : f64}
// SOURCE-NEXT:                       // %830 = 2.640000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %831 = jsir.call_expression (%826, %827, %828, %829, %830)
// SOURCE-NEXT:                       // %831 = "nction() "
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %832 = jsir.binary_expression (%825, %831) {"+"}
// SOURCE-NEXT:                       // %832 = "return (function() "
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %833 = jsir.object_property (%832) {#jsir<string_literal   <L 174 C 4>, <L 174 C 11>, 5939, 5946, 18, "yEDez",  "'yEDez'", "yEDez">, false}
// SOURCE-NEXT:                       // %833 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %834 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %834 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %835 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11b", 2.830000e+02 : f64>, 2.830000e+02 : f64}
// SOURCE-NEXT:                       // %835 = 2.830000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %836 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x109", 2.650000e+02 : f64>, 2.650000e+02 : f64}
// SOURCE-NEXT:                       // %836 = 2.650000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %837 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x108", 2.640000e+02 : f64>, 2.640000e+02 : f64}
// SOURCE-NEXT:                       // %837 = 2.640000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %838 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:                       // %838 = 2.980000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %839 = jsir.call_expression (%834, %835, %836, %837, %838)
// SOURCE-NEXT:                       // %839 = "{}.constru"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %840 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %840 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %841 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x52", 8.200000e+01 : f64>, 8.200000e+01 : f64}
// SOURCE-NEXT:                       // %841 = 8.200000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %842 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3f", 6.300000e+01 : f64>, 6.300000e+01 : f64}
// SOURCE-NEXT:                       // %842 = 6.300000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %843 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x62", 9.800000e+01 : f64>, 9.800000e+01 : f64}
// SOURCE-NEXT:                       // %843 = 9.800000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %844 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4e", 7.800000e+01 : f64>, 7.800000e+01 : f64}
// SOURCE-NEXT:                       // %844 = 7.800000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %845 = jsir.call_expression (%840, %841, %842, %843, %844)
// SOURCE-NEXT:                       // %845 = "ctor(\22retu"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %846 = jsir.binary_expression (%839, %845) {"+"}
// SOURCE-NEXT:                       // %846 = "{}.constructor(\22retu"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %847 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %847 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %848 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x121", 2.890000e+02 : f64>, 2.890000e+02 : f64}
// SOURCE-NEXT:                       // %848 = 2.890000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %849 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x119", 2.810000e+02 : f64>, 2.810000e+02 : f64}
// SOURCE-NEXT:                       // %849 = 2.810000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %850 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x137", 3.110000e+02 : f64>, 3.110000e+02 : f64}
// SOURCE-NEXT:                       // %850 = 3.110000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %851 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:                       // %851 = 2.980000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %852 = jsir.call_expression (%847, %848, %849, %850, %851)
// SOURCE-NEXT:                       // %852 = "rn this\22)("
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %853 = jsir.binary_expression (%846, %852) {"+"}
// SOURCE-NEXT:                       // %853 = "{}.constructor(\22return this\22)("
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %854 = jsir.string_literal {#jsir<string_literal_extra "'\\x20)'", " )">, " )"}
// SOURCE-NEXT:                       // %854 = " )"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %855 = jsir.binary_expression (%853, %854) {"+"}
// SOURCE-NEXT:                       // %855 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %856 = jsir.object_property (%855) {#jsir<string_literal   <L 175 C 4>, <L 175 C 11>, 6009, 6016, 18, "ZEmIi",  "'ZEmIi'", "ZEmIi">, false}
// SOURCE-NEXT:                       // %856 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %857 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %924 = jsir.identifier_ref {"_0x482b82"}
// SOURCE-NEXT:                           // %924 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %925 = jsir.identifier_ref {"_0x2bafd9"}
// SOURCE-NEXT:                           // %925 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%924, %925)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %920 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %920 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%920) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%920) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %921 = jsir.identifier {"_0x482b82"}
// SOURCE-NEXT:                           // %921 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %922 = jsir.identifier {"_0x2bafd9"}
// SOURCE-NEXT:                           // %922 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %923 = jsir.binary_expression (%921, %922) {"<"}
// SOURCE-NEXT:                           // %923 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%923)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%920) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %857 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %858 = jsir.object_property (%857) {#jsir<string_literal   <L 178 C 4>, <L 178 C 11>, 6163, 6170, 18, "jXOCo",  "'jXOCo'", "jXOCo">, false}
// SOURCE-NEXT:                       // %858 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %859 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %859 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %860 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x47", 7.100000e+01 : f64>, 7.100000e+01 : f64}
// SOURCE-NEXT:                       // %860 = 7.100000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %861 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x64", 1.000000e+02 : f64>, 1.000000e+02 : f64}
// SOURCE-NEXT:                       // %861 = 1.000000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %862 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x66", 1.020000e+02 : f64>, 1.020000e+02 : f64}
// SOURCE-NEXT:                       // %862 = 1.020000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %863 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x50", 8.000000e+01 : f64>, 8.000000e+01 : f64}
// SOURCE-NEXT:                       // %863 = 8.000000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %864 = jsir.call_expression (%859, %860, %861, %862, %863)
// SOURCE-NEXT:                       // %864 = "3|0|2|4|5|"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %865 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %865 = "1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %866 = jsir.binary_expression (%864, %865) {"+"}
// SOURCE-NEXT:                       // %866 = "3|0|2|4|5|1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %867 = jsir.object_property (%866) {#jsir<string_literal   <L 181 C 4>, <L 181 C 11>, 6252, 6259, 18, "GyCwQ",  "'GyCwQ'", "GyCwQ">, false}
// SOURCE-NEXT:                       // %867 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %868 = jsir.string_literal {#jsir<string_literal_extra "'log'", "log">, "log"}
// SOURCE-NEXT:                       // %868 = "log"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %869 = jsir.object_property (%868) {#jsir<string_literal   <L 182 C 4>, <L 182 C 11>, 6306, 6313, 18, "Fmzmy",  "'Fmzmy'", "Fmzmy">, false}
// SOURCE-NEXT:                       // %869 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %870 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %870 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %871 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4b", 7.500000e+01 : f64>, 7.500000e+01 : f64}
// SOURCE-NEXT:                       // %871 = 7.500000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %872 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22", 3.400000e+01 : f64>, 3.400000e+01 : f64}
// SOURCE-NEXT:                       // %872 = 3.400000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %873 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b", 5.900000e+01 : f64>, 5.900000e+01 : f64}
// SOURCE-NEXT:                       // %873 = 5.900000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %874 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38", 5.600000e+01 : f64>, 5.600000e+01 : f64}
// SOURCE-NEXT:                       // %874 = 5.600000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %875 = jsir.call_expression (%870, %871, %872, %873, %874)
// SOURCE-NEXT:                       // %875 = "warn"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %876 = jsir.object_property (%875) {#jsir<string_literal   <L 183 C 4>, <L 183 C 11>, 6326, 6333, 18, "bDDQL",  "'bDDQL'", "bDDQL">, false}
// SOURCE-NEXT:                       // %876 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %877 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %877 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %878 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13a", 3.140000e+02 : f64>, 3.140000e+02 : f64}
// SOURCE-NEXT:                       // %878 = 3.140000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %879 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x132", 3.060000e+02 : f64>, 3.060000e+02 : f64}
// SOURCE-NEXT:                       // %879 = 3.060000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %880 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x136", 3.100000e+02 : f64>, 3.100000e+02 : f64}
// SOURCE-NEXT:                       // %880 = 3.100000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %881 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x150", 3.360000e+02 : f64>, 3.360000e+02 : f64}
// SOURCE-NEXT:                       // %881 = 3.360000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %882 = jsir.call_expression (%877, %878, %879, %880, %881)
// SOURCE-NEXT:                       // %882 = "info"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %883 = jsir.object_property (%882) {#jsir<string_literal   <L 184 C 4>, <L 184 C 11>, 6374, 6381, 18, "wkULH",  "'wkULH'", "wkULH">, false}
// SOURCE-NEXT:                       // %883 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %884 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %884 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %885 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x122", 2.900000e+02 : f64>, 2.900000e+02 : f64}
// SOURCE-NEXT:                       // %885 = 2.900000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %886 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x122", 2.900000e+02 : f64>, 2.900000e+02 : f64}
// SOURCE-NEXT:                       // %886 = 2.900000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %887 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10a", 2.660000e+02 : f64>, 2.660000e+02 : f64}
// SOURCE-NEXT:                       // %887 = 2.660000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %888 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x139", 3.130000e+02 : f64>, 3.130000e+02 : f64}
// SOURCE-NEXT:                       // %888 = 3.130000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %889 = jsir.call_expression (%884, %885, %886, %887, %888)
// SOURCE-NEXT:                       // %889 = "error"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %890 = jsir.object_property (%889) {#jsir<string_literal   <L 185 C 4>, <L 185 C 11>, 6426, 6433, 18, "Wftmu",  "'Wftmu'", "Wftmu">, false}
// SOURCE-NEXT:                       // %890 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %891 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %891 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %892 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x127", 2.950000e+02 : f64>, 2.950000e+02 : f64}
// SOURCE-NEXT:                       // %892 = 2.950000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %893 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x138", 3.120000e+02 : f64>, 3.120000e+02 : f64}
// SOURCE-NEXT:                       // %893 = 3.120000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %894 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x120", 2.880000e+02 : f64>, 2.880000e+02 : f64}
// SOURCE-NEXT:                       // %894 = 2.880000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %895 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11c", 2.840000e+02 : f64>, 2.840000e+02 : f64}
// SOURCE-NEXT:                       // %895 = 2.840000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %896 = jsir.call_expression (%891, %892, %893, %894, %895)
// SOURCE-NEXT:                       // %896 = "exception"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %897 = jsir.object_property (%896) {#jsir<string_literal   <L 186 C 4>, <L 186 C 11>, 6478, 6485, 18, "gXlVo",  "'gXlVo'", "gXlVo">, false}
// SOURCE-NEXT:                       // %897 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %898 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                       // %898 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %899 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x116", 2.780000e+02 : f64>, 2.780000e+02 : f64}
// SOURCE-NEXT:                       // %899 = 2.780000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %900 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x100", 2.560000e+02 : f64>, 2.560000e+02 : f64}
// SOURCE-NEXT:                       // %900 = 2.560000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %901 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x121", 2.890000e+02 : f64>, 2.890000e+02 : f64}
// SOURCE-NEXT:                       // %901 = 2.890000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %902 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x105", 2.610000e+02 : f64>, 2.610000e+02 : f64}
// SOURCE-NEXT:                       // %902 = 2.610000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %903 = jsir.call_expression (%898, %899, %900, %901, %902)
// SOURCE-NEXT:                       // %903 = "table"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %904 = jsir.object_property (%903) {#jsir<string_literal   <L 187 C 4>, <L 187 C 11>, 6530, 6537, 18, "DRyXW",  "'DRyXW'", "DRyXW">, false}
// SOURCE-NEXT:                       // %904 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %905 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %919 = jsir.identifier_ref {"_0x4d07dc"}
// SOURCE-NEXT:                           // %919 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%919)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %916 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %916 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%916) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%916) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %917 = jsir.identifier {"_0x4d07dc"}
// SOURCE-NEXT:                           // %917 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %918 = jsir.call_expression (%917)
// SOURCE-NEXT:                           // %918 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%918)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%916) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %905 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %906 = jsir.object_property (%905) {#jsir<string_literal   <L 188 C 4>, <L 188 C 11>, 6582, 6589, 18, "fPEpB",  "'fPEpB'", "fPEpB">, false}
// SOURCE-NEXT:                       // %906 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %907 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                       // %907 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %908 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x25", 3.700000e+01 : f64>, 3.700000e+01 : f64}
// SOURCE-NEXT:                       // %908 = 3.700000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %909 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x26", 3.800000e+01 : f64>, 3.800000e+01 : f64}
// SOURCE-NEXT:                       // %909 = 3.800000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %910 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e", 3.000000e+01 : f64>, 3.000000e+01 : f64}
// SOURCE-NEXT:                       // %910 = 3.000000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %911 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x29", 4.100000e+01 : f64>, 4.100000e+01 : f64}
// SOURCE-NEXT:                       // %911 = 4.100000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %912 = jsir.call_expression (%907, %908, %909, %910, %911)
// SOURCE-NEXT:                       // %912 = "Hello Worl"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %913 = jsir.string_literal {#jsir<string_literal_extra "'d!'", "d!">, "d!"}
// SOURCE-NEXT:                       // %913 = "d!"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %914 = jsir.binary_expression (%912, %913) {"+"}
// SOURCE-NEXT:                       // %914 = "Hello World!"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %915 = jsir.object_property (%914) {#jsir<string_literal   <L 191 C 4>, <L 191 C 11>, 6650, 6657, 18, "Xxejz",  "'Xxejz'", "Xxejz">, false}
// SOURCE-NEXT:                       // %915 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%790, %797, %799, %806, %813, %820, %822, %824, %833, %856, %858, %867, %869, %876, %883, %890, %897, %904, %906, %915)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %787 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %788 = jsir.variable_declarator (%786, %787)
// SOURCE-NEXT:                   // %788 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%788)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 193 C 11>, <L 193 C 20>, "_0x3e158c", 6716, 6725, 25, "_0x3e158c">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %782 = jsir.identifier_ref {"_0x3bd438"}
// SOURCE-NEXT:                   // %782 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %783 = jsir.identifier_ref {"_0x53f095"}
// SOURCE-NEXT:                   // %783 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %784 = jsir.identifier_ref {"_0x2b1b5d"}
// SOURCE-NEXT:                   // %784 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %785 = jsir.identifier_ref {"_0x1150ec"}
// SOURCE-NEXT:                   // %785 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%782, %783, %784, %785)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %774 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %774 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%774) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%774) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %775 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                   // %775 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %776 = jsir.identifier {"_0x1150ec"}
// SOURCE-NEXT:                   // %776 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %777 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x157", 3.430000e+02 : f64>, 3.430000e+02 : f64}
// SOURCE-NEXT:                   // %777 = 3.430000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %778 = jsir.unary_expression (%777) {"-", true}
// SOURCE-NEXT:                   // %778 = -3.430000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %779 = jsir.binary_expression (%776, %778) {"-"}
// SOURCE-NEXT:                   // %779 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %780 = jsir.identifier {"_0x2b1b5d"}
// SOURCE-NEXT:                   // %780 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %781 = jsir.call_expression (%775, %779, %780)
// SOURCE-NEXT:                   // %781 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%781)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%774) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %622 = jsir.identifier_ref {"_0x58a38a"}
// SOURCE-NEXT:                   // %622 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %623 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %627 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %627 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%627) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%627) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %769 = jsir.identifier_ref {"_0x10bab4"}
// SOURCE-NEXT:                           // %769 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %770 = jsir.array_expression
// SOURCE-NEXT:                           // %770 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %771 = jsir.unary_expression (%770) {"!", true}
// SOURCE-NEXT:                           // %771 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %772 = jsir.unary_expression (%771) {"!", true}
// SOURCE-NEXT:                           // %772 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %773 = jsir.variable_declarator (%769, %772)
// SOURCE-NEXT:                           // %773 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%773)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %628 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %767 = jsir.identifier_ref {"_0x1008f4"}
// SOURCE-NEXT:                           // %767 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %768 = jsir.identifier_ref {"_0x4f3fc0"}
// SOURCE-NEXT:                           // %768 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%767, %768)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %629 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %629 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%629) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%629) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 199 C 15>, <L 199 C 24>, "_0x3e158c", 6944, 6953, 28, "_0x3e158c">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %763 = jsir.identifier_ref {"_0x22e15e"}
// SOURCE-NEXT:                               // %763 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %764 = jsir.identifier_ref {"_0x5174c3"}
// SOURCE-NEXT:                               // %764 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %765 = jsir.identifier_ref {"_0x1241d4"}
// SOURCE-NEXT:                               // %765 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %766 = jsir.identifier_ref {"_0x8ab890"}
// SOURCE-NEXT:                               // %766 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%763, %764, %765, %766)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %756 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %756 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%756) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%756) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %757 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                               // %757 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %758 = jsir.identifier {"_0x8ab890"}
// SOURCE-NEXT:                               // %758 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %759 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11b", 2.830000e+02 : f64>, 2.830000e+02 : f64}
// SOURCE-NEXT:                               // %759 = 2.830000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %760 = jsir.binary_expression (%758, %759) {"-"}
// SOURCE-NEXT:                               // %760 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %761 = jsir.identifier {"_0x5174c3"}
// SOURCE-NEXT:                               // %761 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %762 = jsir.call_expression (%757, %760, %761)
// SOURCE-NEXT:                               // %762 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%762)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%756) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 202 C 15>, <L 202 C 24>, "_0x167d7e", 7077, 7086, 29, "_0x167d7e">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %752 = jsir.identifier_ref {"_0x3c0256"}
// SOURCE-NEXT:                               // %752 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %753 = jsir.identifier_ref {"_0x2b47e1"}
// SOURCE-NEXT:                               // %753 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %754 = jsir.identifier_ref {"_0x4957e3"}
// SOURCE-NEXT:                               // %754 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %755 = jsir.identifier_ref {"_0x3b662d"}
// SOURCE-NEXT:                               // %755 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%752, %753, %754, %755)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %745 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %745 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%745) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%745) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %746 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                               // %746 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %747 = jsir.identifier {"_0x4957e3"}
// SOURCE-NEXT:                               // %747 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %748 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                               // %748 = 4.910000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %749 = jsir.binary_expression (%747, %748) {"-"}
// SOURCE-NEXT:                               // %749 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %750 = jsir.identifier {"_0x3c0256"}
// SOURCE-NEXT:                               // %750 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %751 = jsir.call_expression (%746, %749, %750)
// SOURCE-NEXT:                               // %751 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%751)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%745) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %630 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %630 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %631 = jsir.string_literal {#jsir<string_literal_extra "'cmIIa'", "cmIIa">, "cmIIa"}
// SOURCE-NEXT:                           // %631 = "cmIIa"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %632 = jsir.member_expression (%630, %631)
// SOURCE-NEXT:                           // %632 = #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %633 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %633 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %634 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                           // %634 = #jsir_builtin<inline_expression_function  "_0x22e15e", 28,  "_0x5174c3", 28,  "_0x1241d4", 28,  "_0x8ab890", 28, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8ab890", 28>, 2.830000e+02 : f64, "-">, #jsir<symbol_id "_0x5174c3", 28>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %635 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2c2", 7.060000e+02 : f64>, 7.060000e+02 : f64}
// SOURCE-NEXT:                           // %635 = 7.060000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %636 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2b8", 6.960000e+02 : f64>, 6.960000e+02 : f64}
// SOURCE-NEXT:                           // %636 = 6.960000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %637 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2bc", 7.000000e+02 : f64>, 7.000000e+02 : f64}
// SOURCE-NEXT:                           // %637 = 7.000000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %638 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ca", 7.140000e+02 : f64>, 7.140000e+02 : f64}
// SOURCE-NEXT:                           // %638 = 7.140000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %639 = jsir.call_expression (%634, %635, %636, %637, %638)
// SOURCE-NEXT:                           // %639 = "rvTTb"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %640 = jsir.member_expression (%633, %639)
// SOURCE-NEXT:                           // %640 = "LtmRg"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %641 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                           // %641 = #jsir_builtin<inline_expression_function  "_0x22e15e", 28,  "_0x5174c3", 28,  "_0x1241d4", 28,  "_0x8ab890", 28, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8ab890", 28>, 2.830000e+02 : f64, "-">, #jsir<symbol_id "_0x5174c3", 28>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %642 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2c4", 7.080000e+02 : f64>, 7.080000e+02 : f64}
// SOURCE-NEXT:                           // %642 = 7.080000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %643 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2a5", 6.770000e+02 : f64>, 6.770000e+02 : f64}
// SOURCE-NEXT:                           // %643 = 6.770000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %644 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2c2", 7.060000e+02 : f64>, 7.060000e+02 : f64}
// SOURCE-NEXT:                           // %644 = 7.060000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %645 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2af", 6.870000e+02 : f64>, 6.870000e+02 : f64}
// SOURCE-NEXT:                           // %645 = 6.870000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %646 = jsir.call_expression (%641, %642, %643, %644, %645)
// SOURCE-NEXT:                           // %646 = "VmyVp"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %647 = jsir.call_expression (%632, %640, %646)
// SOURCE-NEXT:                           // %647 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %648 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                           // %648 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %649 = builtin.unrealized_conversion_cast (%647)
// SOURCE-NEXT:                           // %649 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%649) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%648) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %650 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %650 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%650) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%650) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %691 = jsir.identifier_ref {"_0x5b6c55"}
// SOURCE-NEXT:                               // %691 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %692 = jsir.identifier {"_0x3f313a"}
// SOURCE-NEXT:                               // %692 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %693 = jslir.control_flow_starter {#jsir<cf_kind ConditionalExpression>}
// SOURCE-NEXT:                               // %693 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %694 = builtin.unrealized_conversion_cast (%692)
// SOURCE-NEXT:                               // %694 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.cond_br (%694) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb1:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%693) {#jsir<cf_marker ConditionalExpressionAlternate>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %695 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %744 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %744 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%744) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%744) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%744) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %695 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.br (%695)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb2:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%693) {#jsir<cf_marker ConditionalExpressionConsequent>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %696 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %699 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %699 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%699) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%699) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.function_declaration {false, false, #jsir<identifier   <L 209 C 19>, <L 209 C 28>, "_0x552a36", 7413, 7422, 32, "_0x552a36">} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %740 = jsir.identifier_ref {"_0x5b91b5"}
// SOURCE-NEXT:                                       // %740 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %741 = jsir.identifier_ref {"_0x5a4c29"}
// SOURCE-NEXT:                                       // %741 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %742 = jsir.identifier_ref {"_0x102518"}
// SOURCE-NEXT:                                       // %742 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %743 = jsir.identifier_ref {"_0x1d60e6"}
// SOURCE-NEXT:                                       // %743 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%740, %741, %742, %743)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 }, {
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %726 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                       // %726 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%726) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%726) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %727 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                                       // %727 = #jsir_builtin<inline_expression_function  "_0x22e15e", 28,  "_0x5174c3", 28,  "_0x1241d4", 28,  "_0x8ab890", 28, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8ab890", 28>, 2.830000e+02 : f64, "-">, #jsir<symbol_id "_0x5174c3", 28>>>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %728 = jsir.identifier {"_0x5b91b5"}
// SOURCE-NEXT:                                       // %728 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %729 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x111", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:                                       // %729 = 2.730000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %730 = jsir.binary_expression (%728, %729) {"-"}
// SOURCE-NEXT:                                       // %730 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %731 = jsir.identifier {"_0x5a4c29"}
// SOURCE-NEXT:                                       // %731 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %732 = jsir.identifier {"_0x102518"}
// SOURCE-NEXT:                                       // %732 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %733 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x51", 8.100000e+01 : f64>, 8.100000e+01 : f64}
// SOURCE-NEXT:                                       // %733 = 8.100000e+01 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %734 = jsir.binary_expression (%732, %733) {"-"}
// SOURCE-NEXT:                                       // %734 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %735 = jsir.identifier {"_0x102518"}
// SOURCE-NEXT:                                       // %735 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %736 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b2", 9.460000e+02 : f64>, 9.460000e+02 : f64}
// SOURCE-NEXT:                                       // %736 = 9.460000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %737 = jsir.unary_expression (%736) {"-", true}
// SOURCE-NEXT:                                       // %737 = -9.460000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %738 = jsir.binary_expression (%735, %737) {"-"}
// SOURCE-NEXT:                                       // %738 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %739 = jsir.call_expression (%727, %730, %731, %734, %738)
// SOURCE-NEXT:                                       // %739 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.return_statement (%739)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%726) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %700 = jsir.identifier {"_0x330f38"}
// SOURCE-NEXT:                                   // %700 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %701 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                                   // %701 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %702 = builtin.unrealized_conversion_cast (%700)
// SOURCE-NEXT:                                   // %702 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 cf.cond_br (%702) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                               ^bb1:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%701) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %703 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %703 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%703) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%703) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %709 = jsir.identifier_ref {"_0x62708b"}
// SOURCE-NEXT:                                       // %709 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %710 = jsir.identifier {"_0x293663"}
// SOURCE-NEXT:                                       // %710 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %711 = jsir.identifier {"_0x552a36"}
// SOURCE-NEXT:                                       // %711 = #jsir_builtin<inline_expression_function  "_0x5b91b5", 32,  "_0x5a4c29", 32,  "_0x102518", 32,  "_0x1d60e6", 32, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 27>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5b91b5", 32>, 2.730000e+02 : f64, "-">, #jsir<symbol_id "_0x5a4c29", 32>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x102518", 32>, 8.100000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x102518", 32>, #jsir_builtin<inline_expression_unary_expression 9.460000e+02 : f64, "-">, "-">>>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %712 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf9", 2.490000e+02 : f64>, 2.490000e+02 : f64}
// SOURCE-NEXT:                                       // %712 = 2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %713 = jsir.unary_expression (%712) {"-", true}
// SOURCE-NEXT:                                       // %713 = -2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %714 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf9", 2.490000e+02 : f64>, 2.490000e+02 : f64}
// SOURCE-NEXT:                                       // %714 = 2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %715 = jsir.unary_expression (%714) {"-", true}
// SOURCE-NEXT:                                       // %715 = -2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %716 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf9", 2.490000e+02 : f64>, 2.490000e+02 : f64}
// SOURCE-NEXT:                                       // %716 = 2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %717 = jsir.unary_expression (%716) {"-", true}
// SOURCE-NEXT:                                       // %717 = -2.490000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %718 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf7", 2.470000e+02 : f64>, 2.470000e+02 : f64}
// SOURCE-NEXT:                                       // %718 = 2.470000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %719 = jsir.unary_expression (%718) {"-", true}
// SOURCE-NEXT:                                       // %719 = -2.470000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %720 = jsir.call_expression (%711, %713, %715, %717, %719)
// SOURCE-NEXT:                                       // %720 = "apply"
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %721 = jsir.member_expression (%710, %720)
// SOURCE-NEXT:                                       // %721 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %722 = jsir.identifier {"_0x408f4b"}
// SOURCE-NEXT:                                       // %722 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %723 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                                       // %723 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %724 = jsir.call_expression (%721, %722, %723)
// SOURCE-NEXT:                                       // %724 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %725 = jsir.variable_declarator (%709, %724)
// SOURCE-NEXT:                                       // %725 = <uninitialized>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%725)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %704 = jsir.identifier_ref {"_0x3b8fa6"}
// SOURCE-NEXT:                                   // %704 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %705 = jsir.null_literal
// SOURCE-NEXT:                                   // %705 = #jsir.null_literal
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %706 = jsir.assignment_expression (%704, %705) {"="}
// SOURCE-NEXT:                                   // %706 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 %707 = jsir.identifier {"_0x62708b"}
// SOURCE-NEXT:                                   // %707 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 %708 = jsir.sequence_expression (%706, %707)
// SOURCE-NEXT:                                   // %708 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 jsir.return_statement (%708)
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%703) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 cf.br
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                               ^bb2:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%701) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%699) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %696 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.br (%696)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb3:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%693) {#jsir<cf_marker ConditionalExpressionEnd>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %698 = jsir.variable_declarator (%691, %697)
// SOURCE-NEXT:                               // %698 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%698)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %651 = jsir.identifier_ref {"_0x5ac793"}
// SOURCE-NEXT:                           // %651 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %652 = jsir.array_expression
// SOURCE-NEXT:                           // %652 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %653 = jsir.unary_expression (%652) {"!", true}
// SOURCE-NEXT:                           // %653 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %654 = jsir.assignment_expression (%651, %653) {"="}
// SOURCE-NEXT:                           // %654 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %655 = jsir.identifier {"_0x5b6c55"}
// SOURCE-NEXT:                           // %655 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %656 = jsir.sequence_expression (%654, %655)
// SOURCE-NEXT:                           // %656 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.return_statement (%656)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%650) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%648) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %657 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %657 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%657) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%657) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %664 = jsir.identifier_ref {"_0x46af11"}
// SOURCE-NEXT:                               // %664 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %665 = jsir.identifier {"_0x10bab4"}
// SOURCE-NEXT:                               // %665 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %666 = jslir.control_flow_starter {#jsir<cf_kind ConditionalExpression>}
// SOURCE-NEXT:                               // %666 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %667 = builtin.unrealized_conversion_cast (%665)
// SOURCE-NEXT:                               // %667 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.cond_br (%667) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb1:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%666) {#jsir<cf_marker ConditionalExpressionAlternate>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %668 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %690 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %690 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%690) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%690) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%690) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %668 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.br (%668)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb2:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%666) {#jsir<cf_marker ConditionalExpressionConsequent>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %669 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %672 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %672 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%672) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%672) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %673 = jsir.identifier {"_0x4f3fc0"}
// SOURCE-NEXT:                                   // %673 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %674 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                                   // %674 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %675 = builtin.unrealized_conversion_cast (%673)
// SOURCE-NEXT:                                   // %675 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 cf.cond_br (%675) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                               ^bb1:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%674) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %676 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %676 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%676) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%676) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %682 = jsir.identifier_ref {"_0x5b3fd6"}
// SOURCE-NEXT:                                       // %682 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %683 = jsir.identifier {"_0x4f3fc0"}
// SOURCE-NEXT:                                       // %683 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %684 = jsir.string_literal {#jsir<string_literal_extra "'apply'", "apply">, "apply"}
// SOURCE-NEXT:                                       // %684 = "apply"
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %685 = jsir.member_expression (%683, %684)
// SOURCE-NEXT:                                       // %685 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %686 = jsir.identifier {"_0x1008f4"}
// SOURCE-NEXT:                                       // %686 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %687 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                                       // %687 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %688 = jsir.call_expression (%685, %686, %687)
// SOURCE-NEXT:                                       // %688 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %689 = jsir.variable_declarator (%682, %688)
// SOURCE-NEXT:                                       // %689 = <uninitialized>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%689)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %677 = jsir.identifier_ref {"_0x4f3fc0"}
// SOURCE-NEXT:                                   // %677 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %678 = jsir.null_literal
// SOURCE-NEXT:                                   // %678 = #jsir.null_literal
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %679 = jsir.assignment_expression (%677, %678) {"="}
// SOURCE-NEXT:                                   // %679 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 %680 = jsir.identifier {"_0x5b3fd6"}
// SOURCE-NEXT:                                   // %680 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 %681 = jsir.sequence_expression (%679, %680)
// SOURCE-NEXT:                                   // %681 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 jsir.return_statement (%681)
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%676) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 cf.br
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                               ^bb2:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%674) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%672) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %669 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.br (%669)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb3:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%666) {#jsir<cf_marker ConditionalExpressionEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %671 = jsir.variable_declarator (%664, %670)
// SOURCE-NEXT:                               // %671 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%671)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %658 = jsir.identifier_ref {"_0x10bab4"}
// SOURCE-NEXT:                           // %658 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %659 = jsir.array_expression
// SOURCE-NEXT:                           // %659 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %660 = jsir.unary_expression (%659) {"!", true}
// SOURCE-NEXT:                           // %660 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %661 = jsir.assignment_expression (%658, %660) {"="}
// SOURCE-NEXT:                           // %661 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %662 = jsir.identifier {"_0x46af11"}
// SOURCE-NEXT:                           // %662 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %663 = jsir.sequence_expression (%661, %662)
// SOURCE-NEXT:                           // %663 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%663)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%657) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb3:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%648) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%629) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %628 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%628)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%627) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %623 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %624 = jsir.call_expression (%623)
// SOURCE-NEXT:                   // %624 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %625 = jsir.parenthesized_expression (%624)
// SOURCE-NEXT:                   // %625 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %626 = jsir.variable_declarator (%622, %625)
// SOURCE-NEXT:                   // %626 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%626)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 232 C 11>, <L 232 C 20>, "_0x5fb062", 8211, 8220, 39, "_0x5fb062">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %618 = jsir.identifier_ref {"_0x1176c2"}
// SOURCE-NEXT:                   // %618 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %619 = jsir.identifier_ref {"_0x37fd7c"}
// SOURCE-NEXT:                   // %619 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %620 = jsir.identifier_ref {"_0x5718e5"}
// SOURCE-NEXT:                   // %620 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %621 = jsir.identifier_ref {"_0x3d07ce"}
// SOURCE-NEXT:                   // %621 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%618, %619, %620, %621)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %610 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %610 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%610) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%610) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %611 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                   // %611 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %612 = jsir.identifier {"_0x1176c2"}
// SOURCE-NEXT:                   // %612 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %613 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x7a", 1.220000e+02 : f64>, 1.220000e+02 : f64}
// SOURCE-NEXT:                   // %613 = 1.220000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %614 = jsir.unary_expression (%613) {"-", true}
// SOURCE-NEXT:                   // %614 = -1.220000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %615 = jsir.binary_expression (%612, %614) {"-"}
// SOURCE-NEXT:                   // %615 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %616 = jsir.identifier {"_0x37fd7c"}
// SOURCE-NEXT:                   // %616 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %617 = jsir.call_expression (%611, %615, %616)
// SOURCE-NEXT:                   // %617 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%617)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%610) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %31 = jsir.identifier_ref {"_0x5a5e61"}
// SOURCE-NEXT:                   // %31 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %32 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                   // %32 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %33 = jsir.this_expression
// SOURCE-NEXT:                   // %33 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %34 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %37 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %37 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%37) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%37) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.function_declaration {false, false, #jsir<identifier   <L 236 C 13>, <L 236 C 22>, "_0x9092eb", 8381, 8390, 41, "_0x9092eb">} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %606 = jsir.identifier_ref {"_0x4068cb"}
// SOURCE-NEXT:                           // %606 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %607 = jsir.identifier_ref {"_0x4ee7f0"}
// SOURCE-NEXT:                           // %607 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %608 = jsir.identifier_ref {"_0x2d9ed5"}
// SOURCE-NEXT:                           // %608 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %609 = jsir.identifier_ref {"_0x497bbc"}
// SOURCE-NEXT:                           // %609 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%606, %607, %608, %609)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %593 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %593 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%593) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%593) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %594 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                           // %594 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %595 = jsir.identifier {"_0x497bbc"}
// SOURCE-NEXT:                           // %595 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %596 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c9", 4.570000e+02 : f64>, 4.570000e+02 : f64}
// SOURCE-NEXT:                           // %596 = 4.570000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %597 = jsir.binary_expression (%595, %596) {"-"}
// SOURCE-NEXT:                           // %597 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %598 = jsir.identifier {"_0x4ee7f0"}
// SOURCE-NEXT:                           // %598 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %599 = jsir.identifier {"_0x2d9ed5"}
// SOURCE-NEXT:                           // %599 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %600 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x171", 3.690000e+02 : f64>, 3.690000e+02 : f64}
// SOURCE-NEXT:                           // %600 = 3.690000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %601 = jsir.binary_expression (%599, %600) {"-"}
// SOURCE-NEXT:                           // %601 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %602 = jsir.identifier {"_0x497bbc"}
// SOURCE-NEXT:                           // %602 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %603 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x54", 8.400000e+01 : f64>, 8.400000e+01 : f64}
// SOURCE-NEXT:                           // %603 = 8.400000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %604 = jsir.binary_expression (%602, %603) {"-"}
// SOURCE-NEXT:                           // %604 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %605 = jsir.call_expression (%594, %597, %598, %601, %604)
// SOURCE-NEXT:                           // %605 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%605)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%593) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.function_declaration {false, false, #jsir<identifier   <L 240 C 13>, <L 240 C 22>, "_0x620196", 8558, 8567, 42, "_0x620196">} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %589 = jsir.identifier_ref {"_0x425af0"}
// SOURCE-NEXT:                           // %589 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %590 = jsir.identifier_ref {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %590 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %591 = jsir.identifier_ref {"_0x4f88d8"}
// SOURCE-NEXT:                           // %591 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %592 = jsir.identifier_ref {"_0x5d56ca"}
// SOURCE-NEXT:                           // %592 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%589, %590, %591, %592)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %576 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %576 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%576) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%576) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %577 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                           // %577 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %578 = jsir.identifier {"_0x425af0"}
// SOURCE-NEXT:                           // %578 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %579 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x58", 8.800000e+01 : f64>, 8.800000e+01 : f64}
// SOURCE-NEXT:                           // %579 = 8.800000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %580 = jsir.binary_expression (%578, %579) {"-"}
// SOURCE-NEXT:                           // %580 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %581 = jsir.identifier {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %581 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %582 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x18a", 3.940000e+02 : f64>, 3.940000e+02 : f64}
// SOURCE-NEXT:                           // %582 = 3.940000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %583 = jsir.binary_expression (%581, %582) {"-"}
// SOURCE-NEXT:                           // %583 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %584 = jsir.identifier {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %584 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %585 = jsir.identifier {"_0x5d56ca"}
// SOURCE-NEXT:                           // %585 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %586 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1be", 4.460000e+02 : f64>, 4.460000e+02 : f64}
// SOURCE-NEXT:                           // %586 = 4.460000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %587 = jsir.binary_expression (%585, %586) {"-"}
// SOURCE-NEXT:                           // %587 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %588 = jsir.call_expression (%577, %580, %583, %584, %587)
// SOURCE-NEXT:                           // %588 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%588)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%576) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %38 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %38 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %39 = jsir.string_literal {#jsir<string_literal_extra "'BLRju'", "BLRju">, "BLRju"}
// SOURCE-NEXT:                       // %39 = "BLRju"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %40 = jsir.member_expression (%38, %39)
// SOURCE-NEXT:                       // %40 = #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %41 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %41 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %42 = jsir.string_literal {#jsir<string_literal_extra "'INEBZ'", "INEBZ">, "INEBZ"}
// SOURCE-NEXT:                       // %42 = "INEBZ"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %43 = jsir.member_expression (%41, %42)
// SOURCE-NEXT:                       // %43 = "snjPo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %44 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %44 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %45 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %45 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %46 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f3", 7.550000e+02 : f64>, 7.550000e+02 : f64}
// SOURCE-NEXT:                       // %46 = 7.550000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %47 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fe", 7.660000e+02 : f64>, 7.660000e+02 : f64}
// SOURCE-NEXT:                       // %47 = 7.660000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %48 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e2", 7.380000e+02 : f64>, 7.380000e+02 : f64}
// SOURCE-NEXT:                       // %48 = 7.380000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %49 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f2", 7.540000e+02 : f64>, 7.540000e+02 : f64}
// SOURCE-NEXT:                       // %49 = 7.540000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %50 = jsir.call_expression (%45, %46, %47, %48, %49)
// SOURCE-NEXT:                       // %50 = "gCfqE"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %51 = jsir.member_expression (%44, %50)
// SOURCE-NEXT:                       // %51 = "Nngrv"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %52 = jsir.call_expression (%40, %43, %51)
// SOURCE-NEXT:                       // %52 = false
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %53 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                       // %53 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %54 = builtin.unrealized_conversion_cast (%52)
// SOURCE-NEXT:                       // %54 = false
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%54) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb1:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%53) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %55 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %55 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%55) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%55) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %551 = jsir.identifier_ref {"_0x2abedf"}
// SOURCE-NEXT:                           // %551 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %552 = jsir.string_literal {#jsir<string_literal_extra "'5|2|1|4|3|'", "5|2|1|4|3|">, "5|2|1|4|3|"}
// SOURCE-NEXT:                           // %552 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %553 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                           // %553 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %554 = jsir.binary_expression (%552, %553) {"+"}
// SOURCE-NEXT:                           // %554 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %555 = jsir.parenthesized_expression (%554)
// SOURCE-NEXT:                           // %555 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %556 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %556 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %557 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x201", 5.130000e+02 : f64>, 5.130000e+02 : f64}
// SOURCE-NEXT:                           // %557 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %558 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f7", 5.030000e+02 : f64>, 5.030000e+02 : f64}
// SOURCE-NEXT:                           // %558 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %559 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x206", 5.180000e+02 : f64>, 5.180000e+02 : f64}
// SOURCE-NEXT:                           // %559 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %560 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x210", 5.280000e+02 : f64>, 5.280000e+02 : f64}
// SOURCE-NEXT:                           // %560 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %561 = jsir.call_expression (%556, %557, %558, %559, %560)
// SOURCE-NEXT:                           // %561 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %562 = jsir.member_expression (%555, %561)
// SOURCE-NEXT:                           // %562 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %563 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %563 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %564 = jsir.call_expression (%562, %563)
// SOURCE-NEXT:                           // %564 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %565 = jsir.variable_declarator (%551, %564)
// SOURCE-NEXT:                           // %565 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %566 = jsir.identifier_ref {"_0x53335d"}
// SOURCE-NEXT:                           // %566 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %567 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// SOURCE-NEXT:                           // %567 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %568 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x169", 3.610000e+02 : f64>, 3.610000e+02 : f64}
// SOURCE-NEXT:                           // %568 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %569 = jsir.binary_expression (%567, %568) {"*"}
// SOURCE-NEXT:                           // %569 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %570 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22ee", 8.942000e+03 : f64>, 8.942000e+03 : f64}
// SOURCE-NEXT:                           // %570 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %571 = jsir.binary_expression (%569, %570) {"+"}
// SOURCE-NEXT:                           // %571 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %572 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x25c0", 9.664000e+03 : f64>, 9.664000e+03 : f64}
// SOURCE-NEXT:                           // %572 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %573 = jsir.unary_expression (%572) {"-", true}
// SOURCE-NEXT:                           // %573 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %574 = jsir.binary_expression (%571, %573) {"+"}
// SOURCE-NEXT:                           // %574 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %575 = jsir.variable_declarator (%566, %574)
// SOURCE-NEXT:                           // %575 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%565, %575)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %56 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %56 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb2:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%56) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %57 = jsir.array_expression
// SOURCE-NEXT:                       // %57 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %58 = jsir.unary_expression (%57) {"!", true}
// SOURCE-NEXT:                       // %58 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %59 = jsir.unary_expression (%58) {"!", true}
// SOURCE-NEXT:                       // %59 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %60 = builtin.unrealized_conversion_cast (%59)
// SOURCE-NEXT:                       // %60 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%60) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb3:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%56) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %61 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %61 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%61) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%61) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %62 = jsir.identifier {"_0x2abedf"}
// SOURCE-NEXT:                       // %62 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %63 = jsir.identifier_ref {"_0x53335d"}
// SOURCE-NEXT:                       // %63 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %64 = jsir.update_expression (%63) {"++", false}
// SOURCE-NEXT:                       // %64 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %65 = jsir.member_expression (%62, %64)
// SOURCE-NEXT:                       // %65 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %66 = jslir.switch_statement_start (%65)
// SOURCE-NEXT:                       // %66 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb4:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %67 = jslir.switch_statement_case_start (%66) {0 : ui32}
// SOURCE-NEXT:                       // %67 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %68 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %68 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%68)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %69 = jsir.binary_expression (%65, %68) {"==="}
// SOURCE-NEXT:                       // %69 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %70 = builtin.unrealized_conversion_cast (%69)
// SOURCE-NEXT:                       // %70 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%70) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb5:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%67) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %71 = jsir.identifier {"_0x233f7c"}
// SOURCE-NEXT:                       // %71 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %72 = jsir.identifier {"_0x25cc23"}
// SOURCE-NEXT:                       // %72 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %73 = jsir.member_expression_ref (%71, %72)
// SOURCE-NEXT:                       // %73 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %74 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %74 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %75 = jsir.assignment_expression (%73, %74) {"="}
// SOURCE-NEXT:                       // %75 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%75)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb6:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb7:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %76 = jslir.switch_statement_case_start (%66) {1 : ui32}
// SOURCE-NEXT:                       // %76 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %77 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %77 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%77)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %78 = jsir.binary_expression (%65, %77) {"==="}
// SOURCE-NEXT:                       // %78 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %79 = builtin.unrealized_conversion_cast (%78)
// SOURCE-NEXT:                       // %79 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%79) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb8:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%76) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %542 = jsir.identifier_ref {"_0x527da8"}
// SOURCE-NEXT:                           // %542 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %543 = jsir.identifier {"_0x4f1603"}
// SOURCE-NEXT:                           // %543 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %544 = jsir.identifier {"_0x25cc23"}
// SOURCE-NEXT:                           // %544 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %545 = jsir.member_expression (%543, %544)
// SOURCE-NEXT:                           // %545 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %546 = jslir.logical_expression_start (%545) {"||"}
// SOURCE-NEXT:                           // %546 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %547 = builtin.unrealized_conversion_cast (%545)
// SOURCE-NEXT:                           // %547 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.cond_br (%547, %545) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%546) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %548 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                           // %548 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br (%548)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%546) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %550 = jsir.variable_declarator (%542, %549)
// SOURCE-NEXT:                           // %550 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%550)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb9:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb10:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %80 = jslir.switch_statement_case_start (%66) {2 : ui32}
// SOURCE-NEXT:                       // %80 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %81 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %81 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%81)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %82 = jsir.binary_expression (%65, %81) {"==="}
// SOURCE-NEXT:                       // %82 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %83 = builtin.unrealized_conversion_cast (%82)
// SOURCE-NEXT:                       // %83 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%83) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb11:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%80) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %537 = jsir.identifier_ref {"_0x25cc23"}
// SOURCE-NEXT:                           // %537 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %538 = jsir.identifier {"_0x4e0893"}
// SOURCE-NEXT:                           // %538 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %539 = jsir.identifier {"_0x3ab0e9"}
// SOURCE-NEXT:                           // %539 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %540 = jsir.member_expression (%538, %539)
// SOURCE-NEXT:                           // %540 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %541 = jsir.variable_declarator (%537, %540)
// SOURCE-NEXT:                           // %541 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%541)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb12:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb13:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %84 = jslir.switch_statement_case_start (%66) {3 : ui32}
// SOURCE-NEXT:                       // %84 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %85 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %85 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%85)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %86 = jsir.binary_expression (%65, %85) {"==="}
// SOURCE-NEXT:                       // %86 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %87 = builtin.unrealized_conversion_cast (%86)
// SOURCE-NEXT:                       // %87 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%87) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb14:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%84) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %88 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %88 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %89 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %89 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %90 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2c1", 7.050000e+02 : f64>, 7.050000e+02 : f64}
// SOURCE-NEXT:                       // %90 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %91 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d7", 7.270000e+02 : f64>, 7.270000e+02 : f64}
// SOURCE-NEXT:                       // %91 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %92 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2c6", 7.100000e+02 : f64>, 7.100000e+02 : f64}
// SOURCE-NEXT:                       // %92 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %93 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d3", 7.230000e+02 : f64>, 7.230000e+02 : f64}
// SOURCE-NEXT:                       // %93 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %94 = jsir.call_expression (%89, %90, %91, %92, %93)
// SOURCE-NEXT:                       // %94 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %95 = jsir.member_expression_ref (%88, %94)
// SOURCE-NEXT:                       // %95 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %96 = jsir.identifier {"_0x527da8"}
// SOURCE-NEXT:                       // %96 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %97 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                       // %97 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %98 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ea", 4.900000e+02 : f64>, 4.900000e+02 : f64}
// SOURCE-NEXT:                       // %98 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %99 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x200", 5.120000e+02 : f64>, 5.120000e+02 : f64}
// SOURCE-NEXT:                       // %99 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %100 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ff", 5.110000e+02 : f64>, 5.110000e+02 : f64}
// SOURCE-NEXT:                       // %100 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %101 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                       // %101 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %102 = jsir.call_expression (%97, %98, %99, %100, %101)
// SOURCE-NEXT:                       // %102 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %103 = jsir.member_expression (%96, %102)
// SOURCE-NEXT:                       // %103 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %104 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %104 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %105 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f1", 7.530000e+02 : f64>, 7.530000e+02 : f64}
// SOURCE-NEXT:                       // %105 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %106 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x302", 7.700000e+02 : f64>, 7.700000e+02 : f64}
// SOURCE-NEXT:                       // %106 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %107 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x301", 7.690000e+02 : f64>, 7.690000e+02 : f64}
// SOURCE-NEXT:                       // %107 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %108 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fc", 7.640000e+02 : f64>, 7.640000e+02 : f64}
// SOURCE-NEXT:                       // %108 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %109 = jsir.call_expression (%104, %105, %106, %107, %108)
// SOURCE-NEXT:                       // %109 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %110 = jsir.member_expression (%103, %109)
// SOURCE-NEXT:                       // %110 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %111 = jsir.identifier {"_0x527da8"}
// SOURCE-NEXT:                       // %111 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %112 = jsir.call_expression (%110, %111)
// SOURCE-NEXT:                       // %112 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %113 = jsir.assignment_expression (%95, %112) {"="}
// SOURCE-NEXT:                       // %113 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%113)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb15:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb16:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %114 = jslir.switch_statement_case_start (%66) {4 : ui32}
// SOURCE-NEXT:                       // %114 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %115 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %115 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%115)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %116 = jsir.binary_expression (%65, %115) {"==="}
// SOURCE-NEXT:                       // %116 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %117 = builtin.unrealized_conversion_cast (%116)
// SOURCE-NEXT:                       // %117 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%117) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb17:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%114) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %118 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %118 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %119 = jsir.string_literal {#jsir<string_literal_extra "'__proto__'", "__proto__">, "__proto__"}
// SOURCE-NEXT:                       // %119 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %120 = jsir.member_expression_ref (%118, %119)
// SOURCE-NEXT:                       // %120 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %121 = jsir.identifier {"_0x486a8b"}
// SOURCE-NEXT:                       // %121 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %122 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                       // %122 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %123 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fc", 5.080000e+02 : f64>, 5.080000e+02 : f64}
// SOURCE-NEXT:                       // %123 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %124 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x205", 5.170000e+02 : f64>, 5.170000e+02 : f64}
// SOURCE-NEXT:                       // %124 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %125 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22b", 5.550000e+02 : f64>, 5.550000e+02 : f64}
// SOURCE-NEXT:                       // %125 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %126 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x214", 5.320000e+02 : f64>, 5.320000e+02 : f64}
// SOURCE-NEXT:                       // %126 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %127 = jsir.call_expression (%122, %123, %124, %125, %126)
// SOURCE-NEXT:                       // %127 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %128 = jsir.member_expression (%121, %127)
// SOURCE-NEXT:                       // %128 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %129 = jsir.identifier {"_0x67a5a1"}
// SOURCE-NEXT:                       // %129 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %130 = jsir.call_expression (%128, %129)
// SOURCE-NEXT:                       // %130 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %131 = jsir.assignment_expression (%120, %130) {"="}
// SOURCE-NEXT:                       // %131 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%131)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb18:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb19:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %132 = jslir.switch_statement_case_start (%66) {5 : ui32}
// SOURCE-NEXT:                       // %132 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %133 = jsir.string_literal {#jsir<string_literal_extra "'5'", "5">, "5"}
// SOURCE-NEXT:                       // %133 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%133)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %134 = jsir.binary_expression (%65, %133) {"==="}
// SOURCE-NEXT:                       // %134 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %135 = builtin.unrealized_conversion_cast (%134)
// SOURCE-NEXT:                       // %135 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%135) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb20:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%132) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %514 = jsir.identifier_ref {"_0x185f9c"}
// SOURCE-NEXT:                           // %514 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %515 = jsir.identifier {"_0x4b92d5"}
// SOURCE-NEXT:                           // %515 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %516 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %516 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %517 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x30a", 7.780000e+02 : f64>, 7.780000e+02 : f64}
// SOURCE-NEXT:                           // %517 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %518 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ee", 7.500000e+02 : f64>, 7.500000e+02 : f64}
// SOURCE-NEXT:                           // %518 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %519 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2eb", 7.470000e+02 : f64>, 7.470000e+02 : f64}
// SOURCE-NEXT:                           // %519 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %520 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f1", 7.530000e+02 : f64>, 7.530000e+02 : f64}
// SOURCE-NEXT:                           // %520 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %521 = jsir.call_expression (%516, %517, %518, %519, %520)
// SOURCE-NEXT:                           // %521 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %522 = jsir.string_literal {#jsir<string_literal_extra "'r'", "r">, "r"}
// SOURCE-NEXT:                           // %522 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %523 = jsir.binary_expression (%521, %522) {"+"}
// SOURCE-NEXT:                           // %523 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %524 = jsir.member_expression (%515, %523)
// SOURCE-NEXT:                           // %524 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %525 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %525 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %526 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x234", 5.640000e+02 : f64>, 5.640000e+02 : f64}
// SOURCE-NEXT:                           // %526 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %527 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x229", 5.530000e+02 : f64>, 5.530000e+02 : f64}
// SOURCE-NEXT:                           // %527 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %528 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x218", 5.360000e+02 : f64>, 5.360000e+02 : f64}
// SOURCE-NEXT:                           // %528 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %529 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21a", 5.380000e+02 : f64>, 5.380000e+02 : f64}
// SOURCE-NEXT:                           // %529 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %530 = jsir.call_expression (%525, %526, %527, %528, %529)
// SOURCE-NEXT:                           // %530 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %531 = jsir.member_expression (%524, %530)
// SOURCE-NEXT:                           // %531 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %532 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                           // %532 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %533 = jsir.member_expression (%531, %532)
// SOURCE-NEXT:                           // %533 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %534 = jsir.identifier {"_0x5026e1"}
// SOURCE-NEXT:                           // %534 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %535 = jsir.call_expression (%533, %534)
// SOURCE-NEXT:                           // %535 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %536 = jsir.variable_declarator (%514, %535)
// SOURCE-NEXT:                           // %536 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%536)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb21:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb22:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%66) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb23:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%61) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb24:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%56) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%55) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb25:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%53) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %136 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %136 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%136) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%136) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %484 = jsir.identifier_ref {"_0x1999fe"}
// SOURCE-NEXT:                           // %484 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %485 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %485 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %486 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %486 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %487 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1df", 4.790000e+02 : f64>, 4.790000e+02 : f64}
// SOURCE-NEXT:                           // %487 = 4.790000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %488 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1d8", 4.720000e+02 : f64>, 4.720000e+02 : f64}
// SOURCE-NEXT:                           // %488 = 4.720000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %489 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f4", 5.000000e+02 : f64>, 5.000000e+02 : f64}
// SOURCE-NEXT:                           // %489 = 5.000000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %490 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f2", 4.980000e+02 : f64>, 4.980000e+02 : f64}
// SOURCE-NEXT:                           // %490 = 4.980000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %491 = jsir.call_expression (%486, %487, %488, %489, %490)
// SOURCE-NEXT:                           // %491 = "ZUNtd"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %492 = jsir.member_expression (%485, %491)
// SOURCE-NEXT:                           // %492 = "2|0|4|3|1"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %493 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %493 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %494 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x213", 5.310000e+02 : f64>, 5.310000e+02 : f64}
// SOURCE-NEXT:                           // %494 = 5.310000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %495 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x216", 5.340000e+02 : f64>, 5.340000e+02 : f64}
// SOURCE-NEXT:                           // %495 = 5.340000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %496 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21d", 5.410000e+02 : f64>, 5.410000e+02 : f64}
// SOURCE-NEXT:                           // %496 = 5.410000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %497 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x210", 5.280000e+02 : f64>, 5.280000e+02 : f64}
// SOURCE-NEXT:                           // %497 = 5.280000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %498 = jsir.call_expression (%493, %494, %495, %496, %497)
// SOURCE-NEXT:                           // %498 = "split"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %499 = jsir.member_expression (%492, %498)
// SOURCE-NEXT:                           // %499 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %500 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %500 = "|"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %501 = jsir.call_expression (%499, %500)
// SOURCE-NEXT:                           // %501 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %502 = jsir.variable_declarator (%484, %501)
// SOURCE-NEXT:                           // %502 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %503 = jsir.identifier_ref {"_0x50c043"}
// SOURCE-NEXT:                           // %503 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %504 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x25e", 6.060000e+02 : f64>, 6.060000e+02 : f64}
// SOURCE-NEXT:                           // %504 = 6.060000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %505 = jsir.unary_expression (%504) {"-", true}
// SOURCE-NEXT:                           // %505 = -6.060000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %506 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2607", 9.735000e+03 : f64>, 9.735000e+03 : f64}
// SOURCE-NEXT:                           // %506 = 9.735000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %507 = jsir.binary_expression (%505, %506) {"+"}
// SOURCE-NEXT:                           // %507 = 9.129000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %508 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11", 1.700000e+01 : f64>, 1.700000e+01 : f64}
// SOURCE-NEXT:                           // %508 = 1.700000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %509 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x219", 5.370000e+02 : f64>, 5.370000e+02 : f64}
// SOURCE-NEXT:                           // %509 = 5.370000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %510 = jsir.unary_expression (%509) {"-", true}
// SOURCE-NEXT:                           // %510 = -5.370000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %511 = jsir.binary_expression (%508, %510) {"*"}
// SOURCE-NEXT:                           // %511 = -9.129000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %512 = jsir.binary_expression (%507, %511) {"+"}
// SOURCE-NEXT:                           // %512 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %513 = jsir.variable_declarator (%503, %512)
// SOURCE-NEXT:                           // %513 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%502, %513)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     %137 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %137 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb26:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %138 = jsir.array_expression
// SOURCE-NEXT:                       // %138 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %139 = jsir.unary_expression (%138) {"!", true}
// SOURCE-NEXT:                       // %139 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %140 = jsir.unary_expression (%139) {"!", true}
// SOURCE-NEXT:                       // %140 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %141 = builtin.unrealized_conversion_cast (%140)
// SOURCE-NEXT:                       // %141 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%141) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb27:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %142 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %142 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%142) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%142) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %143 = jsir.identifier {"_0x1999fe"}
// SOURCE-NEXT:                       // %143 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %144 = jsir.identifier_ref {"_0x50c043"}
// SOURCE-NEXT:                       // %144 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %145 = jsir.update_expression (%144) {"++", false}
// SOURCE-NEXT:                       // %145 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %146 = jsir.member_expression (%143, %145)
// SOURCE-NEXT:                       // %146 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %147 = jslir.switch_statement_start (%146)
// SOURCE-NEXT:                       // %147 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb28:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %148 = jslir.switch_statement_case_start (%147) {0 : ui32}
// SOURCE-NEXT:                       // %148 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %149 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %149 = "0"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%149)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %150 = jsir.binary_expression (%146, %149) {"==="}
// SOURCE-NEXT:                       // %150 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %151 = builtin.unrealized_conversion_cast (%150)
// SOURCE-NEXT:                       // %151 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%151) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb29:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%148) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %152 = jslir.control_flow_starter {#jsir<cf_kind TryStatement>}
// SOURCE-NEXT:                       // %152 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb30:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%152) {#jsir<cf_marker TryStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %153 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %153 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%153) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%153) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %442 = jsir.identifier_ref {"_0xc6ad63"}
// SOURCE-NEXT:                           // %442 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %443 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %443 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %444 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %444 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %445 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d7", 7.270000e+02 : f64>, 7.270000e+02 : f64}
// SOURCE-NEXT:                           // %445 = 7.270000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %446 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e0", 7.360000e+02 : f64>, 7.360000e+02 : f64}
// SOURCE-NEXT:                           // %446 = 7.360000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %447 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ed", 7.490000e+02 : f64>, 7.490000e+02 : f64}
// SOURCE-NEXT:                           // %447 = 7.490000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %448 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d9", 7.290000e+02 : f64>, 7.290000e+02 : f64}
// SOURCE-NEXT:                           // %448 = 7.290000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %449 = jsir.call_expression (%444, %445, %446, %447, %448)
// SOURCE-NEXT:                           // %449 = "soDZs"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %450 = jsir.member_expression (%443, %449)
// SOURCE-NEXT:                           // %450 = #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %451 = jsir.identifier {"Function"}
// SOURCE-NEXT:                           // %451 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %452 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %452 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %453 = jsir.string_literal {#jsir<string_literal_extra "'NieDC'", "NieDC">, "NieDC"}
// SOURCE-NEXT:                           // %453 = "NieDC"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %454 = jsir.member_expression (%452, %453)
// SOURCE-NEXT:                           // %454 = #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %455 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %455 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %456 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %456 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %457 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fb", 5.070000e+02 : f64>, 5.070000e+02 : f64}
// SOURCE-NEXT:                           // %457 = 5.070000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %458 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20a", 5.220000e+02 : f64>, 5.220000e+02 : f64}
// SOURCE-NEXT:                           // %458 = 5.220000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %459 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x223", 5.470000e+02 : f64>, 5.470000e+02 : f64}
// SOURCE-NEXT:                           // %459 = 5.470000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %460 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x213", 5.310000e+02 : f64>, 5.310000e+02 : f64}
// SOURCE-NEXT:                           // %460 = 5.310000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %461 = jsir.call_expression (%456, %457, %458, %459, %460)
// SOURCE-NEXT:                           // %461 = "NieDC"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %462 = jsir.member_expression (%455, %461)
// SOURCE-NEXT:                           // %462 = #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %463 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %463 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %464 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %464 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %465 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x202", 5.140000e+02 : f64>, 5.140000e+02 : f64}
// SOURCE-NEXT:                           // %465 = 5.140000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %466 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20c", 5.240000e+02 : f64>, 5.240000e+02 : f64}
// SOURCE-NEXT:                           // %466 = 5.240000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %467 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20c", 5.240000e+02 : f64>, 5.240000e+02 : f64}
// SOURCE-NEXT:                           // %467 = 5.240000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %468 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f4", 5.000000e+02 : f64>, 5.000000e+02 : f64}
// SOURCE-NEXT:                           // %468 = 5.000000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %469 = jsir.call_expression (%464, %465, %466, %467, %468)
// SOURCE-NEXT:                           // %469 = "yEDez"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %470 = jsir.member_expression (%463, %469)
// SOURCE-NEXT:                           // %470 = "return (function() "
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %471 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %471 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %472 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %472 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %473 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e1", 4.810000e+02 : f64>, 4.810000e+02 : f64}
// SOURCE-NEXT:                           // %473 = 4.810000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %474 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f9", 5.050000e+02 : f64>, 5.050000e+02 : f64}
// SOURCE-NEXT:                           // %474 = 5.050000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %475 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x204", 5.160000e+02 : f64>, 5.160000e+02 : f64}
// SOURCE-NEXT:                           // %475 = 5.160000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %476 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ec", 4.920000e+02 : f64>, 4.920000e+02 : f64}
// SOURCE-NEXT:                           // %476 = 4.920000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %477 = jsir.call_expression (%472, %473, %474, %475, %476)
// SOURCE-NEXT:                           // %477 = "ZEmIi"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %478 = jsir.member_expression (%471, %477)
// SOURCE-NEXT:                           // %478 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %479 = jsir.call_expression (%462, %470, %478)
// SOURCE-NEXT:                           // %479 = "return (function() {}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %480 = jsir.string_literal {#jsir<string_literal_extra "');'", ");">, ");"}
// SOURCE-NEXT:                           // %480 = ");"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %481 = jsir.call_expression (%454, %479, %480)
// SOURCE-NEXT:                           // %481 = "return (function() {}.constructor(\22return this\22)( ));"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %482 = jsir.call_expression (%450, %451, %481)
// SOURCE-NEXT:                           // %482 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %483 = jsir.variable_declarator (%442, %482)
// SOURCE-NEXT:                           // %483 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%483)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %154 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                       // %154 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %155 = jsir.identifier {"_0xc6ad63"}
// SOURCE-NEXT:                       // %155 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %156 = jsir.call_expression (%155)
// SOURCE-NEXT:                       // %156 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %157 = jsir.assignment_expression (%154, %156) {"="}
// SOURCE-NEXT:                       // %157 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%157)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%153) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb31:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%152) {#jsir<cf_marker TryStatementHandler>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %158 = jsir.identifier_ref {"_0x455513"}
// SOURCE-NEXT:                       // %158 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.catch_clause_start (%158)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %159 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %159 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%159) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%159) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %160 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                       // %160 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %161 = jsir.identifier {"window"}
// SOURCE-NEXT:                       // %161 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %162 = jsir.assignment_expression (%160, %161) {"="}
// SOURCE-NEXT:                       // %162 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%162)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%159) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb32:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%152) {#jsir<cf_marker TryStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb33:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb34:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %163 = jslir.switch_statement_case_start (%147) {1 : ui32}
// SOURCE-NEXT:                       // %163 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %164 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %164 = "1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%164)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %165 = jsir.binary_expression (%146, %164) {"==="}
// SOURCE-NEXT:                       // %165 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %166 = builtin.unrealized_conversion_cast (%165)
// SOURCE-NEXT:                       // %166 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%166) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb35:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%163) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %167 = jslir.control_flow_starter {#jsir<cf_kind ForStatement>}
// SOURCE-NEXT:                       // %167 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb36:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%167) {#jsir<cf_marker ForStatementInit>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %427 = jsir.identifier_ref {"_0x4a8534"}
// SOURCE-NEXT:                           // %427 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %428 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xc72", 3.186000e+03 : f64>, 3.186000e+03 : f64}
// SOURCE-NEXT:                           // %428 = 3.186000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %429 = jsir.unary_expression (%428) {"-", true}
// SOURCE-NEXT:                           // %429 = -3.186000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %430 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// SOURCE-NEXT:                           // %430 = 2.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %431 = jsir.unary_expression (%430) {"-", true}
// SOURCE-NEXT:                           // %431 = -2.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %432 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x96d", 2.413000e+03 : f64>, 2.413000e+03 : f64}
// SOURCE-NEXT:                           // %432 = 2.413000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %433 = jsir.unary_expression (%432) {"-", true}
// SOURCE-NEXT:                           // %433 = -2.413000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %434 = jsir.binary_expression (%431, %433) {"*"}
// SOURCE-NEXT:                           // %434 = 4.826000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %435 = jsir.binary_expression (%429, %434) {"+"}
// SOURCE-NEXT:                           // %435 = 1.640000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %436 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x29", 4.100000e+01 : f64>, 4.100000e+01 : f64}
// SOURCE-NEXT:                           // %436 = 4.100000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %437 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x28", 4.000000e+01 : f64>, 4.000000e+01 : f64}
// SOURCE-NEXT:                           // %437 = 4.000000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %438 = jsir.unary_expression (%437) {"-", true}
// SOURCE-NEXT:                           // %438 = -4.000000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %439 = jsir.binary_expression (%436, %438) {"*"}
// SOURCE-NEXT:                           // %439 = -1.640000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %440 = jsir.binary_expression (%435, %439) {"+"}
// SOURCE-NEXT:                           // %440 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %441 = jsir.variable_declarator (%427, %440)
// SOURCE-NEXT:                           // %441 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%441)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb37:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%167) {#jsir<cf_marker ForStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %168 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %168 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %169 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %169 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %170 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2be", 7.020000e+02 : f64>, 7.020000e+02 : f64}
// SOURCE-NEXT:                       // %170 = 7.020000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %171 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2cc", 7.160000e+02 : f64>, 7.160000e+02 : f64}
// SOURCE-NEXT:                       // %171 = 7.160000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %172 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e5", 7.410000e+02 : f64>, 7.410000e+02 : f64}
// SOURCE-NEXT:                       // %172 = 7.410000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %173 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d5", 7.250000e+02 : f64>, 7.250000e+02 : f64}
// SOURCE-NEXT:                       // %173 = 7.250000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %174 = jsir.call_expression (%169, %170, %171, %172, %173)
// SOURCE-NEXT:                       // %174 = "jXOCo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %175 = jsir.member_expression (%168, %174)
// SOURCE-NEXT:                       // %175 = #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %176 = jsir.identifier {"_0x4a8534"}
// SOURCE-NEXT:                       // %176 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %177 = jsir.identifier {"_0x27bc28"}
// SOURCE-NEXT:                       // %177 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %178 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                       // %178 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %179 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20e", 5.260000e+02 : f64>, 5.260000e+02 : f64}
// SOURCE-NEXT:                       // %179 = 5.260000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %180 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x207", 5.190000e+02 : f64>, 5.190000e+02 : f64}
// SOURCE-NEXT:                       // %180 = 5.190000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %181 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21d", 5.410000e+02 : f64>, 5.410000e+02 : f64}
// SOURCE-NEXT:                       // %181 = 5.410000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %182 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x217", 5.350000e+02 : f64>, 5.350000e+02 : f64}
// SOURCE-NEXT:                       // %182 = 5.350000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %183 = jsir.call_expression (%178, %179, %180, %181, %182)
// SOURCE-NEXT:                       // %183 = "length"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %184 = jsir.member_expression (%177, %183)
// SOURCE-NEXT:                       // %184 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %185 = jsir.call_expression (%175, %176, %184)
// SOURCE-NEXT:                       // %185 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %186 = builtin.unrealized_conversion_cast (%185)
// SOURCE-NEXT:                       // %186 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%186) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb38:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%167) {#jsir<cf_marker ForStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %187 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %187 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%187) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%187) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %401 = jsir.identifier_ref {"_0x20167d"}
// SOURCE-NEXT:                           // %401 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %402 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %402 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %403 = jsir.string_literal {#jsir<string_literal_extra "'GyCwQ'", "GyCwQ">, "GyCwQ"}
// SOURCE-NEXT:                           // %403 = "GyCwQ"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %404 = jsir.member_expression (%402, %403)
// SOURCE-NEXT:                           // %404 = "3|0|2|4|5|1"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %405 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %405 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %406 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x217", 5.350000e+02 : f64>, 5.350000e+02 : f64}
// SOURCE-NEXT:                           // %406 = 5.350000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %407 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x206", 5.180000e+02 : f64>, 5.180000e+02 : f64}
// SOURCE-NEXT:                           // %407 = 5.180000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %408 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21e", 5.420000e+02 : f64>, 5.420000e+02 : f64}
// SOURCE-NEXT:                           // %408 = 5.420000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %409 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x210", 5.280000e+02 : f64>, 5.280000e+02 : f64}
// SOURCE-NEXT:                           // %409 = 5.280000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %410 = jsir.call_expression (%405, %406, %407, %408, %409)
// SOURCE-NEXT:                           // %410 = "split"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %411 = jsir.member_expression (%404, %410)
// SOURCE-NEXT:                           // %411 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %412 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %412 = "|"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %413 = jsir.call_expression (%411, %412)
// SOURCE-NEXT:                           // %413 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %414 = jsir.variable_declarator (%401, %413)
// SOURCE-NEXT:                           // %414 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %415 = jsir.identifier_ref {"_0x92b385"}
// SOURCE-NEXT:                           // %415 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %416 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1bb", 4.430000e+02 : f64>, 4.430000e+02 : f64}
// SOURCE-NEXT:                           // %416 = 4.430000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %417 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xe", 1.400000e+01 : f64>, 1.400000e+01 : f64}
// SOURCE-NEXT:                           // %417 = 1.400000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %418 = jsir.binary_expression (%416, %417) {"*"}
// SOURCE-NEXT:                           // %418 = 6.202000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %419 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xcd4", 3.284000e+03 : f64>, 3.284000e+03 : f64}
// SOURCE-NEXT:                           // %419 = 3.284000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %420 = jsir.binary_expression (%418, %419) {"+"}
// SOURCE-NEXT:                           // %420 = 9.486000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %421 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// SOURCE-NEXT:                           // %421 = 2.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %422 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1287", 4.743000e+03 : f64>, 4.743000e+03 : f64}
// SOURCE-NEXT:                           // %422 = 4.743000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %423 = jsir.unary_expression (%422) {"-", true}
// SOURCE-NEXT:                           // %423 = -4.743000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %424 = jsir.binary_expression (%421, %423) {"*"}
// SOURCE-NEXT:                           // %424 = -9.486000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %425 = jsir.binary_expression (%420, %424) {"+"}
// SOURCE-NEXT:                           // %425 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %426 = jsir.variable_declarator (%415, %425)
// SOURCE-NEXT:                           // %426 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%414, %426)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     %188 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %188 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb39:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%188) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %189 = jsir.array_expression
// SOURCE-NEXT:                       // %189 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %190 = jsir.unary_expression (%189) {"!", true}
// SOURCE-NEXT:                       // %190 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %191 = jsir.unary_expression (%190) {"!", true}
// SOURCE-NEXT:                       // %191 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %192 = builtin.unrealized_conversion_cast (%191)
// SOURCE-NEXT:                       // %192 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%192) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb40:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%188) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %193 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %193 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%193) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%193) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %194 = jsir.identifier {"_0x20167d"}
// SOURCE-NEXT:                       // %194 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %195 = jsir.identifier_ref {"_0x92b385"}
// SOURCE-NEXT:                       // %195 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %196 = jsir.update_expression (%195) {"++", false}
// SOURCE-NEXT:                       // %196 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %197 = jsir.member_expression (%194, %196)
// SOURCE-NEXT:                       // %197 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %198 = jslir.switch_statement_start (%197)
// SOURCE-NEXT:                       // %198 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb41:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %199 = jslir.switch_statement_case_start (%198) {0 : ui32}
// SOURCE-NEXT:                       // %199 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %200 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %200 = "0"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%200)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %201 = jsir.binary_expression (%197, %200) {"==="}
// SOURCE-NEXT:                       // %201 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %202 = builtin.unrealized_conversion_cast (%201)
// SOURCE-NEXT:                       // %202 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%202) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb42:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%199) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %396 = jsir.identifier_ref {"_0x5154ca"}
// SOURCE-NEXT:                           // %396 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %397 = jsir.identifier {"_0x27bc28"}
// SOURCE-NEXT:                           // %397 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %398 = jsir.identifier {"_0x4a8534"}
// SOURCE-NEXT:                           // %398 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %399 = jsir.member_expression (%397, %398)
// SOURCE-NEXT:                           // %399 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %400 = jsir.variable_declarator (%396, %399)
// SOURCE-NEXT:                           // %400 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%400)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb43:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb44:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %203 = jslir.switch_statement_case_start (%198) {1 : ui32}
// SOURCE-NEXT:                       // %203 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %204 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %204 = "1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%204)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %205 = jsir.binary_expression (%197, %204) {"==="}
// SOURCE-NEXT:                       // %205 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %206 = builtin.unrealized_conversion_cast (%205)
// SOURCE-NEXT:                       // %206 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%206) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb45:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%203) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %207 = jsir.identifier {"_0x223732"}
// SOURCE-NEXT:                       // %207 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %208 = jsir.identifier {"_0x5154ca"}
// SOURCE-NEXT:                       // %208 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %209 = jsir.member_expression_ref (%207, %208)
// SOURCE-NEXT:                       // %209 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %210 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %210 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %211 = jsir.assignment_expression (%209, %210) {"="}
// SOURCE-NEXT:                       // %211 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%211)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb46:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb47:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %212 = jslir.switch_statement_case_start (%198) {2 : ui32}
// SOURCE-NEXT:                       // %212 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %213 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %213 = "2"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%213)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %214 = jsir.binary_expression (%197, %213) {"==="}
// SOURCE-NEXT:                       // %214 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %215 = builtin.unrealized_conversion_cast (%214)
// SOURCE-NEXT:                       // %215 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%215) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb48:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%212) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %387 = jsir.identifier_ref {"_0x3bb083"}
// SOURCE-NEXT:                           // %387 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %388 = jsir.identifier {"_0x223732"}
// SOURCE-NEXT:                           // %388 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %389 = jsir.identifier {"_0x5154ca"}
// SOURCE-NEXT:                           // %389 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %390 = jsir.member_expression (%388, %389)
// SOURCE-NEXT:                           // %390 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %391 = jslir.logical_expression_start (%390) {"||"}
// SOURCE-NEXT:                           // %391 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %392 = builtin.unrealized_conversion_cast (%390)
// SOURCE-NEXT:                           // %392 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%392, %390) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%391) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %393 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                           // %393 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%393)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%391) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %395 = jsir.variable_declarator (%387, %394)
// SOURCE-NEXT:                           // %395 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%395)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb49:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb50:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %216 = jslir.switch_statement_case_start (%198) {3 : ui32}
// SOURCE-NEXT:                       // %216 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %217 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %217 = "3"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%217)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %218 = jsir.binary_expression (%197, %217) {"==="}
// SOURCE-NEXT:                       // %218 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %219 = builtin.unrealized_conversion_cast (%218)
// SOURCE-NEXT:                       // %219 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%219) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb51:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%216) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %359 = jsir.identifier_ref {"_0x3a6f48"}
// SOURCE-NEXT:                           // %359 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %360 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                           // %360 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %361 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %361 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %362 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x217", 5.350000e+02 : f64>, 5.350000e+02 : f64}
// SOURCE-NEXT:                           // %362 = 5.350000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %363 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x210", 5.280000e+02 : f64>, 5.280000e+02 : f64}
// SOURCE-NEXT:                           // %363 = 5.280000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %364 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x216", 5.340000e+02 : f64>, 5.340000e+02 : f64}
// SOURCE-NEXT:                           // %364 = 5.340000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %365 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x209", 5.210000e+02 : f64>, 5.210000e+02 : f64}
// SOURCE-NEXT:                           // %365 = 5.210000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %366 = jsir.call_expression (%361, %362, %363, %364, %365)
// SOURCE-NEXT:                           // %366 = "constructo"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %367 = jsir.string_literal {#jsir<string_literal_extra "'r'", "r">, "r"}
// SOURCE-NEXT:                           // %367 = "r"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %368 = jsir.binary_expression (%366, %367) {"+"}
// SOURCE-NEXT:                           // %368 = "constructor"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %369 = jsir.member_expression (%360, %368)
// SOURCE-NEXT:                           // %369 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %370 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %370 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %371 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x216", 5.340000e+02 : f64>, 5.340000e+02 : f64}
// SOURCE-NEXT:                           // %371 = 5.340000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %372 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x225", 5.490000e+02 : f64>, 5.490000e+02 : f64}
// SOURCE-NEXT:                           // %372 = 5.490000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %373 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x228", 5.520000e+02 : f64>, 5.520000e+02 : f64}
// SOURCE-NEXT:                           // %373 = 5.520000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %374 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21a", 5.380000e+02 : f64>, 5.380000e+02 : f64}
// SOURCE-NEXT:                           // %374 = 5.380000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %375 = jsir.call_expression (%370, %371, %372, %373, %374)
// SOURCE-NEXT:                           // %375 = "prototype"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %376 = jsir.member_expression (%369, %375)
// SOURCE-NEXT:                           // %376 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %377 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %377 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %378 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f7", 7.590000e+02 : f64>, 7.590000e+02 : f64}
// SOURCE-NEXT:                           // %378 = 7.590000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %379 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e5", 7.410000e+02 : f64>, 7.410000e+02 : f64}
// SOURCE-NEXT:                           // %379 = 7.410000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %380 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x30b", 7.790000e+02 : f64>, 7.790000e+02 : f64}
// SOURCE-NEXT:                           // %380 = 7.790000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %381 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fc", 7.640000e+02 : f64>, 7.640000e+02 : f64}
// SOURCE-NEXT:                           // %381 = 7.640000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %382 = jsir.call_expression (%377, %378, %379, %380, %381)
// SOURCE-NEXT:                           // %382 = "bind"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %383 = jsir.member_expression (%376, %382)
// SOURCE-NEXT:                           // %383 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %384 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                           // %384 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %385 = jsir.call_expression (%383, %384)
// SOURCE-NEXT:                           // %385 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %386 = jsir.variable_declarator (%359, %385)
// SOURCE-NEXT:                           // %386 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%386)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb52:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb53:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %220 = jslir.switch_statement_case_start (%198) {4 : ui32}
// SOURCE-NEXT:                       // %220 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %221 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %221 = "4"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%221)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %222 = jsir.binary_expression (%197, %221) {"==="}
// SOURCE-NEXT:                       // %222 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %223 = builtin.unrealized_conversion_cast (%222)
// SOURCE-NEXT:                       // %223 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%223) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb54:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%220) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %224 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %224 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %225 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %225 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %226 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e2", 7.380000e+02 : f64>, 7.380000e+02 : f64}
// SOURCE-NEXT:                       // %226 = 7.380000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %227 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fa", 7.620000e+02 : f64>, 7.620000e+02 : f64}
// SOURCE-NEXT:                       // %227 = 7.620000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %228 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f9", 7.610000e+02 : f64>, 7.610000e+02 : f64}
// SOURCE-NEXT:                       // %228 = 7.610000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %229 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e8", 7.440000e+02 : f64>, 7.440000e+02 : f64}
// SOURCE-NEXT:                       // %229 = 7.440000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %230 = jsir.call_expression (%225, %226, %227, %228, %229)
// SOURCE-NEXT:                       // %230 = "__proto__"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %231 = jsir.member_expression_ref (%224, %230)
// SOURCE-NEXT:                       // %231 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %232 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                       // %232 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %233 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                       // %233 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %234 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x222", 5.460000e+02 : f64>, 5.460000e+02 : f64}
// SOURCE-NEXT:                       // %234 = 5.460000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %235 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x229", 5.530000e+02 : f64>, 5.530000e+02 : f64}
// SOURCE-NEXT:                       // %235 = 5.530000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %236 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x219", 5.370000e+02 : f64>, 5.370000e+02 : f64}
// SOURCE-NEXT:                       // %236 = 5.370000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %237 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x214", 5.320000e+02 : f64>, 5.320000e+02 : f64}
// SOURCE-NEXT:                       // %237 = 5.320000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %238 = jsir.call_expression (%233, %234, %235, %236, %237)
// SOURCE-NEXT:                       // %238 = "bind"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %239 = jsir.member_expression (%232, %238)
// SOURCE-NEXT:                       // %239 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %240 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                       // %240 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %241 = jsir.call_expression (%239, %240)
// SOURCE-NEXT:                       // %241 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %242 = jsir.assignment_expression (%231, %241) {"="}
// SOURCE-NEXT:                       // %242 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%242)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb55:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb56:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %243 = jslir.switch_statement_case_start (%198) {5 : ui32}
// SOURCE-NEXT:                       // %243 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %244 = jsir.string_literal {#jsir<string_literal_extra "'5'", "5">, "5"}
// SOURCE-NEXT:                       // %244 = "5"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%244)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %245 = jsir.binary_expression (%197, %244) {"==="}
// SOURCE-NEXT:                       // %245 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %246 = builtin.unrealized_conversion_cast (%245)
// SOURCE-NEXT:                       // %246 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%246) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb57:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%243) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %247 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %247 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %248 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                       // %248 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %249 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1dd", 4.770000e+02 : f64>, 4.770000e+02 : f64}
// SOURCE-NEXT:                       // %249 = 4.770000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %250 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1de", 4.780000e+02 : f64>, 4.780000e+02 : f64}
// SOURCE-NEXT:                       // %250 = 4.780000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %251 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1df", 4.790000e+02 : f64>, 4.790000e+02 : f64}
// SOURCE-NEXT:                       // %251 = 4.790000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %252 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                       // %252 = 4.910000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %253 = jsir.call_expression (%248, %249, %250, %251, %252)
// SOURCE-NEXT:                       // %253 = "toString"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %254 = jsir.member_expression_ref (%247, %253)
// SOURCE-NEXT:                       // %254 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %255 = jsir.identifier {"_0x3bb083"}
// SOURCE-NEXT:                       // %255 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %256 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %256 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %257 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2eb", 7.470000e+02 : f64>, 7.470000e+02 : f64}
// SOURCE-NEXT:                       // %257 = 7.470000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %258 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e7", 7.430000e+02 : f64>, 7.430000e+02 : f64}
// SOURCE-NEXT:                       // %258 = 7.430000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %259 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ce", 7.180000e+02 : f64>, 7.180000e+02 : f64}
// SOURCE-NEXT:                       // %259 = 7.180000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %260 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d3", 7.230000e+02 : f64>, 7.230000e+02 : f64}
// SOURCE-NEXT:                       // %260 = 7.230000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %261 = jsir.call_expression (%256, %257, %258, %259, %260)
// SOURCE-NEXT:                       // %261 = "toString"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %262 = jsir.member_expression (%255, %261)
// SOURCE-NEXT:                       // %262 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %263 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                       // %263 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %264 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ed", 7.490000e+02 : f64>, 7.490000e+02 : f64}
// SOURCE-NEXT:                       // %264 = 7.490000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %265 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x306", 7.740000e+02 : f64>, 7.740000e+02 : f64}
// SOURCE-NEXT:                       // %265 = 7.740000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %266 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x305", 7.730000e+02 : f64>, 7.730000e+02 : f64}
// SOURCE-NEXT:                       // %266 = 7.730000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %267 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fc", 7.640000e+02 : f64>, 7.640000e+02 : f64}
// SOURCE-NEXT:                       // %267 = 7.640000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %268 = jsir.call_expression (%263, %264, %265, %266, %267)
// SOURCE-NEXT:                       // %268 = "bind"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %269 = jsir.member_expression (%262, %268)
// SOURCE-NEXT:                       // %269 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %270 = jsir.identifier {"_0x3bb083"}
// SOURCE-NEXT:                       // %270 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %271 = jsir.call_expression (%269, %270)
// SOURCE-NEXT:                       // %271 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %272 = jsir.assignment_expression (%254, %271) {"="}
// SOURCE-NEXT:                       // %272 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%272)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb58:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb59:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%198) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb60:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%193) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb61:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%188) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%187) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb62:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%167) {#jsir<cf_marker ForStatementUpdate>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %273 = jsir.identifier_ref {"_0x4a8534"}
// SOURCE-NEXT:                       // %273 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %274 = jsir.update_expression (%273) {"++", false}
// SOURCE-NEXT:                       // %274 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expr_region_end (%274)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb63:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%167) {#jsir<cf_marker ForStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb64:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb65:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %275 = jslir.switch_statement_case_start (%147) {2 : ui32}
// SOURCE-NEXT:                       // %275 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %276 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %276 = "2"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%276)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %277 = jsir.binary_expression (%146, %276) {"==="}
// SOURCE-NEXT:                       // %277 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %278 = builtin.unrealized_conversion_cast (%277)
// SOURCE-NEXT:                       // %278 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%278) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb66:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%275) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %357 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %357 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %358 = jsir.variable_declarator (%357)
// SOURCE-NEXT:                           // %358 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%358)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb67:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb68:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %279 = jslir.switch_statement_case_start (%147) {3 : ui32}
// SOURCE-NEXT:                       // %279 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %280 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %280 = "3"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%280)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %281 = jsir.binary_expression (%146, %280) {"==="}
// SOURCE-NEXT:                       // %281 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %282 = builtin.unrealized_conversion_cast (%281)
// SOURCE-NEXT:                       // %282 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%282) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb69:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%279) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %305 = jsir.identifier_ref {"_0x27bc28"}
// SOURCE-NEXT:                           // %305 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %306 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %306 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %307 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %307 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %308 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20a", 5.220000e+02 : f64>, 5.220000e+02 : f64}
// SOURCE-NEXT:                           // %308 = 5.220000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %309 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21b", 5.390000e+02 : f64>, 5.390000e+02 : f64}
// SOURCE-NEXT:                           // %309 = 5.390000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %310 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f5", 5.010000e+02 : f64>, 5.010000e+02 : f64}
// SOURCE-NEXT:                           // %310 = 5.010000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %311 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20f", 5.270000e+02 : f64>, 5.270000e+02 : f64}
// SOURCE-NEXT:                           // %311 = 5.270000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %312 = jsir.call_expression (%307, %308, %309, %310, %311)
// SOURCE-NEXT:                           // %312 = "Fmzmy"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %313 = jsir.member_expression (%306, %312)
// SOURCE-NEXT:                           // %313 = "log"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %314 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %314 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %315 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %315 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %316 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d3", 7.230000e+02 : f64>, 7.230000e+02 : f64}
// SOURCE-NEXT:                           // %316 = 7.230000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %317 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2bc", 7.000000e+02 : f64>, 7.000000e+02 : f64}
// SOURCE-NEXT:                           // %317 = 7.000000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %318 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2b9", 6.970000e+02 : f64>, 6.970000e+02 : f64}
// SOURCE-NEXT:                           // %318 = 6.970000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %319 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d1", 7.210000e+02 : f64>, 7.210000e+02 : f64}
// SOURCE-NEXT:                           // %319 = 7.210000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %320 = jsir.call_expression (%315, %316, %317, %318, %319)
// SOURCE-NEXT:                           // %320 = "bDDQL"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %321 = jsir.member_expression (%314, %320)
// SOURCE-NEXT:                           // %321 = "warn"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %322 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %322 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %323 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %323 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %324 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x30a", 7.780000e+02 : f64>, 7.780000e+02 : f64}
// SOURCE-NEXT:                           // %324 = 7.780000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %325 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x301", 7.690000e+02 : f64>, 7.690000e+02 : f64}
// SOURCE-NEXT:                           // %325 = 7.690000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %326 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fd", 7.650000e+02 : f64>, 7.650000e+02 : f64}
// SOURCE-NEXT:                           // %326 = 7.650000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %327 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2fd", 7.650000e+02 : f64>, 7.650000e+02 : f64}
// SOURCE-NEXT:                           // %327 = 7.650000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %328 = jsir.call_expression (%323, %324, %325, %326, %327)
// SOURCE-NEXT:                           // %328 = "wkULH"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %329 = jsir.member_expression (%322, %328)
// SOURCE-NEXT:                           // %329 = "info"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %330 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %330 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %331 = jsir.identifier {"_0x9092eb"}
// SOURCE-NEXT:                           // %331 = #jsir_builtin<inline_expression_function  "_0x4068cb", 41,  "_0x4ee7f0", 41,  "_0x2d9ed5", 41,  "_0x497bbc", 41, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 4.570000e+02 : f64, "-">, #jsir<symbol_id "_0x4ee7f0", 41>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2d9ed5", 41>, 3.690000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x497bbc", 41>, 8.400000e+01 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %332 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d0", 7.200000e+02 : f64>, 7.200000e+02 : f64}
// SOURCE-NEXT:                           // %332 = 7.200000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %333 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e3", 7.390000e+02 : f64>, 7.390000e+02 : f64}
// SOURCE-NEXT:                           // %333 = 7.390000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %334 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d8", 7.280000e+02 : f64>, 7.280000e+02 : f64}
// SOURCE-NEXT:                           // %334 = 7.280000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %335 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e0", 7.360000e+02 : f64>, 7.360000e+02 : f64}
// SOURCE-NEXT:                           // %335 = 7.360000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %336 = jsir.call_expression (%331, %332, %333, %334, %335)
// SOURCE-NEXT:                           // %336 = "Wftmu"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %337 = jsir.member_expression (%330, %336)
// SOURCE-NEXT:                           // %337 = "error"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %338 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %338 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %339 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %339 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %340 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x211", 5.290000e+02 : f64>, 5.290000e+02 : f64}
// SOURCE-NEXT:                           // %340 = 5.290000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %341 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22d", 5.570000e+02 : f64>, 5.570000e+02 : f64}
// SOURCE-NEXT:                           // %341 = 5.570000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %342 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22a", 5.540000e+02 : f64>, 5.540000e+02 : f64}
// SOURCE-NEXT:                           // %342 = 5.540000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %343 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x212", 5.300000e+02 : f64>, 5.300000e+02 : f64}
// SOURCE-NEXT:                           // %343 = 5.300000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %344 = jsir.call_expression (%339, %340, %341, %342, %343)
// SOURCE-NEXT:                           // %344 = "gXlVo"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %345 = jsir.member_expression (%338, %344)
// SOURCE-NEXT:                           // %345 = "exception"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %346 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %346 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %347 = jsir.string_literal {#jsir<string_literal_extra "'DRyXW'", "DRyXW">, "DRyXW"}
// SOURCE-NEXT:                           // %347 = "DRyXW"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %348 = jsir.member_expression (%346, %347)
// SOURCE-NEXT:                           // %348 = "table"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %349 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %349 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %350 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1db", 4.750000e+02 : f64>, 4.750000e+02 : f64}
// SOURCE-NEXT:                           // %350 = 4.750000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %351 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fc", 5.080000e+02 : f64>, 5.080000e+02 : f64}
// SOURCE-NEXT:                           // %351 = 5.080000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %352 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fc", 5.080000e+02 : f64>, 5.080000e+02 : f64}
// SOURCE-NEXT:                           // %352 = 5.080000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %353 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ea", 4.900000e+02 : f64>, 4.900000e+02 : f64}
// SOURCE-NEXT:                           // %353 = 4.900000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %354 = jsir.call_expression (%349, %350, %351, %352, %353)
// SOURCE-NEXT:                           // %354 = "trace"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %355 = jsir.array_expression (%313, %321, %329, %337, %345, %348, %354)
// SOURCE-NEXT:                           // %355 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %356 = jsir.variable_declarator (%305, %355)
// SOURCE-NEXT:                           // %356 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%356)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb70:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb71:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %283 = jslir.switch_statement_case_start (%147) {4 : ui32}
// SOURCE-NEXT:                       // %283 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %284 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %284 = "4"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%284)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %285 = jsir.binary_expression (%146, %284) {"==="}
// SOURCE-NEXT:                       // %285 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %286 = builtin.unrealized_conversion_cast (%285)
// SOURCE-NEXT:                       // %286 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%286) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb72:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%283) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %287 = jsir.identifier_ref {"_0x223732"}
// SOURCE-NEXT:                           // %287 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %288 = jsir.identifier {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %288 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %289 = jsir.identifier {"_0x620196"}
// SOURCE-NEXT:                           // %289 = #jsir_builtin<inline_expression_function  "_0x425af0", 42,  "_0x2a4dc9", 42,  "_0x4f88d8", 42,  "_0x5d56ca", 42, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x425af0", 42>, 8.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a4dc9", 42>, 3.940000e+02 : f64, "-">, #jsir<symbol_id "_0x2a4dc9", 42>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5d56ca", 42>, 4.460000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %290 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fc", 5.080000e+02 : f64>, 5.080000e+02 : f64}
// SOURCE-NEXT:                           // %290 = 5.080000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %291 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x205", 5.170000e+02 : f64>, 5.170000e+02 : f64}
// SOURCE-NEXT:                           // %291 = 5.170000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %292 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e5", 4.850000e+02 : f64>, 4.850000e+02 : f64}
// SOURCE-NEXT:                           // %292 = 4.850000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %293 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ef", 4.950000e+02 : f64>, 4.950000e+02 : f64}
// SOURCE-NEXT:                           // %293 = 4.950000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %294 = jsir.call_expression (%289, %290, %291, %292, %293)
// SOURCE-NEXT:                           // %294 = "console"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %295 = jsir.member_expression_ref (%288, %294)
// SOURCE-NEXT:                           // %295 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %296 = jsir.identifier {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %296 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %297 = jsir.string_literal {#jsir<string_literal_extra "'console'", "console">, "console"}
// SOURCE-NEXT:                           // %297 = "console"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %298 = jsir.member_expression (%296, %297)
// SOURCE-NEXT:                           // %298 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %299 = jslir.logical_expression_start (%298) {"||"}
// SOURCE-NEXT:                           // %299 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %300 = builtin.unrealized_conversion_cast (%298)
// SOURCE-NEXT:                           // %300 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%300, %298) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%299) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %301 = jsir.object_expression ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %301 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%301)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%299) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %303 = jsir.assignment_expression (%295, %302) {"="}
// SOURCE-NEXT:                           // %303 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %304 = jsir.variable_declarator (%287, %303)
// SOURCE-NEXT:                           // %304 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x223732#40 : <uninitialized>> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%304)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb73:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb74:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%147) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb75:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%142) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb76:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%136) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb77:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%53) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%37) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %34 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %35 = jsir.call_expression (%32, %33, %34)
// SOURCE-NEXT:                   // %35 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %36 = jsir.variable_declarator (%31, %35)
// SOURCE-NEXT:                   // %36 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%36)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %3 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:               // %3 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %4 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:               // %4 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %5 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10f", 2.710000e+02 : f64>, 2.710000e+02 : f64}
// SOURCE-NEXT:               // %5 = 2.710000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %6 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x107", 2.630000e+02 : f64>, 2.630000e+02 : f64}
// SOURCE-NEXT:               // %6 = 2.630000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %7 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x121", 2.890000e+02 : f64>, 2.890000e+02 : f64}
// SOURCE-NEXT:               // %7 = 2.890000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %8 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x103", 2.590000e+02 : f64>, 2.590000e+02 : f64}
// SOURCE-NEXT:               // %8 = 2.590000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %9 = jsir.call_expression (%4, %5, %6, %7, %8)
// SOURCE-NEXT:               // %9 = "fPEpB"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %10 = jsir.member_expression (%3, %9)
// SOURCE-NEXT:               // %10 = #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %11 = jsir.identifier {"_0x5a5e61"}
// SOURCE-NEXT:               // %11 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %12 = jsir.call_expression (%10, %11)
// SOURCE-NEXT:               // %12 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %13 = jsir.identifier {"console"}
// SOURCE-NEXT:               // %13 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %14 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:               // %14 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %15 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x65", 1.010000e+02 : f64>, 1.010000e+02 : f64}
// SOURCE-NEXT:               // %15 = 1.010000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %16 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37", 5.500000e+01 : f64>, 5.500000e+01 : f64}
// SOURCE-NEXT:               // %16 = 5.500000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %17 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x45", 6.900000e+01 : f64>, 6.900000e+01 : f64}
// SOURCE-NEXT:               // %17 = 6.900000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %18 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4f", 7.900000e+01 : f64>, 7.900000e+01 : f64}
// SOURCE-NEXT:               // %18 = 7.900000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %19 = jsir.call_expression (%14, %15, %16, %17, %18)
// SOURCE-NEXT:               // %19 = "log"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %20 = jsir.member_expression (%13, %19)
// SOURCE-NEXT:               // %20 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %21 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:               // %21 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.910000e+02 : f64, 2.760000e+02 : f64, 2.970000e+02 : f64, 3.030000e+02 : f64>,  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 6.300000e+01 : f64, 4.500000e+01 : f64, 7.300000e+01 : f64, 5.500000e+01 : f64>,  "gCfqE", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 4.500000e+01 : f64, 5.700000e+01 : f64, 3.600000e+01 : f64, 5.300000e+01 : f64>,  "ZUNtd", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.980000e+02 : f64, 2.730000e+02 : f64, 3.170000e+02 : f64, 2.830000e+02 : f64>,  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", #jsir_builtin<inline_expression_binary_expression "return (fu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.630000e+02 : f64, 2.680000e+02 : f64, 2.800000e+02 : f64, 2.640000e+02 : f64>, "+">,  "ZEmIi", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.830000e+02 : f64, 2.650000e+02 : f64, 2.640000e+02 : f64, 2.980000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 8.200000e+01 : f64, 6.300000e+01 : f64, 9.800000e+01 : f64, 7.800000e+01 : f64>, "+">, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.890000e+02 : f64, 2.810000e+02 : f64, 3.110000e+02 : f64, 2.980000e+02 : f64>, "+">, " )", "+">,  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.100000e+01 : f64, 1.000000e+02 : f64, 1.020000e+02 : f64, 8.000000e+01 : f64>, "1", "+">,  "Fmzmy", "log",  "bDDQL", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 7.500000e+01 : f64, 3.400000e+01 : f64, 5.900000e+01 : f64, 5.600000e+01 : f64>,  "wkULH", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 3.140000e+02 : f64, 3.060000e+02 : f64, 3.100000e+02 : f64, 3.360000e+02 : f64>,  "Wftmu", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.900000e+02 : f64, 2.900000e+02 : f64, 2.660000e+02 : f64, 3.130000e+02 : f64>,  "gXlVo", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.950000e+02 : f64, 3.120000e+02 : f64, 2.880000e+02 : f64, 2.840000e+02 : f64>,  "DRyXW", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5fb062", 18>, 2.780000e+02 : f64, 2.560000e+02 : f64, 2.890000e+02 : f64, 2.610000e+02 : f64>,  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x3e158c", 18>, 3.700000e+01 : f64, 3.800000e+01 : f64, 3.000000e+01 : f64, 4.100000e+01 : f64>, "d!", "+">>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %22 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:               // %22 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %23 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e", 4.600000e+01 : f64>, 4.600000e+01 : f64}
// SOURCE-NEXT:               // %23 = 4.600000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %24 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b", 5.900000e+01 : f64>, 5.900000e+01 : f64}
// SOURCE-NEXT:               // %24 = 5.900000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %25 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x45", 6.900000e+01 : f64>, 6.900000e+01 : f64}
// SOURCE-NEXT:               // %25 = 6.900000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %26 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x49", 7.300000e+01 : f64>, 7.300000e+01 : f64}
// SOURCE-NEXT:               // %26 = 7.300000e+01 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %27 = jsir.call_expression (%22, %23, %24, %25, %26)
// SOURCE-NEXT:               // %27 = "Xxejz"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %28 = jsir.member_expression (%21, %27)
// SOURCE-NEXT:               // %28 = "Hello World!"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %29 = jsir.call_expression (%20, %28)
// SOURCE-NEXT:               // %29 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jsir.sequence_expression (%12, %29)
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.expression_statement (%30)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %0 = jsir.identifier {"hi"}
// SOURCE-NEXT:           // %0 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %1 = jsir.call_expression (%0)
// SOURCE-NEXT:           // %1 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%1)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     }, {
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     })
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT: })
// SOURCE-NEXT:   // State [default = <uninitialized>] { }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Bindings:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: _0x24a11a#18:
// SOURCE-NEXT:     /* 20 properties */ {
// SOURCE-NEXT:         ["cmIIa"]: (_0x4d887e#19, _0x258647#19) => { (_0x4d887e#19 === _0x258647#19) },
// SOURCE-NEXT:         ["rvTTb"]: _0x5fb062#18(291, 276, 297, 303),
// SOURCE-NEXT:         ["BLRju"]: (_0x32f73d#20, _0x51021c#20) => { (_0x32f73d#20 === _0x51021c#20) },
// SOURCE-NEXT:         ["INEBZ"]: _0x3e158c#18(63, 45, 73, 55),
// SOURCE-NEXT:         ["gCfqE"]: _0x3e158c#18(45, 57, 36, 53),
// SOURCE-NEXT:         ["ZUNtd"]: _0x5fb062#18(298, 273, 317, 283),
// SOURCE-NEXT:         ["soDZs"]: (_0x38801d#21, _0xf075cb#21) => { _0x38801d#21(_0xf075cb#21) },
// SOURCE-NEXT:         ["NieDC"]: (_0x320e85#22, _0x58fb4d#22) => { (_0x320e85#22 + _0x58fb4d#22) },
// SOURCE-NEXT:         ["yEDez"]: ("return (fu" + _0x5fb062#18(263, 268, 280, 264)),
// SOURCE-NEXT:         ["ZEmIi"]: (((_0x5fb062#18(283, 265, 264, 298) + _0x3e158c#18(82, 63, 98, 78)) + _0x5fb062#18(289, 281, 311, 298)) + " )"),
// SOURCE-NEXT:         ["jXOCo"]: (_0x482b82#23, _0x2bafd9#23) => { (_0x482b82#23 < _0x2bafd9#23) },
// SOURCE-NEXT:         ["GyCwQ"]: (_0x3e158c#18(71, 100, 102, 80) + "1"),
// SOURCE-NEXT:         ["Fmzmy"]: "log",
// SOURCE-NEXT:         ["bDDQL"]: _0x3e158c#18(75, 34, 59, 56),
// SOURCE-NEXT:         ["wkULH"]: _0x5fb062#18(314, 306, 310, 336),
// SOURCE-NEXT:         ["Wftmu"]: _0x5fb062#18(290, 290, 266, 313),
// SOURCE-NEXT:         ["gXlVo"]: _0x5fb062#18(295, 312, 288, 284),
// SOURCE-NEXT:         ["DRyXW"]: _0x5fb062#18(278, 256, 289, 261),
// SOURCE-NEXT:         ["fPEpB"]: (_0x4d07dc#24) => { _0x4d07dc#24() },
// SOURCE-NEXT:         ["Xxejz"]: (_0x3e158c#18(37, 38, 30, 41) + "d!"),
// SOURCE-NEXT:     }
// SOURCE-NEXT: _0x3e158c#18:
// SOURCE-NEXT:     (_0x3bd438#25, _0x53f095#25, _0x2b1b5d#25, _0x1150ec#25) => { _0x107c#0((_0x1150ec#25 - -343), _0x2b1b5d#25) }
// SOURCE-NEXT: _0x5fb062#18:
// SOURCE-NEXT:     (_0x1176c2#39, _0x37fd7c#39, _0x5718e5#39, _0x3d07ce#39) => { _0x107c#0((_0x1176c2#39 - -122), _0x37fd7c#39) }
// SOURCE-NEXT: _0x167d7e#27:
// SOURCE-NEXT:     (_0x3c0256#29, _0x2b47e1#29, _0x4957e3#29, _0x3b662d#29) => { _0x107c#0((_0x4957e3#29 - 491), _0x3c0256#29) }
// SOURCE-NEXT: _0x3e158c#27:
// SOURCE-NEXT:     (_0x22e15e#28, _0x5174c3#28, _0x1241d4#28, _0x8ab890#28) => { _0x107c#0((_0x8ab890#28 - 283), _0x5174c3#28) }
// SOURCE-NEXT: _0x552a36#31:
// SOURCE-NEXT:     (_0x5b91b5#32, _0x5a4c29#32, _0x102518#32, _0x1d60e6#32) => { _0x3e158c#27((_0x5b91b5#32 - 273), _0x5a4c29#32, (_0x102518#32 - 81), (_0x102518#32 - -946)) }
// SOURCE-NEXT: _0x62708b#31:
// SOURCE-NEXT:     _0x293663#undeclared[_0x552a36#31(-249, -249, -249, -247)](_0x408f4b#undeclared, arguments#undeclared)
// SOURCE-NEXT: _0x5b3fd6#36:
// SOURCE-NEXT:     _0x4f3fc0#27["apply"](_0x1008f4#27, arguments#undeclared)
// SOURCE-NEXT: _0x1999fe#40:
// SOURCE-NEXT:     _0x24a11a#18[_0x620196#40(479, 472, 500, 498)][_0x620196#40(531, 534, 541, 528)]("|")
// SOURCE-NEXT: _0x20167d#40:
// SOURCE-NEXT:     _0x24a11a#18["GyCwQ"][_0x620196#40(535, 518, 542, 528)]("|")
// SOURCE-NEXT: _0x25cc23#40:
// SOURCE-NEXT:     _0x4e0893#undeclared[_0x3ab0e9#undeclared]
// SOURCE-NEXT: _0x2abedf#40:
// SOURCE-NEXT:     ("5|2|1|4|3|" + "0")[_0x620196#40(513, 503, 518, 528)]("|")
// SOURCE-NEXT: _0x5154ca#40:
// SOURCE-NEXT:     _0x27bc28#40[_0x4a8534#40]
// SOURCE-NEXT: _0x620196#40:
// SOURCE-NEXT:     (_0x425af0#42, _0x2a4dc9#42, _0x4f88d8#42, _0x5d56ca#42) => { _0x3e158c#18((_0x425af0#42 - 88), (_0x2a4dc9#42 - 394), _0x2a4dc9#42, (_0x5d56ca#42 - 446)) }
// SOURCE-NEXT: _0x9092eb#40:
// SOURCE-NEXT:     (_0x4068cb#41, _0x4ee7f0#41, _0x2d9ed5#41, _0x497bbc#41) => { _0x5fb062#18((_0x497bbc#41 - 457), _0x4ee7f0#41, (_0x2d9ed5#41 - 369), (_0x497bbc#41 - 84)) }
// SOURCE-NEXT: _0xc6ad63#40:
// SOURCE-NEXT:     _0x24a11a#18[_0x9092eb#40(727, 736, 749, 729)](Function#undeclared, _0x24a11a#18["NieDC"](_0x24a11a#18[_0x620196#40(507, 522, 547, 531)](_0x24a11a#18[_0x620196#40(514, 524, 524, 500)], _0x24a11a#18[_0x620196#40(481, 505, 516, 492)]), ");"))
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Computed constants:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: From [5480, 5517): `_0x5fb062(0x123, 0x114, 0x129, 0x12f)` -> `LtmRg`
// SOURCE-NEXT: From [5623, 5656): `_0x3e158c(0x3f, 0x2d, 0x49, 0x37)` -> `snjPo`
// SOURCE-NEXT: From [5671, 5704): `_0x3e158c(0x2d, 0x39, 0x24, 0x35)` -> `Nngrv`
// SOURCE-NEXT: From [5719, 5756): `_0x5fb062(0x12a, 0x111, 0x13d, 0x11b)` -> `2|0|4|3|1`
// SOURCE-NEXT: From [5966, 6003): `_0x5fb062(0x107, 0x10c, 0x118, 0x108)` -> `nction() `
// SOURCE-NEXT: From [5948, 6003): `'return\x20(fu' + _0x5fb062(0x107, 0x10c, 0x118, 0x108)` -> `return (function() `
// SOURCE-NEXT: From [6018, 6055): `_0x5fb062(0x11b, 0x109, 0x108, 0x12a)` -> `{}.constru`
// SOURCE-NEXT: From [6066, 6099): `_0x3e158c(0x52, 0x3f, 0x62, 0x4e)` -> `ctor("retu`
// SOURCE-NEXT: From [6018, 6099): `_0x5fb062(0x11b, 0x109, 0x108, 0x12a) +
// SOURCE-NEXT:         _0x3e158c(0x52, 0x3f, 0x62, 0x4e)` -> `{}.constructor("retu`
// SOURCE-NEXT: From [6110, 6147): `_0x5fb062(0x121, 0x119, 0x137, 0x12a)` -> `rn this")(`
// SOURCE-NEXT: From [6018, 6147): `_0x5fb062(0x11b, 0x109, 0x108, 0x12a) +
// SOURCE-NEXT:         _0x3e158c(0x52, 0x3f, 0x62, 0x4e) +
// SOURCE-NEXT:         _0x5fb062(0x121, 0x119, 0x137, 0x12a)` -> `{}.constructor("return this")(`
// SOURCE-NEXT: From [6018, 6157): `_0x5fb062(0x11b, 0x109, 0x108, 0x12a) +
// SOURCE-NEXT:         _0x3e158c(0x52, 0x3f, 0x62, 0x4e) +
// SOURCE-NEXT:         _0x5fb062(0x121, 0x119, 0x137, 0x12a) + '\x20)'` -> `{}.constructor("return this")( )`
// SOURCE-NEXT: From [6261, 6294): `_0x3e158c(0x47, 0x64, 0x66, 0x50)` -> `3|0|2|4|5|`
// SOURCE-NEXT: From [6261, 6300): `_0x3e158c(0x47, 0x64, 0x66, 0x50) + '1'` -> `3|0|2|4|5|1`
// SOURCE-NEXT: From [6335, 6368): `_0x3e158c(0x4b, 0x22, 0x3b, 0x38)` -> `warn`
// SOURCE-NEXT: From [6383, 6420): `_0x5fb062(0x13a, 0x132, 0x136, 0x150)` -> `info`
// SOURCE-NEXT: From [6435, 6472): `_0x5fb062(0x122, 0x122, 0x10a, 0x139)` -> `error`
// SOURCE-NEXT: From [6487, 6524): `_0x5fb062(0x127, 0x138, 0x120, 0x11c)` -> `exception`
// SOURCE-NEXT: From [6539, 6576): `_0x5fb062(0x116, 0x100, 0x121, 0x105)` -> `table`
// SOURCE-NEXT: From [6659, 6692): `_0x3e158c(0x25, 0x26, 0x1e, 0x29)` -> `Hello Worl`
// SOURCE-NEXT: From [6659, 6699): `_0x3e158c(0x25, 0x26, 0x1e, 0x29) + 'd!'` -> `Hello World!`
// SOURCE-NEXT: From [6803, 6809): `-0x157` -> `-343`
// SOURCE-NEXT: From [7249, 7286): `_0x3e158c(0x2c2, 0x2b8, 0x2bc, 0x2ca)` -> `rvTTb`
// SOURCE-NEXT: From [7239, 7287): `_0x24a11a[_0x3e158c(0x2c2, 0x2b8, 0x2bc, 0x2ca)]` -> `LtmRg`
// SOURCE-NEXT: From [7303, 7340): `_0x3e158c(0x2c4, 0x2a5, 0x2c2, 0x2af)` -> `VmyVp`
// SOURCE-NEXT: From [7205, 7341): `_0x24a11a['cmIIa'](
// SOURCE-NEXT:               _0x24a11a[_0x3e158c(0x2c2, 0x2b8, 0x2bc, 0x2ca)],
// SOURCE-NEXT:               _0x3e158c(0x2c4, 0x2a5, 0x2c2, 0x2af))` -> `false`
// SOURCE-NEXT: From [7201, 8184): `if (_0x24a11a['cmIIa'](
// SOURCE-NEXT:               _0x24a11a[_0x3e158c(0x2c2, 0x2b8, 0x2bc, 0x2ca)],
// SOURCE-NEXT:               _0x3e158c(0x2c4, 0x2a5, 0x2c2, 0x2af))) {
// SOURCE-NEXT:         var _0x5b6c55 = _0x3f313a ? function() {
// SOURCE-NEXT:           function _0x552a36(_0x5b91b5, _0x5a4c29, _0x102518, _0x1d60e6) {
// SOURCE-NEXT:             return _0x3e158c(
// SOURCE-NEXT:                 _0x5b91b5 - 0x111, _0x5a4c29, _0x102518 - 0x51,
// SOURCE-NEXT:                 _0x102518 - -0x3b2);
// SOURCE-NEXT:           }
// SOURCE-NEXT:           if (_0x330f38) {
// SOURCE-NEXT:             var _0x62708b = _0x293663[_0x552a36(-0xf9, -0xf9, -0xf9, -0xf7)](
// SOURCE-NEXT:                 _0x408f4b, arguments);
// SOURCE-NEXT:             return _0x3b8fa6 = null, _0x62708b;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function() {};
// SOURCE-NEXT:         return _0x5ac793 = ![], _0x5b6c55;
// SOURCE-NEXT:       } else {
// SOURCE-NEXT:         var _0x46af11 = _0x10bab4 ? function() {
// SOURCE-NEXT:           if (_0x4f3fc0) {
// SOURCE-NEXT:             var _0x5b3fd6 = _0x4f3fc0['apply'](_0x1008f4, arguments);
// SOURCE-NEXT:             return _0x4f3fc0 = null, _0x5b3fd6;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function() {};
// SOURCE-NEXT:         return _0x10bab4 = ![], _0x46af11;
// SOURCE-NEXT:       }` -> `false`
// SOURCE-NEXT: From [7591, 7597): `-0x3b2` -> `-946`
// SOURCE-NEXT: From [7687, 7692): `-0xf9` -> `-249`
// SOURCE-NEXT: From [7694, 7699): `-0xf9` -> `-249`
// SOURCE-NEXT: From [7701, 7706): `-0xf9` -> `-249`
// SOURCE-NEXT: From [7708, 7713): `-0xf7` -> `-247`
// SOURCE-NEXT: From [7677, 7714): `_0x552a36(-0xf9, -0xf9, -0xf9, -0xf7)` -> `apply`
// SOURCE-NEXT: From [8298, 8303): `-0x7a` -> `-122`
// SOURCE-NEXT: From [8762, 8780): `_0x24a11a['INEBZ']` -> `snjPo`
// SOURCE-NEXT: From [8804, 8841): `_0x9092eb(0x2f3, 0x2fe, 0x2e2, 0x2f2)` -> `gCfqE`
// SOURCE-NEXT: From [8794, 8842): `_0x24a11a[_0x9092eb(0x2f3, 0x2fe, 0x2e2, 0x2f2)]` -> `Nngrv`
// SOURCE-NEXT: From [8730, 8843): `_0x24a11a['BLRju'](
// SOURCE-NEXT:             _0x24a11a['INEBZ'],
// SOURCE-NEXT:             _0x24a11a[_0x9092eb(0x2f3, 0x2fe, 0x2e2, 0x2f2)])` -> `false`
// SOURCE-NEXT: From [8726, 13596): `if (_0x24a11a['BLRju'](
// SOURCE-NEXT:             _0x24a11a['INEBZ'],
// SOURCE-NEXT:             _0x24a11a[_0x9092eb(0x2f3, 0x2fe, 0x2e2, 0x2f2)])) {
// SOURCE-NEXT:       var _0x2abedf =
// SOURCE-NEXT:               ('5|2|1|4|3|' +
// SOURCE-NEXT:                '0')[_0x620196(0x201, 0x1f7, 0x206, 0x210)]('|'),
// SOURCE-NEXT:           _0x53335d = 0x2 * 0x169 + 0x22ee + -0x25c0;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x2abedf[_0x53335d++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             _0x233f7c[_0x25cc23] = _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             var _0x527da8 = _0x4f1603[_0x25cc23] || _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x25cc23 = _0x4e0893[_0x3ab0e9];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             _0x185f9c[_0x9092eb(0x2c1, 0x2d7, 0x2c6, 0x2d3)] =
// SOURCE-NEXT:                 _0x527da8[_0x620196(0x1ea, 0x200, 0x1ff, 0x1eb)][_0x9092eb(
// SOURCE-NEXT:                     0x2f1, 0x302, 0x301, 0x2fc)](_0x527da8);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             _0x185f9c['__proto__'] =
// SOURCE-NEXT:                 _0x486a8b[_0x620196(0x1fc, 0x205, 0x22b, 0x214)](_0x67a5a1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '5':
// SOURCE-NEXT:             var _0x185f9c =
// SOURCE-NEXT:                 _0x4b92d5[_0x9092eb(0x30a, 0x2ee, 0x2eb, 0x2f1) + 'r'][_0x620196(
// SOURCE-NEXT:                     0x234, 0x229, 0x218, 0x21a)]['bind'](_0x5026e1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     } else {
// SOURCE-NEXT:       var _0x1999fe =
// SOURCE-NEXT:               _0x24a11a[_0x620196(0x1df, 0x1d8, 0x1f4, 0x1f2)][_0x620196(
// SOURCE-NEXT:                   0x213, 0x216, 0x21d, 0x210)]('|'),
// SOURCE-NEXT:           _0x50c043 = -0x25e + 0x2607 + 0x11 * -0x219;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x1999fe[_0x50c043++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             try {
// SOURCE-NEXT:               var _0xc6ad63 = _0x24a11a[_0x9092eb(0x2d7, 0x2e0, 0x2ed, 0x2d9)](
// SOURCE-NEXT:                   Function,
// SOURCE-NEXT:                   _0x24a11a['NieDC'](
// SOURCE-NEXT:                       _0x24a11a[_0x620196(0x1fb, 0x20a, 0x223, 0x213)](
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x202, 0x20c, 0x20c, 0x1f4)],
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x1e1, 0x1f9, 0x204, 0x1ec)]),
// SOURCE-NEXT:                       ');'));
// SOURCE-NEXT:               _0x2ed7aa = _0xc6ad63();
// SOURCE-NEXT:             } catch (_0x455513) {
// SOURCE-NEXT:               _0x2ed7aa = window;
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             for (var _0x4a8534 = -0xc72 + -0x2 * -0x96d + 0x29 * -0x28;
// SOURCE-NEXT:                  _0x24a11a[_0x9092eb(0x2be, 0x2cc, 0x2e5, 0x2d5)](
// SOURCE-NEXT:                      _0x4a8534,
// SOURCE-NEXT:                      _0x27bc28[_0x620196(0x20e, 0x207, 0x21d, 0x217)]);
// SOURCE-NEXT:                  _0x4a8534++) {
// SOURCE-NEXT:               var _0x20167d =
// SOURCE-NEXT:                       _0x24a11a['GyCwQ'][_0x620196(0x217, 0x206, 0x21e, 0x210)](
// SOURCE-NEXT:                           '|'),
// SOURCE-NEXT:                   _0x92b385 = 0x1bb * 0xe + 0xcd4 + 0x2 * -0x1287;
// SOURCE-NEXT:               while (!![]) {
// SOURCE-NEXT:                 switch (_0x20167d[_0x92b385++]) {
// SOURCE-NEXT:                   case '0':
// SOURCE-NEXT:                     var _0x5154ca = _0x27bc28[_0x4a8534];
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case '1':
// SOURCE-NEXT:                     _0x223732[_0x5154ca] = _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case '2':
// SOURCE-NEXT:                     var _0x3bb083 = _0x223732[_0x5154ca] || _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case '3':
// SOURCE-NEXT:                     var _0x3a6f48 =
// SOURCE-NEXT:                         _0x58a38a[_0x620196(0x217, 0x210, 0x216, 0x209) + 'r'][_0x620196(
// SOURCE-NEXT:                             0x216, 0x225, 0x228,
// SOURCE-NEXT:                             0x21a)][_0x9092eb(0x2f7, 0x2e5, 0x30b, 0x2fc)](
// SOURCE-NEXT:                             _0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case '4':
// SOURCE-NEXT:                     _0x3a6f48[_0x9092eb(0x2e2, 0x2fa, 0x2f9, 0x2e8)] =
// SOURCE-NEXT:                         _0x58a38a[_0x620196(0x222, 0x229, 0x219, 0x214)](
// SOURCE-NEXT:                             _0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case '5':
// SOURCE-NEXT:                     _0x3a6f48[_0x620196(0x1dd, 0x1de, 0x1df, 0x1eb)] =
// SOURCE-NEXT:                         _0x3bb083[_0x9092eb(
// SOURCE-NEXT:                             0x2eb, 0x2e7, 0x2ce,
// SOURCE-NEXT:                             0x2d3)][_0x9092eb(0x2ed, 0x306, 0x305, 0x2fc)](
// SOURCE-NEXT:                             _0x3bb083);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                 }
// SOURCE-NEXT:                 break;
// SOURCE-NEXT:               }
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x2ed7aa;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             var _0x27bc28 = [
// SOURCE-NEXT:               _0x24a11a[_0x620196(0x20a, 0x21b, 0x1f5, 0x20f)],
// SOURCE-NEXT:               _0x24a11a[_0x9092eb(0x2d3, 0x2bc, 0x2b9, 0x2d1)],
// SOURCE-NEXT:               _0x24a11a[_0x9092eb(0x30a, 0x301, 0x2fd, 0x2fd)],
// SOURCE-NEXT:               _0x24a11a[_0x9092eb(0x2d0, 0x2e3, 0x2d8, 0x2e0)],
// SOURCE-NEXT:               _0x24a11a[_0x620196(0x211, 0x22d, 0x22a, 0x212)],
// SOURCE-NEXT:               _0x24a11a['DRyXW'], _0x620196(0x1db, 0x1fc, 0x1fc, 0x1ea)
// SOURCE-NEXT:             ];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             var _0x223732 = _0x2ed7aa[_0x620196(0x1fc, 0x205, 0x1e5, 0x1ef)] =
// SOURCE-NEXT:                 _0x2ed7aa['console'] || {};
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     }` -> `false`
// SOURCE-NEXT: From [10077, 10114): `_0x620196(0x1df, 0x1d8, 0x1f4, 0x1f2)` -> `ZUNtd`
// SOURCE-NEXT: From [10067, 10115): `_0x24a11a[_0x620196(0x1df, 0x1d8, 0x1f4, 0x1f2)]` -> `2|0|4|3|1`
// SOURCE-NEXT: From [10116, 10172): `_0x620196(
// SOURCE-NEXT:                   0x213, 0x216, 0x21d, 0x210)` -> `split`
// SOURCE-NEXT: From [10202, 10208): `-0x25e` -> `-606`
// SOURCE-NEXT: From [10202, 10217): `-0x25e + 0x2607` -> `9129`
// SOURCE-NEXT: From [10227, 10233): `-0x219` -> `-537`
// SOURCE-NEXT: From [10220, 10233): `0x11 * -0x219` -> `-9129`
// SOURCE-NEXT: From [10202, 10233): `-0x25e + 0x2607 + 0x11 * -0x219` -> `0`
// SOURCE-NEXT: From [10376, 10413): `_0x9092eb(0x2d7, 0x2e0, 0x2ed, 0x2d9)` -> `soDZs`
// SOURCE-NEXT: From [10514, 10551): `_0x620196(0x1fb, 0x20a, 0x223, 0x213)` -> `NieDC`
// SOURCE-NEXT: From [10590, 10627): `_0x620196(0x202, 0x20c, 0x20c, 0x1f4)` -> `yEDez`
// SOURCE-NEXT: From [10580, 10628): `_0x24a11a[_0x620196(0x202, 0x20c, 0x20c, 0x1f4)]` -> `return (function() `
// SOURCE-NEXT: From [10666, 10703): `_0x620196(0x1e1, 0x1f9, 0x204, 0x1ec)` -> `ZEmIi`
// SOURCE-NEXT: From [10656, 10704): `_0x24a11a[_0x620196(0x1e1, 0x1f9, 0x204, 0x1ec)]` -> `{}.constructor("return this")( )`
// SOURCE-NEXT: From [10504, 10705): `_0x24a11a[_0x620196(0x1fb, 0x20a, 0x223, 0x213)](
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x202, 0x20c, 0x20c, 0x1f4)],
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x1e1, 0x1f9, 0x204, 0x1ec)])` -> `return (function() {}.constructor("return this")( )`
// SOURCE-NEXT: From [10462, 10734): `_0x24a11a['NieDC'](
// SOURCE-NEXT:                       _0x24a11a[_0x620196(0x1fb, 0x20a, 0x223, 0x213)](
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x202, 0x20c, 0x20c, 0x1f4)],
// SOURCE-NEXT:                           _0x24a11a[_0x620196(0x1e1, 0x1f9, 0x204, 0x1ec)]),
// SOURCE-NEXT:                       ');')` -> `return (function() {}.constructor("return this")( ));`
// SOURCE-NEXT: From [10933, 10939): `-0xc72` -> `-3186`
// SOURCE-NEXT: From [10942, 10946): `-0x2` -> `-2`
// SOURCE-NEXT: From [10949, 10955): `-0x96d` -> `-2413`
// SOURCE-NEXT: From [10942, 10955): `-0x2 * -0x96d` -> `4826`
// SOURCE-NEXT: From [10933, 10955): `-0xc72 + -0x2 * -0x96d` -> `1640`
// SOURCE-NEXT: From [10965, 10970): `-0x28` -> `-40`
// SOURCE-NEXT: From [10958, 10970): `0x29 * -0x28` -> `-1640`
// SOURCE-NEXT: From [10933, 10970): `-0xc72 + -0x2 * -0x96d + 0x29 * -0x28` -> `0`
// SOURCE-NEXT: From [10999, 11036): `_0x9092eb(0x2be, 0x2cc, 0x2e5, 0x2d5)` -> `jXOCo`
// SOURCE-NEXT: From [11102, 11139): `_0x620196(0x20e, 0x207, 0x21d, 0x217)` -> `length`
// SOURCE-NEXT: From [11227, 11245): `_0x24a11a['GyCwQ']` -> `3|0|2|4|5|1`
// SOURCE-NEXT: From [11246, 11283): `_0x620196(0x217, 0x206, 0x21e, 0x210)` -> `split`
// SOURCE-NEXT: From [11348, 11359): `0x1bb * 0xe` -> `6202`
// SOURCE-NEXT: From [11348, 11367): `0x1bb * 0xe + 0xcd4` -> `9486`
// SOURCE-NEXT: From [11376, 11383): `-0x1287` -> `-4743`
// SOURCE-NEXT: From [11370, 11383): `0x2 * -0x1287` -> `-9486`
// SOURCE-NEXT: From [11348, 11383): `0x1bb * 0xe + 0xcd4 + 0x2 * -0x1287` -> `0`
// SOURCE-NEXT: From [11919, 11956): `_0x620196(0x217, 0x210, 0x216, 0x209)` -> `constructo`
// SOURCE-NEXT: From [11919, 11962): `_0x620196(0x217, 0x210, 0x216, 0x209) + 'r'` -> `constructor`
// SOURCE-NEXT: From [11964, 12058): `_0x620196(
// SOURCE-NEXT:                             0x216, 0x225, 0x228,
// SOURCE-NEXT:                             0x21a)` -> `prototype`
// SOURCE-NEXT: From [12060, 12097): `_0x9092eb(0x2f7, 0x2e5, 0x30b, 0x2fc)` -> `bind`
// SOURCE-NEXT: From [12228, 12265): `_0x9092eb(0x2e2, 0x2fa, 0x2f9, 0x2e8)` -> `__proto__`
// SOURCE-NEXT: From [12303, 12340): `_0x620196(0x222, 0x229, 0x219, 0x214)` -> `bind`
// SOURCE-NEXT: From [12471, 12508): `_0x620196(0x1dd, 0x1de, 0x1df, 0x1eb)` -> `toString`
// SOURCE-NEXT: From [12546, 12640): `_0x9092eb(
// SOURCE-NEXT:                             0x2eb, 0x2e7, 0x2ce,
// SOURCE-NEXT:                             0x2d3)` -> `toString`
// SOURCE-NEXT: From [12642, 12679): `_0x9092eb(0x2ed, 0x306, 0x305, 0x2fc)` -> `bind`
// SOURCE-NEXT: From [12988, 13025): `_0x620196(0x20a, 0x21b, 0x1f5, 0x20f)` -> `Fmzmy`
// SOURCE-NEXT: From [12978, 13026): `_0x24a11a[_0x620196(0x20a, 0x21b, 0x1f5, 0x20f)]` -> `log`
// SOURCE-NEXT: From [13052, 13089): `_0x9092eb(0x2d3, 0x2bc, 0x2b9, 0x2d1)` -> `bDDQL`
// SOURCE-NEXT: From [13042, 13090): `_0x24a11a[_0x9092eb(0x2d3, 0x2bc, 0x2b9, 0x2d1)]` -> `warn`
// SOURCE-NEXT: From [13116, 13153): `_0x9092eb(0x30a, 0x301, 0x2fd, 0x2fd)` -> `wkULH`
// SOURCE-NEXT: From [13106, 13154): `_0x24a11a[_0x9092eb(0x30a, 0x301, 0x2fd, 0x2fd)]` -> `info`
// SOURCE-NEXT: From [13180, 13217): `_0x9092eb(0x2d0, 0x2e3, 0x2d8, 0x2e0)` -> `Wftmu`
// SOURCE-NEXT: From [13170, 13218): `_0x24a11a[_0x9092eb(0x2d0, 0x2e3, 0x2d8, 0x2e0)]` -> `error`
// SOURCE-NEXT: From [13244, 13281): `_0x620196(0x211, 0x22d, 0x22a, 0x212)` -> `gXlVo`
// SOURCE-NEXT: From [13234, 13282): `_0x24a11a[_0x620196(0x211, 0x22d, 0x22a, 0x212)]` -> `exception`
// SOURCE-NEXT: From [13298, 13316): `_0x24a11a['DRyXW']` -> `table`
// SOURCE-NEXT: From [13318, 13355): `_0x620196(0x1db, 0x1fc, 0x1fc, 0x1ea)` -> `trace`
// SOURCE-NEXT: From [13451, 13488): `_0x620196(0x1fc, 0x205, 0x1e5, 0x1ef)` -> `console`
// SOURCE-NEXT: From [13615, 13652): `_0x5fb062(0x10f, 0x107, 0x121, 0x103)` -> `fPEpB`
// SOURCE-NEXT: From [13680, 13713): `_0x3e158c(0x65, 0x37, 0x45, 0x4f)` -> `log`
// SOURCE-NEXT: From [13736, 13769): `_0x3e158c(0x2e, 0x3b, 0x45, 0x49)` -> `Xxejz`
// SOURCE-NEXT: From [13726, 13770): `_0x24a11a[_0x3e158c(0x2e, 0x3b, 0x45, 0x49)]` -> `Hello World!`
// SOURCE-NEXT: ================================================================
