// SOURCE:      function _0xacf810(_0x4acd2a, _0x16c7ef, _0x638ddb, _0x5673ea) {
// SOURCE-NEXT:   return _0x4cd8(_0x638ddb - -122, _0x5673ea);
// SOURCE-NEXT: }
// SOURCE-NEXT: const _0x4672d1 = (function () {
// SOURCE-NEXT:     function _0x29c472(_0x5456dc, _0x33a37e, _0x3cbdff, _0x396c1e) {
// SOURCE-NEXT:       return _0x4cd8(_0x396c1e - 301, _0x3cbdff);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     const _0x390bfc = {};
// SOURCE-NEXT:     _0x390bfc["iFprO"] = function (_0x3e8684, _0x290fbd) {
// SOURCE-NEXT:       return _0x3e8684 === _0x290fbd;
// SOURCE-NEXT:     }, _0x390bfc["jsqtB"] = "eltEm";
// SOURCE-NEXT:     const _0x544ee4 = _0x390bfc;
// SOURCE-NEXT:     let _0x555f00 = !![];
// SOURCE-NEXT:     return function (_0x305fc8, _0x4e326e) {
// SOURCE-NEXT:       function _0x24d832(_0x5a8af9, _0x70056f, _0x35b75a, _0x258873) {
// SOURCE-NEXT:         return _0x29c472(_0x5a8af9 - 363, _0x70056f - 409, _0x70056f, _0x5a8af9 - -1281);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       if (_0x544ee4["iFprO"]("YbbwC", _0x544ee4["jsqtB"])) _0x33609e = _0x4925df;else {
// SOURCE-NEXT:         const _0x48da48 = _0x555f00 ? function () {
// SOURCE-NEXT:           function _0x15f3bc(_0x2bf733, _0x4c796c, _0x3a4c2a, _0x10ef38) {
// SOURCE-NEXT:             return _0x24d832(_0x4c796c - 1756, _0x10ef38, _0x3a4c2a - 54, _0x10ef38 - 431);
// SOURCE-NEXT:           }
// SOURCE-NEXT:           if (_0x4e326e) {
// SOURCE-NEXT:             const _0x5ca77d = _0x4e326e["apply"](_0x305fc8, arguments);
// SOURCE-NEXT:             return _0x4e326e = null, _0x5ca77d;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function () {};
// SOURCE-NEXT:         return _0x555f00 = ![], _0x48da48;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     };
// SOURCE-NEXT:   }()),
// SOURCE-NEXT:   _0x2ffad2 = _0x4672d1(this, function () {
// SOURCE-NEXT:     const _0x5464bf = {
// SOURCE-NEXT:         'syuJq': function (_0x3118b5, _0x21ddb4) {
// SOURCE-NEXT:           return _0x3118b5 + _0x21ddb4;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'nZJPO': function (_0x43622f, _0x52d507) {
// SOURCE-NEXT:           return _0x43622f === _0x52d507;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'iQdRz': "ajsZf",
// SOURCE-NEXT:         'IPWWb': "LVBjR",
// SOURCE-NEXT:         'JqNej': function (_0x2ce0fe, _0x2cf948) {
// SOURCE-NEXT:           return _0x2ce0fe(_0x2cf948);
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'RxDWL': function (_0x49f4c1, _0xdb5f9d) {
// SOURCE-NEXT:           return _0x49f4c1 + _0xdb5f9d;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'ihWZS': "return (function() ",
// SOURCE-NEXT:         'tfQnO': "{}.constructor(\"return this\")( )",
// SOURCE-NEXT:         'JCsly': function (_0x219e19, _0x443178) {
// SOURCE-NEXT:           return _0x219e19 !== _0x443178;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'bfMPq': "BUbjB",
// SOURCE-NEXT:         'BFaCv': function (_0xe039d2, _0x46e119, _0x21e121) {
// SOURCE-NEXT:           return _0xe039d2(_0x46e119, _0x21e121);
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'IKNzV': "callable",
// SOURCE-NEXT:         'uXNCK': function (_0x37da51) {
// SOURCE-NEXT:           return _0x37da51();
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'HQlLe': "info",
// SOURCE-NEXT:         'ZYRdl': "exception",
// SOURCE-NEXT:         'esErA': "table",
// SOURCE-NEXT:         'KMrmn': "trace",
// SOURCE-NEXT:         'meuOR': function (_0x434fe5, _0x2b865b) {
// SOURCE-NEXT:           return _0x434fe5 < _0x2b865b;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'LqGSe': function (_0x15a9dc, _0x2ad08d) {
// SOURCE-NEXT:           return _0x15a9dc !== _0x2ad08d;
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'ZJayL': "stwZs"
// SOURCE-NEXT:       },
// SOURCE-NEXT:       _0x55cf6f = function () {
// SOURCE-NEXT:         function _0x55557e(_0x5bb5d0, _0x35eea7, _0x795e0c, _0x498a5c) {
// SOURCE-NEXT:           return _0x51073b(_0x5bb5d0 - -168, _0x35eea7 - 367, _0x498a5c, _0x498a5c - 111);
// SOURCE-NEXT:         }
// SOURCE-NEXT:         function _0x7fdc4d(_0x5bf779, _0x429b8a, _0x37652a, _0x3759df) {
// SOURCE-NEXT:           return _0x30145a(_0x3759df, _0x429b8a - 477, _0x37652a - 257, _0x429b8a - 331);
// SOURCE-NEXT:         }
// SOURCE-NEXT:         if (false) return new _0x18ec3f(_0x5464bf['syuJq'](_0x55557e(0x13b, 0x122, 0x146, 0x148) + _0x5c7608 + (_0x55557e(0x14d, 0x167, 0x12a, 0x160) + 'f\x20@babel/c' + 'ore\x20is\x20onl' + 'y\x20') + _0x3629a5, '\x20from\x20the\x20' + _0x55557e(0x15f, 0x157, 0x169, 0x183) + _0x55557e(0x14c, 0x13c, 0x15b, 0x165) + _0x55557e(0x135, 0x14f, 0x15d, 0x135) + _0x55557e(0x119, 0x136, 0x130, 0x104) + _0x7fdc4d(0x51d, 0x4fb, 0x520, 0x4df) + 'ded.'));else {
// SOURCE-NEXT:           let _0x98a032;
// SOURCE-NEXT:           try {
// SOURCE-NEXT:             _0x98a032 = Function("return (function() {}.constructor(\"return this\")( ));")();
// SOURCE-NEXT:           } catch (_0x306e21) {
// SOURCE-NEXT:             if (_0x5464bf['JCsly'](_0x5464bf[_0x7fdc4d(0x4b9, 0x4d7, 0x4cc, 0x4c1)], _0x5464bf['bfMPq'])) {
// SOURCE-NEXT:               if (_0x28fe3a) {
// SOURCE-NEXT:                 const _0xf457f = _0x1f05f3[_0x55557e(0x11d, 0x113, 0x125, 0x124)](_0x3ac693, arguments);
// SOURCE-NEXT:                 return _0x30398c = null, _0xf457f;
// SOURCE-NEXT:               }
// SOURCE-NEXT:             } else _0x98a032 = window;
// SOURCE-NEXT:           }
// SOURCE-NEXT:           return _0x98a032;
// SOURCE-NEXT:         }
// SOURCE-NEXT:       },
// SOURCE-NEXT:       _0x101220 = _0x55cf6f();
// SOURCE-NEXT:     function _0x30145a(_0x54c92d, _0x425092, _0x4a5cfe, _0x167ebc) {
// SOURCE-NEXT:       return _0x4cd8(_0x167ebc - 518, _0x54c92d);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     const _0x52e013 = _0x101220["console"] = _0x101220["console"] || {};
// SOURCE-NEXT:     function _0x51073b(_0xf81d04, _0x756616, _0x1025da, _0x5e4339) {
// SOURCE-NEXT:       return _0x4cd8(_0xf81d04 - 70, _0x1025da);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     const _0x441e2d = ["log", "warn", "info", "error", "exception", "table", "trace"];
// SOURCE-NEXT:     for (let _0x36145e = 0; _0x5464bf["meuOR"](_0x36145e, _0x441e2d["length"]); _0x36145e++) {
// SOURCE-NEXT:       if (true) {
// SOURCE-NEXT:         const _0x3262a7 = _0x4672d1["constructor"]["prototype"]["bind"](_0x4672d1),
// SOURCE-NEXT:           _0x30cb84 = _0x441e2d[_0x36145e],
// SOURCE-NEXT:           _0x1d642d = _0x52e013[_0x30cb84] || _0x3262a7;
// SOURCE-NEXT:         _0x3262a7["__proto__"] = _0x4672d1["bind"](_0x4672d1), _0x3262a7["toString"] = _0x1d642d["toString"]["bind"](_0x1d642d), _0x52e013[_0x30cb84] = _0x3262a7;
// SOURCE-NEXT:       } else {
// SOURCE-NEXT:         if (!_0x2c87de) throw _0x5464bf[_0x51073b(0x1ee, 0x1e7, 0x205, 0x1d8)](_0x12c23d, _0x5fc719 + _0x30145a(0x3bb, 0x3ac, 0x3a2, 0x392), _0x5464bf[_0x30145a(0x391, 0x388, 0x398, 0x3b1)]);
// SOURCE-NEXT:         return _0xe52f70[_0x5b7551 + _0x30145a(0x38b, 0x371, 0x3a9, 0x392)](..._0x2c043e);
// SOURCE-NEXT:       }
// SOURCE-NEXT:     }
// SOURCE-NEXT:   });
// SOURCE-NEXT: _0x2ffad2();
// SOURCE-NEXT: "use strict";
// SOURCE-NEXT: const babelP = import("./lib/index.js");
// SOURCE-NEXT: function _0x40ee28(_0x186aad, _0x1a1677, _0x5e238c, _0x297818) {
// SOURCE-NEXT:   return _0x4cd8(_0x1a1677 - 933, _0x297818);
// SOURCE-NEXT: }
// SOURCE-NEXT: let babel = null;
// SOURCE-NEXT: const _0xa94f9c = {};
// SOURCE-NEXT: _0xa94f9c["set"] = function (_0x262242) {
// SOURCE-NEXT:   babel = _0x262242;
// SOURCE-NEXT: }, Object["defineProperty"](exports, "__ initialize @babel/core cjs proxy __", _0xa94f9c), exports["version"] = require("./package.json")["version"];
// SOURCE-NEXT: const functionNames = ["createConfigItem", "loadPartialConfig", "loadOptions", "transform", "transformFile", "transformFromAst", "parse"],
// SOURCE-NEXT:   propertyNames = ["buildExternalHelpers", "types", "tokTypes", "traverse", "template"];
// SOURCE-NEXT: for (const name of functionNames) {
// SOURCE-NEXT:   exports[name] = function (..._0x289d86) {
// SOURCE-NEXT:     function _0x924763(_0x1e890b, _0x301483, _0x2b7f7d, _0xb5702a) {
// SOURCE-NEXT:       return _0xacf810(_0x1e890b - 461, _0x301483 - 111, _0xb5702a - 592, _0x2b7f7d);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     babelP["then"](_0x48d3cf => {
// SOURCE-NEXT:       _0x48d3cf[name](..._0x289d86);
// SOURCE-NEXT:     });
// SOURCE-NEXT:   }, exports[name + "Async"] = function (..._0x1c8b95) {
// SOURCE-NEXT:     function _0xbabec0(_0x142239, _0x1ea37a, _0x397b4a, _0x200d78) {
// SOURCE-NEXT:       return _0xacf810(_0x142239 - 454, _0x1ea37a - 16, _0x200d78 - 411, _0x397b4a);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     function _0x38639b(_0x370158, _0x4cb1b6, _0x45f135, _0x3fbc8a) {
// SOURCE-NEXT:       return _0x40ee28(_0x370158 - 57, _0x4cb1b6 - -990, _0x45f135 - 449, _0x3fbc8a);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     return babelP["then"](_0x30c230 => _0x30c230[name + "Async"](..._0x1c8b95));
// SOURCE-NEXT:   }, exports[name + "Sync"] = function (..._0x52b6ef) {
// SOURCE-NEXT:     const _0x2aeb5e = {};
// SOURCE-NEXT:     _0x2aeb5e["kHTii"] = "callable";
// SOURCE-NEXT:     const _0x22fcea = _0x2aeb5e;
// SOURCE-NEXT:     function _0x8a4661(_0x48d0d1, _0x3900b9, _0x4d1f27, _0x1e73b6) {
// SOURCE-NEXT:       return _0xacf810(_0x48d0d1 - 58, _0x3900b9 - 439, _0x4d1f27 - 626, _0x3900b9);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     if (!babel) throw notLoadedError(name + "Sync", _0x22fcea["kHTii"]);
// SOURCE-NEXT:     function _0x42f460(_0x2ee8cc, _0x118306, _0x8af728, _0x130ab6) {
// SOURCE-NEXT:       return _0xacf810(_0x2ee8cc - 20, _0x118306 - 171, _0x8af728 - -31, _0x118306);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     return babel[name + "Sync"](..._0x52b6ef);
// SOURCE-NEXT:   };
// SOURCE-NEXT: }
// SOURCE-NEXT: for (const name of propertyNames) {
// SOURCE-NEXT:   Object["defineProperty"](exports, name, {
// SOURCE-NEXT:     'get'() {
// SOURCE-NEXT:       function _0x5603f7(_0x551811, _0x4f1bac, _0x1f715e, _0x3ea73e) {
// SOURCE-NEXT:         return _0xacf810(_0x551811 - 475, _0x4f1bac - 103, _0x3ea73e - -361, _0x1f715e);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       const _0x1bda43 = {
// SOURCE-NEXT:         'qrFVU': function (_0x50e379, _0x21cd99, _0x4b2a2e) {
// SOURCE-NEXT:           return _0x50e379(_0x21cd99, _0x4b2a2e);
// SOURCE-NEXT:         },
// SOURCE-NEXT:         'vfvSA': "accessible"
// SOURCE-NEXT:       };
// SOURCE-NEXT:       if (!babel) throw notLoadedError(name, "accessible");
// SOURCE-NEXT:       return babel[name];
// SOURCE-NEXT:     }
// SOURCE-NEXT:   });
// SOURCE-NEXT: }
// SOURCE-NEXT: function notLoadedError(_0x4cf207, _0x30a2f8) {
// SOURCE-NEXT:   function _0x1ef47c(_0xb04e5e, _0x3d4018, _0x2a23a3, _0x18496d) {
// SOURCE-NEXT:     return _0x40ee28(_0xb04e5e - 490, _0x3d4018 - -626, _0x2a23a3 - 2, _0x18496d);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   function _0x18bf26(_0x57328a, _0x5309c9, _0x3e0fe0, _0x30025e) {
// SOURCE-NEXT:     return _0xacf810(_0x57328a - 305, _0x5309c9 - 434, _0x5309c9 - -4, _0x57328a);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   return new Error("The `" + _0x4cf207 + "` export of @babel/core is only " + _0x30a2f8 + " from the CommonJS version after that the ESM version is loaded.");
// SOURCE-NEXT: }
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Prelude:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: (function (_0x3f3e03, _0x1ebae3) {
// SOURCE-NEXT:   const _0x1dc5ef = _0x3f3e03();
// SOURCE-NEXT:   function _0x5c3ded(_0x4853bf, _0x4f38cb, _0x1c375b, _0x2fa863) {
// SOURCE-NEXT:       return _0x4cd8(_0x1c375b - 0x2e8, _0x4f38cb);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   function _0x3610b4(_0x28882b, _0x309a1f, _0xe7f7eb, _0x12a7cb) {
// SOURCE-NEXT:       return _0x4cd8(_0xe7f7eb - -0x31b, _0x28882b);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   while (!![]) {
// SOURCE-NEXT:       try {
// SOURCE-NEXT:           const _0x492dab = parseInt(_0x5c3ded(0x490, 0x47f, 0x49d, 0x49f)) / (-0x581 * 0x3 + 0x145c + -0x3d8) * (-parseInt(_0x3610b4(-0x193, -0x17e, -0x191, -0x1a9)) / (0xbe * -0x31 + -0x1 * 0xb8f + 0x2fef * 0x1)) + -parseInt(_0x5c3ded(0x4cb, 0x499, 0x4a6, 0x481)) / (-0x1 * -0x7aa + -0x1d0a + 0x1563) * (parseInt(_0x3610b4(-0x191, -0x190, -0x187, -0x16c)) / (-0x5 * -0x6e6 + -0xee1 + -0x1399)) + parseInt(_0x3610b4(-0x15c, -0x15c, -0x155, -0x17d)) / (-0x37 * -0x5 + -0x2c5 * -0x1 + -0x3d3) + -parseInt(_0x5c3ded(0x48e, 0x46f, 0x484, 0x487)) / (0x1 * -0x2047 + 0x3 * 0x50f + 0x224 * 0x8) * (parseInt(_0x3610b4(-0x17e, -0x1a5, -0x18b, -0x1a8)) / (0x151 * 0x7 + 0x22ae + -0x2bde)) + -parseInt(_0x3610b4(-0x145, -0x152, -0x167, -0x16c)) / (0xef2 + -0x2 * 0xb35 + 0x780) + parseInt(_0x3610b4(-0x17d, -0x14e, -0x16f, -0x179)) / (-0x360 + -0xa6f + 0xdd8) * (-parseInt(_0x3610b4(-0x153, -0x13b, -0x164, -0x16e)) / (0xc1 * 0xb + -0xad * 0xf + -0xf1 * -0x2)) + parseInt(_0x3610b4(-0x196, -0x16b, -0x189, -0x18b)) / (0x513 * -0x4 + 0x25ed + -0x1196 * 0x1);
// SOURCE-NEXT:           if (_0x492dab === _0x1ebae3)
// SOURCE-NEXT:               break;
// SOURCE-NEXT:           else
// SOURCE-NEXT:               _0x1dc5ef['push'](_0x1dc5ef['shift']());
// SOURCE-NEXT:       } catch (_0x3816d4) {
// SOURCE-NEXT:           _0x1dc5ef['push'](_0x1dc5ef['shift']());
// SOURCE-NEXT:       }
// SOURCE-NEXT:   }
// SOURCE-NEXT: }(_0x438c, -0xaf020 + -0xa90e3 + 0x9 * 0x32409));
// SOURCE-NEXT: function _0x438c() {
// SOURCE-NEXT:   const _0x3a2bbc = [
// SOURCE-NEXT:       '274892cQBvqM',
// SOURCE-NEXT:       'HQlLe',
// SOURCE-NEXT:       'loadPartia',
// SOURCE-NEXT:       'er\x20that\x20th',
// SOURCE-NEXT:       '__\x20initial',
// SOURCE-NEXT:       'proxy\x20__',
// SOURCE-NEXT:       'JqNej',
// SOURCE-NEXT:       'transform',
// SOURCE-NEXT:       '6WMZskH',
// SOURCE-NEXT:       'The\x20`',
// SOURCE-NEXT:       'warn',
// SOURCE-NEXT:       './package.',
// SOURCE-NEXT:       'length',
// SOURCE-NEXT:       'trace',
// SOURCE-NEXT:       'json',
// SOURCE-NEXT:       'info',
// SOURCE-NEXT:       'buildExter',
// SOURCE-NEXT:       'toString',
// SOURCE-NEXT:       'set',
// SOURCE-NEXT:       'ile',
// SOURCE-NEXT:       'BFaCv',
// SOURCE-NEXT:       'BUbjB',
// SOURCE-NEXT:       'ion\x20is\x20loa',
// SOURCE-NEXT:       'IKNzV',
// SOURCE-NEXT:       '243xonVbq',
// SOURCE-NEXT:       'then',
// SOURCE-NEXT:       'ersion\x20aft',
// SOURCE-NEXT:       '`\x20export\x20o',
// SOURCE-NEXT:       'exception',
// SOURCE-NEXT:       'bind',
// SOURCE-NEXT:       'transformF',
// SOURCE-NEXT:       'ctor(\x22retu',
// SOURCE-NEXT:       '1899792qIsjRo',
// SOURCE-NEXT:       '307778GrFGOQ',
// SOURCE-NEXT:       'thXxj',
// SOURCE-NEXT:       '70540zxdNkU',
// SOURCE-NEXT:       'RxDWL',
// SOURCE-NEXT:       'ZYRdl',
// SOURCE-NEXT:       'return\x20(fu',
// SOURCE-NEXT:       'nZJPO',
// SOURCE-NEXT:       'template',
// SOURCE-NEXT:       'ore\x20is\x20onl',
// SOURCE-NEXT:       '15fcYlBg',
// SOURCE-NEXT:       'LVBjR',
// SOURCE-NEXT:       '/core\x20cjs\x20',
// SOURCE-NEXT:       'CommonJS\x20v',
// SOURCE-NEXT:       'ihWZS',
// SOURCE-NEXT:       'erty',
// SOURCE-NEXT:       'defineProp',
// SOURCE-NEXT:       'tokTypes',
// SOURCE-NEXT:       '4188445Bofqww',
// SOURCE-NEXT:       'traverse',
// SOURCE-NEXT:       'version',
// SOURCE-NEXT:       'uXNCK',
// SOURCE-NEXT:       'f\x20@babel/c',
// SOURCE-NEXT:       'table',
// SOURCE-NEXT:       'ize\x20@babel',
// SOURCE-NEXT:       'e\x20ESM\x20vers',
// SOURCE-NEXT:       'constructo',
// SOURCE-NEXT:       'KMrmn',
// SOURCE-NEXT:       'Async',
// SOURCE-NEXT:       'apply',
// SOURCE-NEXT:       'accessible',
// SOURCE-NEXT:       'parse',
// SOURCE-NEXT:       'nalHelpers',
// SOURCE-NEXT:       'iQdRz',
// SOURCE-NEXT:       './lib/inde',
// SOURCE-NEXT:       'nction()\x20',
// SOURCE-NEXT:       'bfMPq',
// SOURCE-NEXT:       '__proto__',
// SOURCE-NEXT:       'jsqtB',
// SOURCE-NEXT:       'callable',
// SOURCE-NEXT:       '4rsRsrr',
// SOURCE-NEXT:       'createConf',
// SOURCE-NEXT:       'Sync',
// SOURCE-NEXT:       'kHTii',
// SOURCE-NEXT:       'IPWWb',
// SOURCE-NEXT:       'syuJq',
// SOURCE-NEXT:       '2358188wjbYLI',
// SOURCE-NEXT:       'prototype',
// SOURCE-NEXT:       '14624632hUfAXX',
// SOURCE-NEXT:       'console'
// SOURCE-NEXT:   ];
// SOURCE-NEXT:   _0x438c = function () {
// SOURCE-NEXT:       return _0x3a2bbc;
// SOURCE-NEXT:   };
// SOURCE-NEXT:   return _0x438c();
// SOURCE-NEXT: }
// SOURCE-NEXT: function _0x4cd8(_0x4cd8a2, _0x4b3f10) {
// SOURCE-NEXT:   const _0xca70e3 = _0x438c();
// SOURCE-NEXT:   return _0x4cd8 = function (_0xc9de8b, _0x1eef6a) {
// SOURCE-NEXT:       _0xc9de8b = _0xc9de8b - (-0xf1a + 0x3b * 0x5c + 0xd * -0x5b);
// SOURCE-NEXT:       let _0x1a3281 = _0xca70e3[_0xc9de8b];
// SOURCE-NEXT:       return _0x1a3281;
// SOURCE-NEXT:   }, _0x4cd8(_0x4cd8a2, _0x4b3f10);
// SOURCE-NEXT: }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Dataflow:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: jsir.file ({
// SOURCE-NEXT:   ^bb0:
// SOURCE-NEXT:       // <executable>
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT:     jsir.program {"script"} ({
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 27 C 9>, <L 27 C 18>, "_0xacf810", 1834, 1843, 8, "_0xacf810">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1443 = jsir.identifier_ref {"_0x4acd2a"}
// SOURCE-NEXT:               // %1443 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1444 = jsir.identifier_ref {"_0x16c7ef"}
// SOURCE-NEXT:               // %1444 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1445 = jsir.identifier_ref {"_0x638ddb"}
// SOURCE-NEXT:               // %1445 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1446 = jsir.identifier_ref {"_0x5673ea"}
// SOURCE-NEXT:               // %1446 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%1443, %1444, %1445, %1446)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1435 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %1435 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%1435) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%1435) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1436 = jsir.identifier {"_0x4cd8"}
// SOURCE-NEXT:               // %1436 = #jsir_builtin<builtin_function "_0x4cd8">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1437 = jsir.identifier {"_0x638ddb"}
// SOURCE-NEXT:               // %1437 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1438 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x7a", 1.220000e+02 : f64>, 1.220000e+02 : f64}
// SOURCE-NEXT:               // %1438 = 1.220000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1439 = jsir.unary_expression (%1438) {"-", true}
// SOURCE-NEXT:               // %1439 = -1.220000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1440 = jsir.binary_expression (%1437, %1439) {"-"}
// SOURCE-NEXT:               // %1440 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1441 = jsir.identifier {"_0x5673ea"}
// SOURCE-NEXT:               // %1441 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %1442 = jsir.call_expression (%1436, %1440, %1441)
// SOURCE-NEXT:               // %1442 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%1442)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%1435) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %619 = jsir.identifier_ref {"_0x4672d1"}
// SOURCE-NEXT:               // %619 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %620 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1290 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %1290 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%1290) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%1290) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.function_declaration {false, false, #jsir<identifier   <L 31 C 15>, <L 31 C 24>, "_0x29c472", 1988, 1997, 10, "_0x29c472">} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1431 = jsir.identifier_ref {"_0x5456dc"}
// SOURCE-NEXT:                       // %1431 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1432 = jsir.identifier_ref {"_0x33a37e"}
// SOURCE-NEXT:                       // %1432 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1433 = jsir.identifier_ref {"_0x3cbdff"}
// SOURCE-NEXT:                       // %1433 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1434 = jsir.identifier_ref {"_0x396c1e"}
// SOURCE-NEXT:                       // %1434 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1431, %1432, %1433, %1434)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1424 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %1424 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1424) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1424) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1425 = jsir.identifier {"_0x4cd8"}
// SOURCE-NEXT:                       // %1425 = #jsir_builtin<builtin_function "_0x4cd8">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1426 = jsir.identifier {"_0x396c1e"}
// SOURCE-NEXT:                       // %1426 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1427 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12d", 3.010000e+02 : f64>, 3.010000e+02 : f64}
// SOURCE-NEXT:                       // %1427 = 3.010000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1428 = jsir.binary_expression (%1426, %1427) {"-"}
// SOURCE-NEXT:                       // %1428 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1429 = jsir.identifier {"_0x3cbdff"}
// SOURCE-NEXT:                       // %1429 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1430 = jsir.call_expression (%1425, %1428, %1429)
// SOURCE-NEXT:                       // %1430 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%1430)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1424) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1421 = jsir.identifier_ref {"_0x390bfc"}
// SOURCE-NEXT:                       // %1421 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1422 = jsir.object_expression ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %1422 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1423 = jsir.variable_declarator (%1421, %1422)
// SOURCE-NEXT:                       // %1423 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1423)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1291 = jsir.identifier {"_0x390bfc"}
// SOURCE-NEXT:                   // %1291 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1292 = jsir.string_literal {#jsir<string_literal_extra "'iFprO'", "iFprO">, "iFprO"}
// SOURCE-NEXT:                   // %1292 = "iFprO"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1293 = jsir.member_expression_ref (%1291, %1292)
// SOURCE-NEXT:                   // %1293 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1294 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1419 = jsir.identifier_ref {"_0x3e8684"}
// SOURCE-NEXT:                       // %1419 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1420 = jsir.identifier_ref {"_0x290fbd"}
// SOURCE-NEXT:                       // %1420 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1419, %1420)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1415 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %1415 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1415) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1415) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1416 = jsir.identifier {"_0x3e8684"}
// SOURCE-NEXT:                       // %1416 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1417 = jsir.identifier {"_0x290fbd"}
// SOURCE-NEXT:                       // %1417 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1418 = jsir.binary_expression (%1416, %1417) {"==="}
// SOURCE-NEXT:                       // %1418 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%1418)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1415) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %1294 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1295 = jsir.assignment_expression (%1293, %1294) {"="}
// SOURCE-NEXT:                   // %1295 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1296 = jsir.identifier {"_0x390bfc"}
// SOURCE-NEXT:                   // %1296 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1297 = jsir.identifier {"_0x29c472"}
// SOURCE-NEXT:                   // %1297 = #jsir_builtin<inline_expression_function  "_0x5456dc", 10,  "_0x33a37e", 10,  "_0x3cbdff", 10,  "_0x396c1e", 10, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x396c1e", 10>, 3.010000e+02 : f64, "-">, #jsir<symbol_id "_0x3cbdff", 10>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1298 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d9", 7.290000e+02 : f64>, 7.290000e+02 : f64}
// SOURCE-NEXT:                   // %1298 = 7.290000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1299 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ac", 6.840000e+02 : f64>, 6.840000e+02 : f64}
// SOURCE-NEXT:                   // %1299 = 6.840000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1300 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2af", 6.870000e+02 : f64>, 6.870000e+02 : f64}
// SOURCE-NEXT:                   // %1300 = 6.870000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1301 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2b5", 6.930000e+02 : f64>, 6.930000e+02 : f64}
// SOURCE-NEXT:                   // %1301 = 6.930000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1302 = jsir.call_expression (%1297, %1298, %1299, %1300, %1301)
// SOURCE-NEXT:                   // %1302 = "jsqtB"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1303 = jsir.member_expression_ref (%1296, %1302)
// SOURCE-NEXT:                   // %1303 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1304 = jsir.string_literal {#jsir<string_literal_extra "'eltEm'", "eltEm">, "eltEm"}
// SOURCE-NEXT:                   // %1304 = "eltEm"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1305 = jsir.assignment_expression (%1303, %1304) {"="}
// SOURCE-NEXT:                   // %1305 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1306 = jsir.sequence_expression (%1295, %1305)
// SOURCE-NEXT:                   // %1306 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.expression_statement (%1306)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1412 = jsir.identifier_ref {"_0x544ee4"}
// SOURCE-NEXT:                       // %1412 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1413 = jsir.identifier {"_0x390bfc"}
// SOURCE-NEXT:                       // %1413 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1414 = jsir.variable_declarator (%1412, %1413)
// SOURCE-NEXT:                       // %1414 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1414)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1407 = jsir.identifier_ref {"_0x555f00"}
// SOURCE-NEXT:                       // %1407 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1408 = jsir.array_expression
// SOURCE-NEXT:                       // %1408 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1409 = jsir.unary_expression (%1408) {"!", true}
// SOURCE-NEXT:                       // %1409 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1410 = jsir.unary_expression (%1409) {"!", true}
// SOURCE-NEXT:                       // %1410 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1411 = jsir.variable_declarator (%1407, %1410)
// SOURCE-NEXT:                       // %1411 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1411)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %1307 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1405 = jsir.identifier_ref {"_0x305fc8"}
// SOURCE-NEXT:                       // %1405 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1406 = jsir.identifier_ref {"_0x4e326e"}
// SOURCE-NEXT:                       // %1406 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%1405, %1406)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1308 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %1308 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1308) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1308) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.function_declaration {false, false, #jsir<identifier   <L 41 C 19>, <L 41 C 28>, "_0x24d832", 2437, 2446, 13, "_0x24d832">} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1401 = jsir.identifier_ref {"_0x5a8af9"}
// SOURCE-NEXT:                           // %1401 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1402 = jsir.identifier_ref {"_0x70056f"}
// SOURCE-NEXT:                           // %1402 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1403 = jsir.identifier_ref {"_0x35b75a"}
// SOURCE-NEXT:                           // %1403 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1404 = jsir.identifier_ref {"_0x258873"}
// SOURCE-NEXT:                           // %1404 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%1401, %1402, %1403, %1404)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1387 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1387 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1387) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1387) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1388 = jsir.identifier {"_0x29c472"}
// SOURCE-NEXT:                           // %1388 = #jsir_builtin<inline_expression_function  "_0x5456dc", 10,  "_0x33a37e", 10,  "_0x3cbdff", 10,  "_0x396c1e", 10, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x396c1e", 10>, 3.010000e+02 : f64, "-">, #jsir<symbol_id "_0x3cbdff", 10>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1389 = jsir.identifier {"_0x5a8af9"}
// SOURCE-NEXT:                           // %1389 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1390 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x16b", 3.630000e+02 : f64>, 3.630000e+02 : f64}
// SOURCE-NEXT:                           // %1390 = 3.630000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1391 = jsir.binary_expression (%1389, %1390) {"-"}
// SOURCE-NEXT:                           // %1391 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1392 = jsir.identifier {"_0x70056f"}
// SOURCE-NEXT:                           // %1392 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1393 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x199", 4.090000e+02 : f64>, 4.090000e+02 : f64}
// SOURCE-NEXT:                           // %1393 = 4.090000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1394 = jsir.binary_expression (%1392, %1393) {"-"}
// SOURCE-NEXT:                           // %1394 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1395 = jsir.identifier {"_0x70056f"}
// SOURCE-NEXT:                           // %1395 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1396 = jsir.identifier {"_0x5a8af9"}
// SOURCE-NEXT:                           // %1396 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1397 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x501", 1.281000e+03 : f64>, 1.281000e+03 : f64}
// SOURCE-NEXT:                           // %1397 = 1.281000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1398 = jsir.unary_expression (%1397) {"-", true}
// SOURCE-NEXT:                           // %1398 = -1.281000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1399 = jsir.binary_expression (%1396, %1398) {"-"}
// SOURCE-NEXT:                           // %1399 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1400 = jsir.call_expression (%1388, %1391, %1394, %1395, %1399)
// SOURCE-NEXT:                           // %1400 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%1400)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1387) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1309 = jsir.identifier {"_0x544ee4"}
// SOURCE-NEXT:                       // %1309 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1310 = jsir.string_literal {#jsir<string_literal_extra "'iFprO'", "iFprO">, "iFprO"}
// SOURCE-NEXT:                       // %1310 = "iFprO"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1311 = jsir.member_expression (%1309, %1310)
// SOURCE-NEXT:                       // %1311 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1312 = jsir.string_literal {#jsir<string_literal_extra "'YbbwC'", "YbbwC">, "YbbwC"}
// SOURCE-NEXT:                       // %1312 = "YbbwC"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1313 = jsir.identifier {"_0x544ee4"}
// SOURCE-NEXT:                       // %1313 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1314 = jsir.identifier {"_0x24d832"}
// SOURCE-NEXT:                       // %1314 = #jsir_builtin<inline_expression_function  "_0x5a8af9", 13,  "_0x70056f", 13,  "_0x35b75a", 13,  "_0x258873", 13, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x29c472", 9>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5a8af9", 13>, 3.630000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x70056f", 13>, 4.090000e+02 : f64, "-">, #jsir<symbol_id "_0x70056f", 13>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5a8af9", 13>, #jsir_builtin<inline_expression_unary_expression 1.281000e+03 : f64, "-">, "-">>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1315 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x24c", 5.880000e+02 : f64>, 5.880000e+02 : f64}
// SOURCE-NEXT:                       // %1315 = 5.880000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1316 = jsir.unary_expression (%1315) {"-", true}
// SOURCE-NEXT:                       // %1316 = -5.880000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1317 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x24a", 5.860000e+02 : f64>, 5.860000e+02 : f64}
// SOURCE-NEXT:                       // %1317 = 5.860000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1318 = jsir.unary_expression (%1317) {"-", true}
// SOURCE-NEXT:                       // %1318 = -5.860000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1319 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x22f", 5.590000e+02 : f64>, 5.590000e+02 : f64}
// SOURCE-NEXT:                       // %1319 = 5.590000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1320 = jsir.unary_expression (%1319) {"-", true}
// SOURCE-NEXT:                       // %1320 = -5.590000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1321 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x25d", 6.050000e+02 : f64>, 6.050000e+02 : f64}
// SOURCE-NEXT:                       // %1321 = 6.050000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1322 = jsir.unary_expression (%1321) {"-", true}
// SOURCE-NEXT:                       // %1322 = -6.050000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1323 = jsir.call_expression (%1314, %1316, %1318, %1320, %1322)
// SOURCE-NEXT:                       // %1323 = "jsqtB"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1324 = jsir.member_expression (%1313, %1323)
// SOURCE-NEXT:                       // %1324 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1325 = jsir.call_expression (%1311, %1312, %1324)
// SOURCE-NEXT:                       // %1325 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1326 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                       // %1326 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1327 = builtin.unrealized_conversion_cast (%1325)
// SOURCE-NEXT:                       // %1327 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%1327) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb1:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1326) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1328 = jsir.identifier_ref {"_0x33609e"}
// SOURCE-NEXT:                       // %1328 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1329 = jsir.identifier {"_0x4925df"}
// SOURCE-NEXT:                       // %1329 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1330 = jsir.assignment_expression (%1328, %1329) {"="}
// SOURCE-NEXT:                       // %1330 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%1330)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb2:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1326) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1331 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %1331 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1331) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1331) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1338 = jsir.identifier_ref {"_0x48da48"}
// SOURCE-NEXT:                           // %1338 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1339 = jsir.identifier {"_0x555f00"}
// SOURCE-NEXT:                           // %1339 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1340 = jslir.control_flow_starter {#jsir<cf_kind ConditionalExpression>}
// SOURCE-NEXT:                           // %1340 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1341 = builtin.unrealized_conversion_cast (%1339)
// SOURCE-NEXT:                           // %1341 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%1341) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1340) {#jsir<cf_marker ConditionalExpressionAlternate>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1342 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1386 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1386 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1386) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1386) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1386) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1342 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%1342)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1340) {#jsir<cf_marker ConditionalExpressionConsequent>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1343 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1346 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1346 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1346) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1346) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.function_declaration {false, false, #jsir<identifier   <L 48 C 27>, <L 48 C 36>, "_0x15f3bc", 2842, 2851, 16, "_0x15f3bc">} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1382 = jsir.identifier_ref {"_0x2bf733"}
// SOURCE-NEXT:                                   // %1382 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1383 = jsir.identifier_ref {"_0x4c796c"}
// SOURCE-NEXT:                                   // %1383 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1384 = jsir.identifier_ref {"_0x3a4c2a"}
// SOURCE-NEXT:                                   // %1384 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1385 = jsir.identifier_ref {"_0x10ef38"}
// SOURCE-NEXT:                                   // %1385 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end (%1382, %1383, %1384, %1385)
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1369 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %1369 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%1369) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%1369) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1370 = jsir.identifier {"_0x24d832"}
// SOURCE-NEXT:                                   // %1370 = #jsir_builtin<inline_expression_function  "_0x5a8af9", 13,  "_0x70056f", 13,  "_0x35b75a", 13,  "_0x258873", 13, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x29c472", 9>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5a8af9", 13>, 3.630000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x70056f", 13>, 4.090000e+02 : f64, "-">, #jsir<symbol_id "_0x70056f", 13>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5a8af9", 13>, #jsir_builtin<inline_expression_unary_expression 1.281000e+03 : f64, "-">, "-">>>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1371 = jsir.identifier {"_0x4c796c"}
// SOURCE-NEXT:                                   // %1371 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1372 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x6dc", 1.756000e+03 : f64>, 1.756000e+03 : f64}
// SOURCE-NEXT:                                   // %1372 = 1.756000e+03 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1373 = jsir.binary_expression (%1371, %1372) {"-"}
// SOURCE-NEXT:                                   // %1373 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1374 = jsir.identifier {"_0x10ef38"}
// SOURCE-NEXT:                                   // %1374 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1375 = jsir.identifier {"_0x3a4c2a"}
// SOURCE-NEXT:                                   // %1375 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1376 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x36", 5.400000e+01 : f64>, 5.400000e+01 : f64}
// SOURCE-NEXT:                                   // %1376 = 5.400000e+01 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1377 = jsir.binary_expression (%1375, %1376) {"-"}
// SOURCE-NEXT:                                   // %1377 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1378 = jsir.identifier {"_0x10ef38"}
// SOURCE-NEXT:                                   // %1378 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1379 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1af", 4.310000e+02 : f64>, 4.310000e+02 : f64}
// SOURCE-NEXT:                                   // %1379 = 4.310000e+02 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1380 = jsir.binary_expression (%1378, %1379) {"-"}
// SOURCE-NEXT:                                   // %1380 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1381 = jsir.call_expression (%1370, %1373, %1374, %1377, %1380)
// SOURCE-NEXT:                                   // %1381 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.return_statement (%1381)
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%1369) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1347 = jsir.identifier {"_0x4e326e"}
// SOURCE-NEXT:                               // %1347 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1348 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                               // %1348 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1349 = builtin.unrealized_conversion_cast (%1347)
// SOURCE-NEXT:                               // %1349 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.cond_br (%1349) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb1:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1348) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1350 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1350 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1350) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1350) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1356 = jsir.identifier_ref {"_0x5ca77d"}
// SOURCE-NEXT:                                   // %1356 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1357 = jsir.identifier {"_0x4e326e"}
// SOURCE-NEXT:                                   // %1357 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1358 = jsir.identifier {"_0x15f3bc"}
// SOURCE-NEXT:                                   // %1358 = #jsir_builtin<inline_expression_function  "_0x2bf733", 16,  "_0x4c796c", 16,  "_0x3a4c2a", 16,  "_0x10ef38", 16, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x24d832", 12>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4c796c", 16>, 1.756000e+03 : f64, "-">, #jsir<symbol_id "_0x10ef38", 16>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3a4c2a", 16>, 5.400000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x10ef38", 16>, 4.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1359 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4ab", 1.195000e+03 : f64>, 1.195000e+03 : f64}
// SOURCE-NEXT:                                   // %1359 = 1.195000e+03 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1360 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x487", 1.159000e+03 : f64>, 1.159000e+03 : f64}
// SOURCE-NEXT:                                   // %1360 = 1.159000e+03 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1361 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4b0", 1.200000e+03 : f64>, 1.200000e+03 : f64}
// SOURCE-NEXT:                                   // %1361 = 1.200000e+03 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1362 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x48e", 1.166000e+03 : f64>, 1.166000e+03 : f64}
// SOURCE-NEXT:                                   // %1362 = 1.166000e+03 : f64
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1363 = jsir.call_expression (%1358, %1359, %1360, %1361, %1362)
// SOURCE-NEXT:                                   // %1363 = "apply"
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1364 = jsir.member_expression (%1357, %1363)
// SOURCE-NEXT:                                   // %1364 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1365 = jsir.identifier {"_0x305fc8"}
// SOURCE-NEXT:                                   // %1365 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1366 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                                   // %1366 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1367 = jsir.call_expression (%1364, %1365, %1366)
// SOURCE-NEXT:                                   // %1367 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %1368 = jsir.variable_declarator (%1356, %1367)
// SOURCE-NEXT:                                   // %1368 = <uninitialized>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end (%1368)
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1351 = jsir.identifier_ref {"_0x4e326e"}
// SOURCE-NEXT:                               // %1351 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1352 = jsir.null_literal
// SOURCE-NEXT:                               // %1352 = #jsir.null_literal
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1353 = jsir.assignment_expression (%1351, %1352) {"="}
// SOURCE-NEXT:                               // %1353 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                             %1354 = jsir.identifier {"_0x5ca77d"}
// SOURCE-NEXT:                               // %1354 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                             %1355 = jsir.sequence_expression (%1353, %1354)
// SOURCE-NEXT:                               // %1355 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                             jsir.return_statement (%1355)
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1350) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                             cf.br
// SOURCE-NEXT:                               // State [default = <unknown>] { <_0x4e326e#12 : #jsir.null_literal> }
// SOURCE-NEXT:                           ^bb2:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1348) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1346) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1343 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%1343)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb3:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1340) {#jsir<cf_marker ConditionalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1345 = jsir.variable_declarator (%1338, %1344)
// SOURCE-NEXT:                           // %1345 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%1345)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1332 = jsir.identifier_ref {"_0x555f00"}
// SOURCE-NEXT:                       // %1332 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1333 = jsir.array_expression
// SOURCE-NEXT:                       // %1333 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1334 = jsir.unary_expression (%1333) {"!", true}
// SOURCE-NEXT:                       // %1334 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1335 = jsir.assignment_expression (%1332, %1334) {"="}
// SOURCE-NEXT:                       // %1335 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1336 = jsir.identifier {"_0x48da48"}
// SOURCE-NEXT:                       // %1336 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %1337 = jsir.sequence_expression (%1335, %1336)
// SOURCE-NEXT:                       // %1337 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%1337)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1331) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb3:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1326) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%1308) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %1307 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%1307)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%1290) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %620 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %621 = jsir.call_expression (%620)
// SOURCE-NEXT:               // %621 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %622 = jsir.parenthesized_expression (%621)
// SOURCE-NEXT:               // %622 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %623 = jsir.variable_declarator (%619, %622)
// SOURCE-NEXT:               // %623 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %624 = jsir.identifier_ref {"_0x2ffad2"}
// SOURCE-NEXT:               // %624 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %625 = jsir.identifier {"_0x4672d1"}
// SOURCE-NEXT:               // %625 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %626 = jsir.this_expression
// SOURCE-NEXT:               // %626 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %627 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %630 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %630 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%630) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%630) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %895 = jsir.identifier_ref {"_0x5464bf"}
// SOURCE-NEXT:                       // %895 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %896 = jsir.object_expression ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1138 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1288 = jsir.identifier_ref {"_0x3118b5"}
// SOURCE-NEXT:                               // %1288 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1289 = jsir.identifier_ref {"_0x21ddb4"}
// SOURCE-NEXT:                               // %1289 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1288, %1289)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1284 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1284 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1284) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1284) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1285 = jsir.identifier {"_0x3118b5"}
// SOURCE-NEXT:                               // %1285 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1286 = jsir.identifier {"_0x21ddb4"}
// SOURCE-NEXT:                               // %1286 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1287 = jsir.binary_expression (%1285, %1286) {"+"}
// SOURCE-NEXT:                               // %1287 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1287)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1284) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1138 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1139 = jsir.object_property (%1138) {#jsir<string_literal   <L 62 C 14>, <L 62 C 21>, 3459, 3466, 19, "syuJq",  "'syuJq'", "syuJq">, false}
// SOURCE-NEXT:                           // %1139 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1140 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1282 = jsir.identifier_ref {"_0x43622f"}
// SOURCE-NEXT:                               // %1282 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1283 = jsir.identifier_ref {"_0x52d507"}
// SOURCE-NEXT:                               // %1283 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1282, %1283)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1278 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1278 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1278) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1278) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1279 = jsir.identifier {"_0x43622f"}
// SOURCE-NEXT:                               // %1279 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1280 = jsir.identifier {"_0x52d507"}
// SOURCE-NEXT:                               // %1280 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1281 = jsir.binary_expression (%1279, %1280) {"==="}
// SOURCE-NEXT:                               // %1281 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1281)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1278) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1140 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1141 = jsir.object_property (%1140) {#jsir<string_literal   <L 65 C 14>, <L 65 C 21>, 3581, 3588, 19, "nZJPO",  "'nZJPO'", "nZJPO">, false}
// SOURCE-NEXT:                           // %1141 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1142 = jsir.string_literal {#jsir<string_literal_extra "'ajsZf'", "ajsZf">, "ajsZf"}
// SOURCE-NEXT:                           // %1142 = "ajsZf"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1143 = jsir.object_property (%1142) {#jsir<string_literal   <L 68 C 14>, <L 68 C 21>, 3705, 3712, 19, "iQdRz",  "'iQdRz'", "iQdRz">, false}
// SOURCE-NEXT:                           // %1143 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1144 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                           // %1144 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1145 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x205", 5.170000e+02 : f64>, 5.170000e+02 : f64}
// SOURCE-NEXT:                           // %1145 = 5.170000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1146 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f6", 5.020000e+02 : f64>, 5.020000e+02 : f64}
// SOURCE-NEXT:                           // %1146 = 5.020000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1147 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21d", 5.410000e+02 : f64>, 5.410000e+02 : f64}
// SOURCE-NEXT:                           // %1147 = 5.410000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1148 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ef", 4.950000e+02 : f64>, 4.950000e+02 : f64}
// SOURCE-NEXT:                           // %1148 = 4.950000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1149 = jsir.call_expression (%1144, %1145, %1146, %1147, %1148)
// SOURCE-NEXT:                           // %1149 = "LVBjR"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1150 = jsir.object_property (%1149) {#jsir<string_literal   <L 69 C 14>, <L 69 C 21>, 3737, 3744, 19, "IPWWb",  "'IPWWb'", "IPWWb">, false}
// SOURCE-NEXT:                           // %1150 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1151 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1276 = jsir.identifier_ref {"_0x2ce0fe"}
// SOURCE-NEXT:                               // %1276 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1277 = jsir.identifier_ref {"_0x2cf948"}
// SOURCE-NEXT:                               // %1277 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1276, %1277)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1272 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1272 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1272) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1272) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1273 = jsir.identifier {"_0x2ce0fe"}
// SOURCE-NEXT:                               // %1273 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1274 = jsir.identifier {"_0x2cf948"}
// SOURCE-NEXT:                               // %1274 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1275 = jsir.call_expression (%1273, %1274)
// SOURCE-NEXT:                               // %1275 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1275)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1272) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1151 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1152 = jsir.object_property (%1151) {#jsir<string_literal   <L 70 C 14>, <L 70 C 21>, 3799, 3806, 19, "JqNej",  "'JqNej'", "JqNej">, false}
// SOURCE-NEXT:                           // %1152 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1153 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1270 = jsir.identifier_ref {"_0x49f4c1"}
// SOURCE-NEXT:                               // %1270 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1271 = jsir.identifier_ref {"_0xdb5f9d"}
// SOURCE-NEXT:                               // %1271 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1270, %1271)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1266 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1266 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1266) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1266) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1267 = jsir.identifier {"_0x49f4c1"}
// SOURCE-NEXT:                               // %1267 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1268 = jsir.identifier {"_0xdb5f9d"}
// SOURCE-NEXT:                               // %1268 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1269 = jsir.binary_expression (%1267, %1268) {"+"}
// SOURCE-NEXT:                               // %1269 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1269)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1266) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1153 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1154 = jsir.object_property (%1153) {#jsir<string_literal   <L 73 C 14>, <L 73 C 21>, 3920, 3927, 19, "RxDWL",  "'RxDWL'", "RxDWL">, false}
// SOURCE-NEXT:                           // %1154 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1155 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                           // %1155 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1156 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b5", 9.490000e+02 : f64>, 9.490000e+02 : f64}
// SOURCE-NEXT:                           // %1156 = 9.490000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1157 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3e6", 9.980000e+02 : f64>, 9.980000e+02 : f64}
// SOURCE-NEXT:                           // %1157 = 9.980000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1158 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x39f", 9.270000e+02 : f64>, 9.270000e+02 : f64}
// SOURCE-NEXT:                           // %1158 = 9.270000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1159 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3c0", 9.600000e+02 : f64>, 9.600000e+02 : f64}
// SOURCE-NEXT:                           // %1159 = 9.600000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1160 = jsir.call_expression (%1155, %1156, %1157, %1158, %1159)
// SOURCE-NEXT:                           // %1160 = "return (fu"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1161 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                           // %1161 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1162 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x379", 8.890000e+02 : f64>, 8.890000e+02 : f64}
// SOURCE-NEXT:                           // %1162 = 8.890000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1163 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x389", 9.050000e+02 : f64>, 9.050000e+02 : f64}
// SOURCE-NEXT:                           // %1163 = 9.050000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1164 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a2", 9.300000e+02 : f64>, 9.300000e+02 : f64}
// SOURCE-NEXT:                           // %1164 = 9.300000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1165 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38b", 9.070000e+02 : f64>, 9.070000e+02 : f64}
// SOURCE-NEXT:                           // %1165 = 9.070000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1166 = jsir.call_expression (%1161, %1162, %1163, %1164, %1165)
// SOURCE-NEXT:                           // %1166 = "nction() "
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1167 = jsir.binary_expression (%1160, %1166) {"+"}
// SOURCE-NEXT:                           // %1167 = "return (function() "
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1168 = jsir.object_property (%1167) {#jsir<string_literal   <L 76 C 14>, <L 76 C 21>, 4042, 4049, 19, "ihWZS",  "'ihWZS'", "ihWZS">, false}
// SOURCE-NEXT:                           // %1168 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1169 = jsir.string_literal {#jsir<string_literal_extra "'{}.constru'", "{}.constru">, "{}.constru"}
// SOURCE-NEXT:                           // %1169 = "{}.constru"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1170 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                           // %1170 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1171 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3ac", 9.400000e+02 : f64>, 9.400000e+02 : f64}
// SOURCE-NEXT:                           // %1171 = 9.400000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1172 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x399", 9.210000e+02 : f64>, 9.210000e+02 : f64}
// SOURCE-NEXT:                           // %1172 = 9.210000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1173 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3bf", 9.590000e+02 : f64>, 9.590000e+02 : f64}
// SOURCE-NEXT:                           // %1173 = 9.590000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1174 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b9", 9.530000e+02 : f64>, 9.530000e+02 : f64}
// SOURCE-NEXT:                           // %1174 = 9.530000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1175 = jsir.call_expression (%1170, %1171, %1172, %1173, %1174)
// SOURCE-NEXT:                           // %1175 = "ctor(\22retu"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1176 = jsir.binary_expression (%1169, %1175) {"+"}
// SOURCE-NEXT:                           // %1176 = "{}.constructor(\22retu"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1177 = jsir.string_literal {#jsir<string_literal_extra "'rn\\x20this\\x22)('", "rn this\22)(">, "rn this\22)("}
// SOURCE-NEXT:                           // %1177 = "rn this\22)("
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1178 = jsir.binary_expression (%1176, %1177) {"+"}
// SOURCE-NEXT:                           // %1178 = "{}.constructor(\22return this\22)("
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1179 = jsir.string_literal {#jsir<string_literal_extra "'\\x20)'", " )">, " )"}
// SOURCE-NEXT:                           // %1179 = " )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1180 = jsir.binary_expression (%1178, %1179) {"+"}
// SOURCE-NEXT:                           // %1180 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1181 = jsir.object_property (%1180) {#jsir<string_literal   <L 77 C 14>, <L 77 C 21>, 4144, 4151, 19, "tfQnO",  "'tfQnO'", "tfQnO">, false}
// SOURCE-NEXT:                           // %1181 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1182 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1264 = jsir.identifier_ref {"_0x219e19"}
// SOURCE-NEXT:                               // %1264 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1265 = jsir.identifier_ref {"_0x443178"}
// SOURCE-NEXT:                               // %1265 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1264, %1265)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1260 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1260 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1260) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1260) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1261 = jsir.identifier {"_0x219e19"}
// SOURCE-NEXT:                               // %1261 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1262 = jsir.identifier {"_0x443178"}
// SOURCE-NEXT:                               // %1262 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1263 = jsir.binary_expression (%1261, %1262) {"!=="}
// SOURCE-NEXT:                               // %1263 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1263)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1260) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1182 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1183 = jsir.object_property (%1182) {#jsir<string_literal   <L 78 C 14>, <L 78 C 21>, 4252, 4259, 19, "JCsly",  "'JCsly'", "JCsly">, false}
// SOURCE-NEXT:                           // %1183 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1184 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                           // %1184 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1185 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ef", 4.950000e+02 : f64>, 4.950000e+02 : f64}
// SOURCE-NEXT:                           // %1185 = 4.950000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1186 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1cd", 4.610000e+02 : f64>, 4.610000e+02 : f64}
// SOURCE-NEXT:                           // %1186 = 4.610000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1187 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                           // %1187 = 4.910000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1188 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                           // %1188 = 4.910000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1189 = jsir.call_expression (%1184, %1185, %1186, %1187, %1188)
// SOURCE-NEXT:                           // %1189 = "BUbjB"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1190 = jsir.object_property (%1189) {#jsir<string_literal   <L 81 C 14>, <L 81 C 21>, 4376, 4383, 19, "bfMPq",  "'bfMPq'", "bfMPq">, false}
// SOURCE-NEXT:                           // %1190 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1191 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1257 = jsir.identifier_ref {"_0xe039d2"}
// SOURCE-NEXT:                               // %1257 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1258 = jsir.identifier_ref {"_0x46e119"}
// SOURCE-NEXT:                               // %1258 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1259 = jsir.identifier_ref {"_0x21e121"}
// SOURCE-NEXT:                               // %1259 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1257, %1258, %1259)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1252 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1252 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1252) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1252) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1253 = jsir.identifier {"_0xe039d2"}
// SOURCE-NEXT:                               // %1253 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1254 = jsir.identifier {"_0x46e119"}
// SOURCE-NEXT:                               // %1254 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1255 = jsir.identifier {"_0x21e121"}
// SOURCE-NEXT:                               // %1255 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1256 = jsir.call_expression (%1253, %1254, %1255)
// SOURCE-NEXT:                               // %1256 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1256)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1252) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1191 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1192 = jsir.object_property (%1191) {#jsir<string_literal   <L 82 C 14>, <L 82 C 21>, 4438, 4445, 19, "BFaCv",  "'BFaCv'", "BFaCv">, false}
// SOURCE-NEXT:                           // %1192 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1193 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                           // %1193 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1194 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x369", 8.730000e+02 : f64>, 8.730000e+02 : f64}
// SOURCE-NEXT:                           // %1194 = 8.730000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1195 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x36e", 8.780000e+02 : f64>, 8.780000e+02 : f64}
// SOURCE-NEXT:                           // %1195 = 8.780000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1196 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x36d", 8.770000e+02 : f64>, 8.770000e+02 : f64}
// SOURCE-NEXT:                           // %1196 = 8.770000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1197 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38f", 9.110000e+02 : f64>, 9.110000e+02 : f64}
// SOURCE-NEXT:                           // %1197 = 9.110000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1198 = jsir.call_expression (%1193, %1194, %1195, %1196, %1197)
// SOURCE-NEXT:                           // %1198 = "callable"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1199 = jsir.object_property (%1198) {#jsir<string_literal   <L 85 C 14>, <L 85 C 21>, 4581, 4588, 19, "IKNzV",  "'IKNzV'", "IKNzV">, false}
// SOURCE-NEXT:                           // %1199 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1200 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1251 = jsir.identifier_ref {"_0x37da51"}
// SOURCE-NEXT:                               // %1251 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1251)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1248 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1248 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1248) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1248) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1249 = jsir.identifier {"_0x37da51"}
// SOURCE-NEXT:                               // %1249 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1250 = jsir.call_expression (%1249)
// SOURCE-NEXT:                               // %1250 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1250)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1248) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1200 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1201 = jsir.object_property (%1200) {#jsir<string_literal   <L 86 C 14>, <L 86 C 21>, 4643, 4650, 19, "uXNCK",  "'uXNCK'", "uXNCK">, false}
// SOURCE-NEXT:                           // %1201 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1202 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                           // %1202 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1203 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e9", 4.890000e+02 : f64>, 4.890000e+02 : f64}
// SOURCE-NEXT:                           // %1203 = 4.890000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1204 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20d", 5.250000e+02 : f64>, 5.250000e+02 : f64}
// SOURCE-NEXT:                           // %1204 = 5.250000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1205 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ca", 4.580000e+02 : f64>, 4.580000e+02 : f64}
// SOURCE-NEXT:                           // %1205 = 4.580000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1206 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20a", 5.220000e+02 : f64>, 5.220000e+02 : f64}
// SOURCE-NEXT:                           // %1206 = 5.220000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1207 = jsir.call_expression (%1202, %1203, %1204, %1205, %1206)
// SOURCE-NEXT:                           // %1207 = "info"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1208 = jsir.object_property (%1207) {#jsir<string_literal   <L 89 C 14>, <L 89 C 21>, 4744, 4751, 19, "HQlLe",  "'HQlLe'", "HQlLe">, false}
// SOURCE-NEXT:                           // %1208 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1209 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                           // %1209 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1210 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3d4", 9.800000e+02 : f64>, 9.800000e+02 : f64}
// SOURCE-NEXT:                           // %1210 = 9.800000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1211 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3de", 9.900000e+02 : f64>, 9.900000e+02 : f64}
// SOURCE-NEXT:                           // %1211 = 9.900000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1212 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b3", 9.470000e+02 : f64>, 9.470000e+02 : f64}
// SOURCE-NEXT:                           // %1212 = 9.470000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1213 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b6", 9.500000e+02 : f64>, 9.500000e+02 : f64}
// SOURCE-NEXT:                           // %1213 = 9.500000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1214 = jsir.call_expression (%1209, %1210, %1211, %1212, %1213)
// SOURCE-NEXT:                           // %1214 = "exception"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1215 = jsir.object_property (%1214) {#jsir<string_literal   <L 90 C 14>, <L 90 C 21>, 4806, 4813, 19, "ZYRdl",  "'ZYRdl'", "ZYRdl">, false}
// SOURCE-NEXT:                           // %1215 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1216 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                           // %1216 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1217 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x211", 5.290000e+02 : f64>, 5.290000e+02 : f64}
// SOURCE-NEXT:                           // %1217 = 5.290000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1218 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f9", 5.050000e+02 : f64>, 5.050000e+02 : f64}
// SOURCE-NEXT:                           // %1218 = 5.050000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1219 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x220", 5.440000e+02 : f64>, 5.440000e+02 : f64}
// SOURCE-NEXT:                           // %1219 = 5.440000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1220 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x236", 5.660000e+02 : f64>, 5.660000e+02 : f64}
// SOURCE-NEXT:                           // %1220 = 5.660000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1221 = jsir.call_expression (%1216, %1217, %1218, %1219, %1220)
// SOURCE-NEXT:                           // %1221 = "table"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1222 = jsir.object_property (%1221) {#jsir<string_literal   <L 91 C 14>, <L 91 C 21>, 4868, 4875, 19, "esErA",  "'esErA'", "esErA">, false}
// SOURCE-NEXT:                           // %1222 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1223 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                           // %1223 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1224 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e7", 4.870000e+02 : f64>, 4.870000e+02 : f64}
// SOURCE-NEXT:                           // %1224 = 4.870000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1225 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e5", 4.850000e+02 : f64>, 4.850000e+02 : f64}
// SOURCE-NEXT:                           // %1225 = 4.850000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1226 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x209", 5.210000e+02 : f64>, 5.210000e+02 : f64}
// SOURCE-NEXT:                           // %1226 = 5.210000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1227 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e0", 4.800000e+02 : f64>, 4.800000e+02 : f64}
// SOURCE-NEXT:                           // %1227 = 4.800000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1228 = jsir.call_expression (%1223, %1224, %1225, %1226, %1227)
// SOURCE-NEXT:                           // %1228 = "trace"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1229 = jsir.object_property (%1228) {#jsir<string_literal   <L 92 C 14>, <L 92 C 21>, 4930, 4937, 19, "KMrmn",  "'KMrmn'", "KMrmn">, false}
// SOURCE-NEXT:                           // %1229 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1230 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1246 = jsir.identifier_ref {"_0x434fe5"}
// SOURCE-NEXT:                               // %1246 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1247 = jsir.identifier_ref {"_0x2b865b"}
// SOURCE-NEXT:                               // %1247 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1246, %1247)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1242 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1242 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1242) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1242) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1243 = jsir.identifier {"_0x434fe5"}
// SOURCE-NEXT:                               // %1243 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1244 = jsir.identifier {"_0x2b865b"}
// SOURCE-NEXT:                               // %1244 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1245 = jsir.binary_expression (%1243, %1244) {"<"}
// SOURCE-NEXT:                               // %1245 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1245)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1242) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1230 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1231 = jsir.object_property (%1230) {#jsir<string_literal   <L 93 C 14>, <L 93 C 21>, 4992, 4999, 19, "meuOR",  "'meuOR'", "meuOR">, false}
// SOURCE-NEXT:                           // %1231 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1232 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1240 = jsir.identifier_ref {"_0x15a9dc"}
// SOURCE-NEXT:                               // %1240 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1241 = jsir.identifier_ref {"_0x2ad08d"}
// SOURCE-NEXT:                               // %1241 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1240, %1241)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1236 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1236 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1236) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1236) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1237 = jsir.identifier {"_0x15a9dc"}
// SOURCE-NEXT:                               // %1237 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1238 = jsir.identifier {"_0x2ad08d"}
// SOURCE-NEXT:                               // %1238 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1239 = jsir.binary_expression (%1237, %1238) {"!=="}
// SOURCE-NEXT:                               // %1239 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1239)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1236) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %1232 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1233 = jsir.object_property (%1232) {#jsir<string_literal   <L 96 C 14>, <L 96 C 21>, 5114, 5121, 19, "LqGSe",  "'LqGSe'", "LqGSe">, false}
// SOURCE-NEXT:                           // %1233 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1234 = jsir.string_literal {#jsir<string_literal_extra "'stwZs'", "stwZs">, "stwZs"}
// SOURCE-NEXT:                           // %1234 = "stwZs"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1235 = jsir.object_property (%1234) {#jsir<string_literal   <L 99 C 14>, <L 99 C 21>, 5238, 5245, 19, "ZJayL",  "'ZJayL'", "ZJayL">, false}
// SOURCE-NEXT:                           // %1235 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%1139, %1141, %1143, %1150, %1152, %1154, %1168, %1181, %1183, %1190, %1192, %1199, %1201, %1208, %1215, %1222, %1229, %1231, %1233, %1235)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %896 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %897 = jsir.variable_declarator (%895, %896)
// SOURCE-NEXT:                       // %897 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %898 = jsir.identifier_ref {"_0x55cf6f"}
// SOURCE-NEXT:                       // %898 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %899 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %913 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %913 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%913) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%913) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 101 C 23>, <L 101 C 32>, "_0x55557e", 5317, 5326, 30, "_0x55557e">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1134 = jsir.identifier_ref {"_0x5bb5d0"}
// SOURCE-NEXT:                               // %1134 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1135 = jsir.identifier_ref {"_0x35eea7"}
// SOURCE-NEXT:                               // %1135 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1136 = jsir.identifier_ref {"_0x795e0c"}
// SOURCE-NEXT:                               // %1136 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1137 = jsir.identifier_ref {"_0x498a5c"}
// SOURCE-NEXT:                               // %1137 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1134, %1135, %1136, %1137)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1120 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1120 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1120) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1120) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1121 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                               // %1121 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1122 = jsir.identifier {"_0x5bb5d0"}
// SOURCE-NEXT:                               // %1122 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1123 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xa8", 1.680000e+02 : f64>, 1.680000e+02 : f64}
// SOURCE-NEXT:                               // %1123 = 1.680000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1124 = jsir.unary_expression (%1123) {"-", true}
// SOURCE-NEXT:                               // %1124 = -1.680000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1125 = jsir.binary_expression (%1122, %1124) {"-"}
// SOURCE-NEXT:                               // %1125 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1126 = jsir.identifier {"_0x35eea7"}
// SOURCE-NEXT:                               // %1126 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1127 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x16f", 3.670000e+02 : f64>, 3.670000e+02 : f64}
// SOURCE-NEXT:                               // %1127 = 3.670000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1128 = jsir.binary_expression (%1126, %1127) {"-"}
// SOURCE-NEXT:                               // %1128 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1129 = jsir.identifier {"_0x498a5c"}
// SOURCE-NEXT:                               // %1129 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1130 = jsir.identifier {"_0x498a5c"}
// SOURCE-NEXT:                               // %1130 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1131 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x6f", 1.110000e+02 : f64>, 1.110000e+02 : f64}
// SOURCE-NEXT:                               // %1131 = 1.110000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1132 = jsir.binary_expression (%1130, %1131) {"-"}
// SOURCE-NEXT:                               // %1132 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1133 = jsir.call_expression (%1121, %1125, %1128, %1129, %1132)
// SOURCE-NEXT:                               // %1133 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1133)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1120) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 104 C 23>, <L 104 C 32>, "_0x7fdc4d", 5515, 5524, 31, "_0x7fdc4d">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1116 = jsir.identifier_ref {"_0x5bf779"}
// SOURCE-NEXT:                               // %1116 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1117 = jsir.identifier_ref {"_0x429b8a"}
// SOURCE-NEXT:                               // %1117 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1118 = jsir.identifier_ref {"_0x37652a"}
// SOURCE-NEXT:                               // %1118 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1119 = jsir.identifier_ref {"_0x3759df"}
// SOURCE-NEXT:                               // %1119 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1116, %1117, %1118, %1119)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1103 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %1103 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1103) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1103) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1104 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                               // %1104 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1105 = jsir.identifier {"_0x3759df"}
// SOURCE-NEXT:                               // %1105 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1106 = jsir.identifier {"_0x429b8a"}
// SOURCE-NEXT:                               // %1106 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1107 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1dd", 4.770000e+02 : f64>, 4.770000e+02 : f64}
// SOURCE-NEXT:                               // %1107 = 4.770000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1108 = jsir.binary_expression (%1106, %1107) {"-"}
// SOURCE-NEXT:                               // %1108 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1109 = jsir.identifier {"_0x37652a"}
// SOURCE-NEXT:                               // %1109 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1110 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x101", 2.570000e+02 : f64>, 2.570000e+02 : f64}
// SOURCE-NEXT:                               // %1110 = 2.570000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1111 = jsir.binary_expression (%1109, %1110) {"-"}
// SOURCE-NEXT:                               // %1111 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1112 = jsir.identifier {"_0x429b8a"}
// SOURCE-NEXT:                               // %1112 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1113 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14b", 3.310000e+02 : f64>, 3.310000e+02 : f64}
// SOURCE-NEXT:                               // %1113 = 3.310000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1114 = jsir.binary_expression (%1112, %1113) {"-"}
// SOURCE-NEXT:                               // %1114 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1115 = jsir.call_expression (%1104, %1105, %1108, %1111, %1114)
// SOURCE-NEXT:                               // %1115 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%1115)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%1103) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %914 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %914 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %915 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %915 = #jsir_builtin<inline_expression_function  "_0x5bb5d0", 30,  "_0x35eea7", 30,  "_0x795e0c", 30,  "_0x498a5c", 30, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5bb5d0", 30>, #jsir_builtin<inline_expression_unary_expression 1.680000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x35eea7", 30>, 3.670000e+02 : f64, "-">, #jsir<symbol_id "_0x498a5c", 30>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x498a5c", 30>, 1.110000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %916 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x159", 3.450000e+02 : f64>, 3.450000e+02 : f64}
// SOURCE-NEXT:                           // %916 = 3.450000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %917 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x162", 3.540000e+02 : f64>, 3.540000e+02 : f64}
// SOURCE-NEXT:                           // %917 = 3.540000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %918 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13c", 3.160000e+02 : f64>, 3.160000e+02 : f64}
// SOURCE-NEXT:                           // %918 = 3.160000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %919 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x15f", 3.510000e+02 : f64>, 3.510000e+02 : f64}
// SOURCE-NEXT:                           // %919 = 3.510000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %920 = jsir.call_expression (%915, %916, %917, %918, %919)
// SOURCE-NEXT:                           // %920 = "nZJPO"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %921 = jsir.member_expression (%914, %920)
// SOURCE-NEXT:                           // %921 = #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %922 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %922 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %923 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %923 = #jsir_builtin<inline_expression_function  "_0x5bb5d0", 30,  "_0x35eea7", 30,  "_0x795e0c", 30,  "_0x498a5c", 30, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5bb5d0", 30>, #jsir_builtin<inline_expression_unary_expression 1.680000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x35eea7", 30>, 3.670000e+02 : f64, "-">, #jsir<symbol_id "_0x498a5c", 30>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x498a5c", 30>, 1.110000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %924 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x121", 2.890000e+02 : f64>, 2.890000e+02 : f64}
// SOURCE-NEXT:                           // %924 = 2.890000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %925 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x136", 3.100000e+02 : f64>, 3.100000e+02 : f64}
// SOURCE-NEXT:                           // %925 = 3.100000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %926 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13e", 3.180000e+02 : f64>, 3.180000e+02 : f64}
// SOURCE-NEXT:                           // %926 = 3.180000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %927 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10f", 2.710000e+02 : f64>, 2.710000e+02 : f64}
// SOURCE-NEXT:                           // %927 = 2.710000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %928 = jsir.call_expression (%923, %924, %925, %926, %927)
// SOURCE-NEXT:                           // %928 = "iQdRz"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %929 = jsir.member_expression (%922, %928)
// SOURCE-NEXT:                           // %929 = "ajsZf"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %930 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %930 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %931 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %931 = #jsir_builtin<inline_expression_function  "_0x5bf779", 31,  "_0x429b8a", 31,  "_0x37652a", 31,  "_0x3759df", 31, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, #jsir<symbol_id "_0x3759df", 31>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 4.770000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x37652a", 31>, 2.570000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 3.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %932 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4cc", 1.228000e+03 : f64>, 1.228000e+03 : f64}
// SOURCE-NEXT:                           // %932 = 1.228000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %933 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4df", 1.247000e+03 : f64>, 1.247000e+03 : f64}
// SOURCE-NEXT:                           // %933 = 1.247000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %934 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4eb", 1.259000e+03 : f64>, 1.259000e+03 : f64}
// SOURCE-NEXT:                           // %934 = 1.259000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %935 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4cd", 1.229000e+03 : f64>, 1.229000e+03 : f64}
// SOURCE-NEXT:                           // %935 = 1.229000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %936 = jsir.call_expression (%931, %932, %933, %934, %935)
// SOURCE-NEXT:                           // %936 = "IPWWb"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %937 = jsir.member_expression (%930, %936)
// SOURCE-NEXT:                           // %937 = "LVBjR"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %938 = jsir.call_expression (%921, %929, %937)
// SOURCE-NEXT:                           // %938 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %939 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                           // %939 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %940 = builtin.unrealized_conversion_cast (%938)
// SOURCE-NEXT:                           // %940 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%940) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%939) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %941 = jsir.identifier {"_0x18ec3f"}
// SOURCE-NEXT:                           // %941 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %942 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %942 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %943 = jsir.string_literal {#jsir<string_literal_extra "'syuJq'", "syuJq">, "syuJq"}
// SOURCE-NEXT:                           // %943 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %944 = jsir.member_expression (%942, %943)
// SOURCE-NEXT:                           // %944 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %945 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %945 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %946 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13b", 3.150000e+02 : f64>, 3.150000e+02 : f64}
// SOURCE-NEXT:                           // %946 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %947 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x122", 2.900000e+02 : f64>, 2.900000e+02 : f64}
// SOURCE-NEXT:                           // %947 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %948 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x146", 3.260000e+02 : f64>, 3.260000e+02 : f64}
// SOURCE-NEXT:                           // %948 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %949 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x148", 3.280000e+02 : f64>, 3.280000e+02 : f64}
// SOURCE-NEXT:                           // %949 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %950 = jsir.call_expression (%945, %946, %947, %948, %949)
// SOURCE-NEXT:                           // %950 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %951 = jsir.identifier {"_0x5c7608"}
// SOURCE-NEXT:                           // %951 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %952 = jsir.binary_expression (%950, %951) {"+"}
// SOURCE-NEXT:                           // %952 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %953 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %953 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %954 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14d", 3.330000e+02 : f64>, 3.330000e+02 : f64}
// SOURCE-NEXT:                           // %954 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %955 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x167", 3.590000e+02 : f64>, 3.590000e+02 : f64}
// SOURCE-NEXT:                           // %955 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %956 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:                           // %956 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %957 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x160", 3.520000e+02 : f64>, 3.520000e+02 : f64}
// SOURCE-NEXT:                           // %957 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %958 = jsir.call_expression (%953, %954, %955, %956, %957)
// SOURCE-NEXT:                           // %958 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %959 = jsir.string_literal {#jsir<string_literal_extra "'f\\x20@babel/c'", "f @babel/c">, "f @babel/c"}
// SOURCE-NEXT:                           // %959 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %960 = jsir.binary_expression (%958, %959) {"+"}
// SOURCE-NEXT:                           // %960 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %961 = jsir.string_literal {#jsir<string_literal_extra "'ore\\x20is\\x20onl'", "ore is onl">, "ore is onl"}
// SOURCE-NEXT:                           // %961 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %962 = jsir.binary_expression (%960, %961) {"+"}
// SOURCE-NEXT:                           // %962 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %963 = jsir.string_literal {#jsir<string_literal_extra "'y\\x20'", "y ">, "y "}
// SOURCE-NEXT:                           // %963 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %964 = jsir.binary_expression (%962, %963) {"+"}
// SOURCE-NEXT:                           // %964 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %965 = jsir.parenthesized_expression (%964)
// SOURCE-NEXT:                           // %965 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %966 = jsir.binary_expression (%952, %965) {"+"}
// SOURCE-NEXT:                           // %966 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %967 = jsir.identifier {"_0x3629a5"}
// SOURCE-NEXT:                           // %967 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %968 = jsir.binary_expression (%966, %967) {"+"}
// SOURCE-NEXT:                           // %968 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %969 = jsir.string_literal {#jsir<string_literal_extra "'\\x20from\\x20the\\x20'", " from the ">, " from the "}
// SOURCE-NEXT:                           // %969 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %970 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %970 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %971 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x15f", 3.510000e+02 : f64>, 3.510000e+02 : f64}
// SOURCE-NEXT:                           // %971 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %972 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x157", 3.430000e+02 : f64>, 3.430000e+02 : f64}
// SOURCE-NEXT:                           // %972 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %973 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x169", 3.610000e+02 : f64>, 3.610000e+02 : f64}
// SOURCE-NEXT:                           // %973 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %974 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x183", 3.870000e+02 : f64>, 3.870000e+02 : f64}
// SOURCE-NEXT:                           // %974 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %975 = jsir.call_expression (%970, %971, %972, %973, %974)
// SOURCE-NEXT:                           // %975 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %976 = jsir.binary_expression (%969, %975) {"+"}
// SOURCE-NEXT:                           // %976 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %977 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %977 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %978 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14c", 3.320000e+02 : f64>, 3.320000e+02 : f64}
// SOURCE-NEXT:                           // %978 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %979 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13c", 3.160000e+02 : f64>, 3.160000e+02 : f64}
// SOURCE-NEXT:                           // %979 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %980 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x15b", 3.470000e+02 : f64>, 3.470000e+02 : f64}
// SOURCE-NEXT:                           // %980 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %981 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x165", 3.570000e+02 : f64>, 3.570000e+02 : f64}
// SOURCE-NEXT:                           // %981 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %982 = jsir.call_expression (%977, %978, %979, %980, %981)
// SOURCE-NEXT:                           // %982 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %983 = jsir.binary_expression (%976, %982) {"+"}
// SOURCE-NEXT:                           // %983 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %984 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %984 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %985 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x135", 3.090000e+02 : f64>, 3.090000e+02 : f64}
// SOURCE-NEXT:                           // %985 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %986 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14f", 3.350000e+02 : f64>, 3.350000e+02 : f64}
// SOURCE-NEXT:                           // %986 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %987 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x15d", 3.490000e+02 : f64>, 3.490000e+02 : f64}
// SOURCE-NEXT:                           // %987 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %988 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x135", 3.090000e+02 : f64>, 3.090000e+02 : f64}
// SOURCE-NEXT:                           // %988 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %989 = jsir.call_expression (%984, %985, %986, %987, %988)
// SOURCE-NEXT:                           // %989 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %990 = jsir.binary_expression (%983, %989) {"+"}
// SOURCE-NEXT:                           // %990 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %991 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                           // %991 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %992 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x119", 2.810000e+02 : f64>, 2.810000e+02 : f64}
// SOURCE-NEXT:                           // %992 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %993 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x136", 3.100000e+02 : f64>, 3.100000e+02 : f64}
// SOURCE-NEXT:                           // %993 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %994 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x130", 3.040000e+02 : f64>, 3.040000e+02 : f64}
// SOURCE-NEXT:                           // %994 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %995 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x104", 2.600000e+02 : f64>, 2.600000e+02 : f64}
// SOURCE-NEXT:                           // %995 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %996 = jsir.call_expression (%991, %992, %993, %994, %995)
// SOURCE-NEXT:                           // %996 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %997 = jsir.binary_expression (%990, %996) {"+"}
// SOURCE-NEXT:                           // %997 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %998 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %998 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %999 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x51d", 1.309000e+03 : f64>, 1.309000e+03 : f64}
// SOURCE-NEXT:                           // %999 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1000 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4fb", 1.275000e+03 : f64>, 1.275000e+03 : f64}
// SOURCE-NEXT:                           // %1000 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1001 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x520", 1.312000e+03 : f64>, 1.312000e+03 : f64}
// SOURCE-NEXT:                           // %1001 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1002 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4df", 1.247000e+03 : f64>, 1.247000e+03 : f64}
// SOURCE-NEXT:                           // %1002 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1003 = jsir.call_expression (%998, %999, %1000, %1001, %1002)
// SOURCE-NEXT:                           // %1003 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1004 = jsir.binary_expression (%997, %1003) {"+"}
// SOURCE-NEXT:                           // %1004 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1005 = jsir.string_literal {#jsir<string_literal_extra "'ded.'", "ded.">, "ded."}
// SOURCE-NEXT:                           // %1005 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1006 = jsir.binary_expression (%1004, %1005) {"+"}
// SOURCE-NEXT:                           // %1006 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1007 = jsir.call_expression (%944, %968, %1006)
// SOURCE-NEXT:                           // %1007 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1008 = jsir.new_expression (%941, %1007)
// SOURCE-NEXT:                           // %1008 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.return_statement (%1008)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%939) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1009 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1009 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1009) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1009) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1101 = jsir.identifier_ref {"_0x98a032"}
// SOURCE-NEXT:                               // %1101 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %1102 = jsir.variable_declarator (%1101)
// SOURCE-NEXT:                               // %1102 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1102)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1010 = jslir.control_flow_starter {#jsir<cf_kind TryStatement>}
// SOURCE-NEXT:                           // %1010 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb3:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1010) {#jsir<cf_marker TryStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1011 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1011 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1011) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1011) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1012 = jsir.identifier_ref {"_0x98a032"}
// SOURCE-NEXT:                           // %1012 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1013 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1013 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1014 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %1014 = #jsir_builtin<inline_expression_function  "_0x5bf779", 31,  "_0x429b8a", 31,  "_0x37652a", 31,  "_0x3759df", 31, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, #jsir<symbol_id "_0x3759df", 31>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 4.770000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x37652a", 31>, 2.570000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 3.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1015 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x501", 1.281000e+03 : f64>, 1.281000e+03 : f64}
// SOURCE-NEXT:                           // %1015 = 1.281000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1016 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4eb", 1.259000e+03 : f64>, 1.259000e+03 : f64}
// SOURCE-NEXT:                           // %1016 = 1.259000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1017 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4e0", 1.248000e+03 : f64>, 1.248000e+03 : f64}
// SOURCE-NEXT:                           // %1017 = 1.248000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1018 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x511", 1.297000e+03 : f64>, 1.297000e+03 : f64}
// SOURCE-NEXT:                           // %1018 = 1.297000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1019 = jsir.call_expression (%1014, %1015, %1016, %1017, %1018)
// SOURCE-NEXT:                           // %1019 = "JqNej"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1020 = jsir.member_expression (%1013, %1019)
// SOURCE-NEXT:                           // %1020 = #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1021 = jsir.identifier {"Function"}
// SOURCE-NEXT:                           // %1021 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1022 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1022 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1023 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %1023 = #jsir_builtin<inline_expression_function  "_0x5bf779", 31,  "_0x429b8a", 31,  "_0x37652a", 31,  "_0x3759df", 31, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, #jsir<symbol_id "_0x3759df", 31>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 4.770000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x37652a", 31>, 2.570000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 3.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1024 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x509", 1.289000e+03 : f64>, 1.289000e+03 : f64}
// SOURCE-NEXT:                           // %1024 = 1.289000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1025 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x509", 1.289000e+03 : f64>, 1.289000e+03 : f64}
// SOURCE-NEXT:                           // %1025 = 1.289000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1026 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4f7", 1.271000e+03 : f64>, 1.271000e+03 : f64}
// SOURCE-NEXT:                           // %1026 = 1.271000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1027 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x501", 1.281000e+03 : f64>, 1.281000e+03 : f64}
// SOURCE-NEXT:                           // %1027 = 1.281000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1028 = jsir.call_expression (%1023, %1024, %1025, %1026, %1027)
// SOURCE-NEXT:                           // %1028 = "RxDWL"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1029 = jsir.member_expression (%1022, %1028)
// SOURCE-NEXT:                           // %1029 = #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1030 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1030 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1031 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %1031 = #jsir_builtin<inline_expression_function  "_0x5bf779", 31,  "_0x429b8a", 31,  "_0x37652a", 31,  "_0x3759df", 31, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, #jsir<symbol_id "_0x3759df", 31>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 4.770000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x37652a", 31>, 2.570000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 3.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1032 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4b8", 1.208000e+03 : f64>, 1.208000e+03 : f64}
// SOURCE-NEXT:                           // %1032 = 1.208000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1033 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4e0", 1.248000e+03 : f64>, 1.248000e+03 : f64}
// SOURCE-NEXT:                           // %1033 = 1.248000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1034 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4cc", 1.228000e+03 : f64>, 1.228000e+03 : f64}
// SOURCE-NEXT:                           // %1034 = 1.228000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1035 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4ce", 1.230000e+03 : f64>, 1.230000e+03 : f64}
// SOURCE-NEXT:                           // %1035 = 1.230000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1036 = jsir.call_expression (%1031, %1032, %1033, %1034, %1035)
// SOURCE-NEXT:                           // %1036 = "syuJq"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1037 = jsir.member_expression (%1030, %1036)
// SOURCE-NEXT:                           // %1037 = #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1038 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1038 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1039 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %1039 = #jsir_builtin<inline_expression_function  "_0x5bf779", 31,  "_0x429b8a", 31,  "_0x37652a", 31,  "_0x3759df", 31, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, #jsir<symbol_id "_0x3759df", 31>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 4.770000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x37652a", 31>, 2.570000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x429b8a", 31>, 3.310000e+02 : f64, "-">>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1040 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4ed", 1.261000e+03 : f64>, 1.261000e+03 : f64}
// SOURCE-NEXT:                           // %1040 = 1.261000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1041 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x513", 1.299000e+03 : f64>, 1.299000e+03 : f64}
// SOURCE-NEXT:                           // %1041 = 1.299000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1042 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x520", 1.312000e+03 : f64>, 1.312000e+03 : f64}
// SOURCE-NEXT:                           // %1042 = 1.312000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1043 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x51d", 1.309000e+03 : f64>, 1.309000e+03 : f64}
// SOURCE-NEXT:                           // %1043 = 1.309000e+03 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1044 = jsir.call_expression (%1039, %1040, %1041, %1042, %1043)
// SOURCE-NEXT:                           // %1044 = "ihWZS"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1045 = jsir.member_expression (%1038, %1044)
// SOURCE-NEXT:                           // %1045 = "return (function() "
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1046 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1046 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1047 = jsir.string_literal {#jsir<string_literal_extra "'tfQnO'", "tfQnO">, "tfQnO"}
// SOURCE-NEXT:                           // %1047 = "tfQnO"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1048 = jsir.member_expression (%1046, %1047)
// SOURCE-NEXT:                           // %1048 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1049 = jsir.call_expression (%1037, %1045, %1048)
// SOURCE-NEXT:                           // %1049 = "return (function() {}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1050 = jsir.string_literal {#jsir<string_literal_extra "');'", ");">, ");"}
// SOURCE-NEXT:                           // %1050 = ");"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1051 = jsir.call_expression (%1029, %1049, %1050)
// SOURCE-NEXT:                           // %1051 = "return (function() {}.constructor(\22return this\22)( ));"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1052 = jsir.call_expression (%1020, %1021, %1051)
// SOURCE-NEXT:                           // %1052 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1053 = jsir.call_expression (%1052)
// SOURCE-NEXT:                           // %1053 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1054 = jsir.assignment_expression (%1012, %1053) {"="}
// SOURCE-NEXT:                           // %1054 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.expression_statement (%1054)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1011) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb4:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1010) {#jsir<cf_marker TryStatementHandler>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1055 = jsir.identifier_ref {"_0x306e21"}
// SOURCE-NEXT:                           // %1055 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.catch_clause_start (%1055)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1056 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1056 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1056) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1056) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1057 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1057 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1058 = jsir.string_literal {#jsir<string_literal_extra "'JCsly'", "JCsly">, "JCsly"}
// SOURCE-NEXT:                           // %1058 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1059 = jsir.member_expression (%1057, %1058)
// SOURCE-NEXT:                           // %1059 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1060 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1060 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1061 = jsir.identifier {"_0x7fdc4d"}
// SOURCE-NEXT:                           // %1061 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1062 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4b9", 1.209000e+03 : f64>, 1.209000e+03 : f64}
// SOURCE-NEXT:                           // %1062 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1063 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4d7", 1.239000e+03 : f64>, 1.239000e+03 : f64}
// SOURCE-NEXT:                           // %1063 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1064 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4cc", 1.228000e+03 : f64>, 1.228000e+03 : f64}
// SOURCE-NEXT:                           // %1064 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1065 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4c1", 1.217000e+03 : f64>, 1.217000e+03 : f64}
// SOURCE-NEXT:                           // %1065 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1066 = jsir.call_expression (%1061, %1062, %1063, %1064, %1065)
// SOURCE-NEXT:                           // %1066 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1067 = jsir.member_expression (%1060, %1066)
// SOURCE-NEXT:                           // %1067 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1068 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                           // %1068 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1069 = jsir.string_literal {#jsir<string_literal_extra "'bfMPq'", "bfMPq">, "bfMPq"}
// SOURCE-NEXT:                           // %1069 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1070 = jsir.member_expression (%1068, %1069)
// SOURCE-NEXT:                           // %1070 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1071 = jsir.call_expression (%1059, %1067, %1070)
// SOURCE-NEXT:                           // %1071 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1072 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                           // %1072 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1073 = builtin.unrealized_conversion_cast (%1071)
// SOURCE-NEXT:                           // %1073 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.cond_br (%1073) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb5:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1072) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1074 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1074 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1074) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1074) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1075 = jsir.identifier {"_0x28fe3a"}
// SOURCE-NEXT:                           // %1075 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1076 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                           // %1076 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1077 = builtin.unrealized_conversion_cast (%1075)
// SOURCE-NEXT:                           // %1077 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.cond_br (%1077) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb6:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1076) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1078 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %1078 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1078) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1078) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1088 = jsir.identifier_ref {"_0xf457f"}
// SOURCE-NEXT:                               // %1088 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1089 = jsir.identifier {"_0x1f05f3"}
// SOURCE-NEXT:                               // %1089 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1090 = jsir.identifier {"_0x55557e"}
// SOURCE-NEXT:                               // %1090 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1091 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11d", 2.850000e+02 : f64>, 2.850000e+02 : f64}
// SOURCE-NEXT:                               // %1091 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1092 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x113", 2.750000e+02 : f64>, 2.750000e+02 : f64}
// SOURCE-NEXT:                               // %1092 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1093 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x125", 2.930000e+02 : f64>, 2.930000e+02 : f64}
// SOURCE-NEXT:                               // %1093 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1094 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x124", 2.920000e+02 : f64>, 2.920000e+02 : f64}
// SOURCE-NEXT:                               // %1094 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1095 = jsir.call_expression (%1090, %1091, %1092, %1093, %1094)
// SOURCE-NEXT:                               // %1095 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1096 = jsir.member_expression (%1089, %1095)
// SOURCE-NEXT:                               // %1096 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1097 = jsir.identifier {"_0x3ac693"}
// SOURCE-NEXT:                               // %1097 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1098 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                               // %1098 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1099 = jsir.call_expression (%1096, %1097, %1098)
// SOURCE-NEXT:                               // %1099 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %1100 = jsir.variable_declarator (%1088, %1099)
// SOURCE-NEXT:                               // %1100 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%1100)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1079 = jsir.identifier_ref {"_0x30398c"}
// SOURCE-NEXT:                           // %1079 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1080 = jsir.null_literal
// SOURCE-NEXT:                           // %1080 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1081 = jsir.assignment_expression (%1079, %1080) {"="}
// SOURCE-NEXT:                           // %1081 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1082 = jsir.identifier {"_0xf457f"}
// SOURCE-NEXT:                           // %1082 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1083 = jsir.sequence_expression (%1081, %1082)
// SOURCE-NEXT:                           // %1083 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.return_statement (%1083)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1078) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb7:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1076) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1074) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb8:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1072) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1084 = jsir.identifier_ref {"_0x98a032"}
// SOURCE-NEXT:                           // %1084 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1085 = jsir.identifier {"window"}
// SOURCE-NEXT:                           // %1085 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %1086 = jsir.assignment_expression (%1084, %1085) {"="}
// SOURCE-NEXT:                           // %1086 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.expression_statement (%1086)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb9:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1072) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1056) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb10:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1010) {#jsir<cf_marker TryStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %1087 = jsir.identifier {"_0x98a032"}
// SOURCE-NEXT:                           // %1087 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%1087)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%1009) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb11:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%939) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%913) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %899 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %900 = jsir.variable_declarator (%898, %899)
// SOURCE-NEXT:                       // %900 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %901 = jsir.identifier_ref {"_0x101220"}
// SOURCE-NEXT:                       // %901 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %902 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                       // %902 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %903 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %903 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %904 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b7", 9.510000e+02 : f64>, 9.510000e+02 : f64}
// SOURCE-NEXT:                       // %904 = 9.510000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %905 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3f1", 1.009000e+03 : f64>, 1.009000e+03 : f64}
// SOURCE-NEXT:                       // %905 = 1.009000e+03 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %906 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3e8", 1.000000e+03 : f64>, 1.000000e+03 : f64}
// SOURCE-NEXT:                       // %906 = 1.000000e+03 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %907 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3cf", 9.750000e+02 : f64>, 9.750000e+02 : f64}
// SOURCE-NEXT:                       // %907 = 9.750000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %908 = jsir.call_expression (%903, %904, %905, %906, %907)
// SOURCE-NEXT:                       // %908 = "uXNCK"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %909 = jsir.member_expression (%902, %908)
// SOURCE-NEXT:                       // %909 = #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %910 = jsir.identifier {"_0x55cf6f"}
// SOURCE-NEXT:                       // %910 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %911 = jsir.call_expression (%909, %910)
// SOURCE-NEXT:                       // %911 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %912 = jsir.variable_declarator (%901, %911)
// SOURCE-NEXT:                       // %912 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%897, %900, %912)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.function_declaration {false, false, #jsir<identifier   <L 125 C 15>, <L 125 C 24>, "_0x30145a", 7316, 7325, 37, "_0x30145a">} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %891 = jsir.identifier_ref {"_0x54c92d"}
// SOURCE-NEXT:                       // %891 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %892 = jsir.identifier_ref {"_0x425092"}
// SOURCE-NEXT:                       // %892 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %893 = jsir.identifier_ref {"_0x4a5cfe"}
// SOURCE-NEXT:                       // %893 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %894 = jsir.identifier_ref {"_0x167ebc"}
// SOURCE-NEXT:                       // %894 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%891, %892, %893, %894)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %884 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %884 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%884) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%884) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %885 = jsir.identifier {"_0x4cd8"}
// SOURCE-NEXT:                       // %885 = #jsir_builtin<builtin_function "_0x4cd8">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %886 = jsir.identifier {"_0x167ebc"}
// SOURCE-NEXT:                       // %886 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %887 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x206", 5.180000e+02 : f64>, 5.180000e+02 : f64}
// SOURCE-NEXT:                       // %887 = 5.180000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %888 = jsir.binary_expression (%886, %887) {"-"}
// SOURCE-NEXT:                       // %888 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %889 = jsir.identifier {"_0x54c92d"}
// SOURCE-NEXT:                       // %889 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %890 = jsir.call_expression (%885, %888, %889)
// SOURCE-NEXT:                       // %890 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%890)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%884) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %861 = jsir.identifier_ref {"_0x52e013"}
// SOURCE-NEXT:                       // %861 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %862 = jsir.identifier {"_0x101220"}
// SOURCE-NEXT:                       // %862 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %863 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %863 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %864 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x39a", 9.220000e+02 : f64>, 9.220000e+02 : f64}
// SOURCE-NEXT:                       // %864 = 9.220000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %865 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3be", 9.580000e+02 : f64>, 9.580000e+02 : f64}
// SOURCE-NEXT:                       // %865 = 9.580000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %866 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38b", 9.070000e+02 : f64>, 9.070000e+02 : f64}
// SOURCE-NEXT:                       // %866 = 9.070000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %867 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x399", 9.210000e+02 : f64>, 9.210000e+02 : f64}
// SOURCE-NEXT:                       // %867 = 9.210000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %868 = jsir.call_expression (%863, %864, %865, %866, %867)
// SOURCE-NEXT:                       // %868 = "console"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %869 = jsir.member_expression_ref (%862, %868)
// SOURCE-NEXT:                       // %869 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %870 = jsir.identifier {"_0x101220"}
// SOURCE-NEXT:                       // %870 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %871 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                       // %871 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %872 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1d9", 4.730000e+02 : f64>, 4.730000e+02 : f64}
// SOURCE-NEXT:                       // %872 = 4.730000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %873 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c0", 4.480000e+02 : f64>, 4.480000e+02 : f64}
// SOURCE-NEXT:                       // %873 = 4.480000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %874 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f6", 5.020000e+02 : f64>, 5.020000e+02 : f64}
// SOURCE-NEXT:                       // %874 = 5.020000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %875 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c1", 4.490000e+02 : f64>, 4.490000e+02 : f64}
// SOURCE-NEXT:                       // %875 = 4.490000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %876 = jsir.call_expression (%871, %872, %873, %874, %875)
// SOURCE-NEXT:                       // %876 = "console"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %877 = jsir.member_expression (%870, %876)
// SOURCE-NEXT:                       // %877 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %878 = jslir.logical_expression_start (%877) {"||"}
// SOURCE-NEXT:                       // %878 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %879 = builtin.unrealized_conversion_cast (%877)
// SOURCE-NEXT:                       // %879 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%879, %877) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb1:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%878) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %880 = jsir.object_expression ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %880 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br (%880)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb2:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%878) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %882 = jsir.assignment_expression (%869, %881) {"="}
// SOURCE-NEXT:                       // %882 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %883 = jsir.variable_declarator (%861, %882)
// SOURCE-NEXT:                       // %883 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x52e013#19 : <uninitialized>> }
// SOURCE-NEXT:                     jsir.exprs_region_end (%883)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.function_declaration {false, false, #jsir<identifier   <L 129 C 15>, <L 129 C 24>, "_0x51073b", 7582, 7591, 38, "_0x51073b">} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %857 = jsir.identifier_ref {"_0xf81d04"}
// SOURCE-NEXT:                       // %857 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %858 = jsir.identifier_ref {"_0x756616"}
// SOURCE-NEXT:                       // %858 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %859 = jsir.identifier_ref {"_0x1025da"}
// SOURCE-NEXT:                       // %859 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %860 = jsir.identifier_ref {"_0x5e4339"}
// SOURCE-NEXT:                       // %860 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%857, %858, %859, %860)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %850 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %850 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%850) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%850) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %851 = jsir.identifier {"_0x4cd8"}
// SOURCE-NEXT:                       // %851 = #jsir_builtin<builtin_function "_0x4cd8">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %852 = jsir.identifier {"_0xf81d04"}
// SOURCE-NEXT:                       // %852 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %853 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x46", 7.000000e+01 : f64>, 7.000000e+01 : f64}
// SOURCE-NEXT:                       // %853 = 7.000000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %854 = jsir.binary_expression (%852, %853) {"-"}
// SOURCE-NEXT:                       // %854 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %855 = jsir.identifier {"_0x1025da"}
// SOURCE-NEXT:                       // %855 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %856 = jsir.call_expression (%851, %854, %855)
// SOURCE-NEXT:                       // %856 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%856)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%850) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %812 = jsir.identifier_ref {"_0x441e2d"}
// SOURCE-NEXT:                       // %812 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %813 = jsir.string_literal {#jsir<string_literal_extra "'log'", "log">, "log"}
// SOURCE-NEXT:                       // %813 = "log"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %814 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                       // %814 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %815 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e4", 4.840000e+02 : f64>, 4.840000e+02 : f64}
// SOURCE-NEXT:                       // %815 = 4.840000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %816 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e8", 4.880000e+02 : f64>, 4.880000e+02 : f64}
// SOURCE-NEXT:                       // %816 = 4.880000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %817 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c9", 4.570000e+02 : f64>, 4.570000e+02 : f64}
// SOURCE-NEXT:                       // %817 = 4.570000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %818 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c4", 4.520000e+02 : f64>, 4.520000e+02 : f64}
// SOURCE-NEXT:                       // %818 = 4.520000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %819 = jsir.call_expression (%814, %815, %816, %817, %818)
// SOURCE-NEXT:                       // %819 = "warn"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %820 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                       // %820 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %821 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                       // %821 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %822 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1db", 4.750000e+02 : f64>, 4.750000e+02 : f64}
// SOURCE-NEXT:                       // %822 = 4.750000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %823 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e6", 4.860000e+02 : f64>, 4.860000e+02 : f64}
// SOURCE-NEXT:                       // %823 = 4.860000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %824 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f1", 4.970000e+02 : f64>, 4.970000e+02 : f64}
// SOURCE-NEXT:                       // %824 = 4.970000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %825 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1bc", 4.440000e+02 : f64>, 4.440000e+02 : f64}
// SOURCE-NEXT:                       // %825 = 4.440000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %826 = jsir.call_expression (%821, %822, %823, %824, %825)
// SOURCE-NEXT:                       // %826 = "HQlLe"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %827 = jsir.member_expression (%820, %826)
// SOURCE-NEXT:                       // %827 = "info"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %828 = jsir.string_literal {#jsir<string_literal_extra "'error'", "error">, "error"}
// SOURCE-NEXT:                       // %828 = "error"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %829 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                       // %829 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %830 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %830 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %831 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3bd", 9.570000e+02 : f64>, 9.570000e+02 : f64}
// SOURCE-NEXT:                       // %831 = 9.570000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %832 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3dd", 9.890000e+02 : f64>, 9.890000e+02 : f64}
// SOURCE-NEXT:                       // %832 = 9.890000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %833 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3d2", 9.780000e+02 : f64>, 9.780000e+02 : f64}
// SOURCE-NEXT:                       // %833 = 9.780000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %834 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3bf", 9.590000e+02 : f64>, 9.590000e+02 : f64}
// SOURCE-NEXT:                       // %834 = 9.590000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %835 = jsir.call_expression (%830, %831, %832, %833, %834)
// SOURCE-NEXT:                       // %835 = "ZYRdl"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %836 = jsir.member_expression (%829, %835)
// SOURCE-NEXT:                       // %836 = "exception"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %837 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                       // %837 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %838 = jsir.string_literal {#jsir<string_literal_extra "'esErA'", "esErA">, "esErA"}
// SOURCE-NEXT:                       // %838 = "esErA"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %839 = jsir.member_expression (%837, %838)
// SOURCE-NEXT:                       // %839 = "table"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %840 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                       // %840 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %841 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %841 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %842 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x375", 8.850000e+02 : f64>, 8.850000e+02 : f64}
// SOURCE-NEXT:                       // %842 = 8.850000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %843 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x386", 9.020000e+02 : f64>, 9.020000e+02 : f64}
// SOURCE-NEXT:                       // %843 = 9.020000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %844 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a3", 9.310000e+02 : f64>, 9.310000e+02 : f64}
// SOURCE-NEXT:                       // %844 = 9.310000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %845 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x383", 8.990000e+02 : f64>, 8.990000e+02 : f64}
// SOURCE-NEXT:                       // %845 = 8.990000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %846 = jsir.call_expression (%841, %842, %843, %844, %845)
// SOURCE-NEXT:                       // %846 = "KMrmn"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %847 = jsir.member_expression (%840, %846)
// SOURCE-NEXT:                       // %847 = "trace"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %848 = jsir.array_expression (%813, %819, %827, %828, %836, %839, %847)
// SOURCE-NEXT:                       // %848 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %849 = jsir.variable_declarator (%812, %848)
// SOURCE-NEXT:                       // %849 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%849)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %631 = jslir.control_flow_starter {#jsir<cf_kind ForStatement>}
// SOURCE-NEXT:                   // %631 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb1:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%631) {#jsir<cf_marker ForStatementInit>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %797 = jsir.identifier_ref {"_0x36145e"}
// SOURCE-NEXT:                       // %797 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %798 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1", 1.000000e+00 : f64>, 1.000000e+00 : f64}
// SOURCE-NEXT:                       // %798 = 1.000000e+00 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %799 = jsir.unary_expression (%798) {"-", true}
// SOURCE-NEXT:                       // %799 = -1.000000e+00 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %800 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e7", 7.430000e+02 : f64>, 7.430000e+02 : f64}
// SOURCE-NEXT:                       // %800 = 7.430000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %801 = jsir.unary_expression (%800) {"-", true}
// SOURCE-NEXT:                       // %801 = -7.430000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %802 = jsir.binary_expression (%799, %801) {"*"}
// SOURCE-NEXT:                       // %802 = 7.430000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %803 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// SOURCE-NEXT:                       // %803 = 2.000000e+00 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %804 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x161", 3.530000e+02 : f64>, 3.530000e+02 : f64}
// SOURCE-NEXT:                       // %804 = 3.530000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %805 = jsir.unary_expression (%804) {"-", true}
// SOURCE-NEXT:                       // %805 = -3.530000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %806 = jsir.binary_expression (%803, %805) {"*"}
// SOURCE-NEXT:                       // %806 = -7.060000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %807 = jsir.binary_expression (%802, %806) {"+"}
// SOURCE-NEXT:                       // %807 = 3.700000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %808 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x25", 3.700000e+01 : f64>, 3.700000e+01 : f64}
// SOURCE-NEXT:                       // %808 = 3.700000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %809 = jsir.unary_expression (%808) {"-", true}
// SOURCE-NEXT:                       // %809 = -3.700000e+01 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %810 = jsir.binary_expression (%807, %809) {"+"}
// SOURCE-NEXT:                       // %810 = 0.000000e+00 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %811 = jsir.variable_declarator (%797, %810)
// SOURCE-NEXT:                       // %811 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x36145e#39 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     jsir.exprs_region_end (%811)
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x36145e#39 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { <_0x36145e#39 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { <_0x36145e#39 : 0.000000e+00 : f64> }
// SOURCE-NEXT:               ^bb2:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%631) {#jsir<cf_marker ForStatementTest>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %632 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                   // %632 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %633 = jsir.string_literal {#jsir<string_literal_extra "'meuOR'", "meuOR">, "meuOR"}
// SOURCE-NEXT:                   // %633 = "meuOR"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %634 = jsir.member_expression (%632, %633)
// SOURCE-NEXT:                   // %634 = #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %635 = jsir.identifier {"_0x36145e"}
// SOURCE-NEXT:                   // %635 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %636 = jsir.identifier {"_0x441e2d"}
// SOURCE-NEXT:                   // %636 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %637 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                   // %637 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %638 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e6", 4.860000e+02 : f64>, 4.860000e+02 : f64}
// SOURCE-NEXT:                   // %638 = 4.860000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %639 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1cd", 4.610000e+02 : f64>, 4.610000e+02 : f64}
// SOURCE-NEXT:                   // %639 = 4.610000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %640 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e9", 4.890000e+02 : f64>, 4.890000e+02 : f64}
// SOURCE-NEXT:                   // %640 = 4.890000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %641 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c3", 4.510000e+02 : f64>, 4.510000e+02 : f64}
// SOURCE-NEXT:                   // %641 = 4.510000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %642 = jsir.call_expression (%637, %638, %639, %640, %641)
// SOURCE-NEXT:                   // %642 = "length"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %643 = jsir.member_expression (%636, %642)
// SOURCE-NEXT:                   // %643 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %644 = jsir.call_expression (%634, %635, %643)
// SOURCE-NEXT:                   // %644 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %645 = builtin.unrealized_conversion_cast (%644)
// SOURCE-NEXT:                   // %645 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.cond_br (%645) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb3:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%631) {#jsir<cf_marker ForStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %646 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %646 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%646) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%646) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %647 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                   // %647 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %648 = jsir.string_literal {#jsir<string_literal_extra "'LqGSe'", "LqGSe">, "LqGSe"}
// SOURCE-NEXT:                   // %648 = "LqGSe"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %649 = jsir.member_expression (%647, %648)
// SOURCE-NEXT:                   // %649 = #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %650 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                   // %650 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %651 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1fc", 5.080000e+02 : f64>, 5.080000e+02 : f64}
// SOURCE-NEXT:                   // %651 = 5.080000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %652 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x21a", 5.380000e+02 : f64>, 5.380000e+02 : f64}
// SOURCE-NEXT:                   // %652 = 5.380000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %653 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x208", 5.200000e+02 : f64>, 5.200000e+02 : f64}
// SOURCE-NEXT:                   // %653 = 5.200000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %654 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1d8", 4.720000e+02 : f64>, 4.720000e+02 : f64}
// SOURCE-NEXT:                   // %654 = 4.720000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %655 = jsir.call_expression (%650, %651, %652, %653, %654)
// SOURCE-NEXT:                   // %655 = "thXxj"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %656 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                   // %656 = #jsir_builtin<inline_expression_object  "syuJq", #jsir_builtin<inline_expression_function  "_0x3118b5", 20,  "_0x21ddb4", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3118b5", 20>, #jsir<symbol_id "_0x21ddb4", 20>, "+">>,  "nZJPO", #jsir_builtin<inline_expression_function  "_0x43622f", 21,  "_0x52d507", 21, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x43622f", 21>, #jsir<symbol_id "_0x52d507", 21>, "===">>,  "iQdRz", "ajsZf",  "IPWWb", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.170000e+02 : f64, 5.020000e+02 : f64, 5.410000e+02 : f64, 4.950000e+02 : f64>,  "JqNej", #jsir_builtin<inline_expression_function  "_0x2ce0fe", 22,  "_0x2cf948", 22, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x2ce0fe", 22>, #jsir<symbol_id "_0x2cf948", 22>>>,  "RxDWL", #jsir_builtin<inline_expression_function  "_0x49f4c1", 23,  "_0xdb5f9d", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x49f4c1", 23>, #jsir<symbol_id "_0xdb5f9d", 23>, "+">>,  "ihWZS", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.490000e+02 : f64, 9.980000e+02 : f64, 9.270000e+02 : f64, 9.600000e+02 : f64>, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.890000e+02 : f64, 9.050000e+02 : f64, 9.300000e+02 : f64, 9.070000e+02 : f64>, "+">,  "tfQnO", #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression #jsir_builtin<inline_expression_binary_expression "{}.constru", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.400000e+02 : f64, 9.210000e+02 : f64, 9.590000e+02 : f64, 9.530000e+02 : f64>, "+">, "rn this\22)(", "+">, " )", "+">,  "JCsly", #jsir_builtin<inline_expression_function  "_0x219e19", 24,  "_0x443178", 24, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x219e19", 24>, #jsir<symbol_id "_0x443178", 24>, "!==">>,  "bfMPq", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.950000e+02 : f64, 4.610000e+02 : f64, 4.910000e+02 : f64, 4.910000e+02 : f64>,  "BFaCv", #jsir_builtin<inline_expression_function  "_0xe039d2", 25,  "_0x46e119", 25,  "_0x21e121", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xe039d2", 25>, #jsir<symbol_id "_0x46e119", 25>, #jsir<symbol_id "_0x21e121", 25>>>,  "IKNzV", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 8.730000e+02 : f64, 8.780000e+02 : f64, 8.770000e+02 : f64, 9.110000e+02 : f64>,  "uXNCK", #jsir_builtin<inline_expression_function  "_0x37da51", 26, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x37da51", 26>, >>,  "HQlLe", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.890000e+02 : f64, 5.250000e+02 : f64, 4.580000e+02 : f64, 5.220000e+02 : f64>,  "ZYRdl", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x30145a", 19>, 9.800000e+02 : f64, 9.900000e+02 : f64, 9.470000e+02 : f64, 9.500000e+02 : f64>,  "esErA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 5.290000e+02 : f64, 5.050000e+02 : f64, 5.440000e+02 : f64, 5.660000e+02 : f64>,  "KMrmn", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x51073b", 19>, 4.870000e+02 : f64, 4.850000e+02 : f64, 5.210000e+02 : f64, 4.800000e+02 : f64>,  "meuOR", #jsir_builtin<inline_expression_function  "_0x434fe5", 27,  "_0x2b865b", 27, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x434fe5", 27>, #jsir<symbol_id "_0x2b865b", 27>, "<">>,  "LqGSe", #jsir_builtin<inline_expression_function  "_0x15a9dc", 28,  "_0x2ad08d", 28, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x15a9dc", 28>, #jsir<symbol_id "_0x2ad08d", 28>, "!==">>,  "ZJayL", "stwZs">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %657 = jsir.string_literal {#jsir<string_literal_extra "'ZJayL'", "ZJayL">, "ZJayL"}
// SOURCE-NEXT:                   // %657 = "ZJayL"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %658 = jsir.member_expression (%656, %657)
// SOURCE-NEXT:                   // %658 = "stwZs"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %659 = jsir.call_expression (%649, %655, %658)
// SOURCE-NEXT:                   // %659 = true
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %660 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                   // %660 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %661 = builtin.unrealized_conversion_cast (%659)
// SOURCE-NEXT:                   // %661 = true
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.cond_br (%661) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb4:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%660) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %662 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %662 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%662) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%662) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %755 = jsir.identifier_ref {"_0x3262a7"}
// SOURCE-NEXT:                       // %755 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %756 = jsir.identifier {"_0x4672d1"}
// SOURCE-NEXT:                       // %756 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %757 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %757 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %758 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x391", 9.130000e+02 : f64>, 9.130000e+02 : f64}
// SOURCE-NEXT:                       // %758 = 9.130000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %759 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a4", 9.320000e+02 : f64>, 9.320000e+02 : f64}
// SOURCE-NEXT:                       // %759 = 9.320000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %760 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37d", 8.930000e+02 : f64>, 8.930000e+02 : f64}
// SOURCE-NEXT:                       // %760 = 8.930000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %761 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x382", 8.980000e+02 : f64>, 8.980000e+02 : f64}
// SOURCE-NEXT:                       // %761 = 8.980000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %762 = jsir.call_expression (%757, %758, %759, %760, %761)
// SOURCE-NEXT:                       // %762 = "constructo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %763 = jsir.string_literal {#jsir<string_literal_extra "'r'", "r">, "r"}
// SOURCE-NEXT:                       // %763 = "r"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %764 = jsir.binary_expression (%762, %763) {"+"}
// SOURCE-NEXT:                       // %764 = "constructor"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %765 = jsir.member_expression (%756, %764)
// SOURCE-NEXT:                       // %765 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %766 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                       // %766 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %767 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1d7", 4.710000e+02 : f64>, 4.710000e+02 : f64}
// SOURCE-NEXT:                       // %767 = 4.710000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %768 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e7", 4.870000e+02 : f64>, 4.870000e+02 : f64}
// SOURCE-NEXT:                       // %768 = 4.870000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %769 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e4", 4.840000e+02 : f64>, 4.840000e+02 : f64}
// SOURCE-NEXT:                       // %769 = 4.840000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %770 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c2", 4.500000e+02 : f64>, 4.500000e+02 : f64}
// SOURCE-NEXT:                       // %770 = 4.500000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %771 = jsir.call_expression (%766, %767, %768, %769, %770)
// SOURCE-NEXT:                       // %771 = "prototype"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %772 = jsir.member_expression (%765, %771)
// SOURCE-NEXT:                       // %772 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %773 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                       // %773 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %774 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3be", 9.580000e+02 : f64>, 9.580000e+02 : f64}
// SOURCE-NEXT:                       // %774 = 9.580000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %775 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b0", 9.440000e+02 : f64>, 9.440000e+02 : f64}
// SOURCE-NEXT:                       // %775 = 9.440000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %776 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3e0", 9.920000e+02 : f64>, 9.920000e+02 : f64}
// SOURCE-NEXT:                       // %776 = 9.920000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %777 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b7", 9.510000e+02 : f64>, 9.510000e+02 : f64}
// SOURCE-NEXT:                       // %777 = 9.510000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %778 = jsir.call_expression (%773, %774, %775, %776, %777)
// SOURCE-NEXT:                       // %778 = "bind"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %779 = jsir.member_expression (%772, %778)
// SOURCE-NEXT:                       // %779 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %780 = jsir.identifier {"_0x4672d1"}
// SOURCE-NEXT:                       // %780 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %781 = jsir.call_expression (%779, %780)
// SOURCE-NEXT:                       // %781 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %782 = jsir.variable_declarator (%755, %781)
// SOURCE-NEXT:                       // %782 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %783 = jsir.identifier_ref {"_0x30cb84"}
// SOURCE-NEXT:                       // %783 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %784 = jsir.identifier {"_0x441e2d"}
// SOURCE-NEXT:                       // %784 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %785 = jsir.identifier {"_0x36145e"}
// SOURCE-NEXT:                       // %785 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %786 = jsir.member_expression (%784, %785)
// SOURCE-NEXT:                       // %786 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %787 = jsir.variable_declarator (%783, %786)
// SOURCE-NEXT:                       // %787 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %788 = jsir.identifier_ref {"_0x1d642d"}
// SOURCE-NEXT:                       // %788 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %789 = jsir.identifier {"_0x52e013"}
// SOURCE-NEXT:                       // %789 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %790 = jsir.identifier {"_0x30cb84"}
// SOURCE-NEXT:                       // %790 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %791 = jsir.member_expression (%789, %790)
// SOURCE-NEXT:                       // %791 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %792 = jslir.logical_expression_start (%791) {"||"}
// SOURCE-NEXT:                       // %792 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %793 = builtin.unrealized_conversion_cast (%791)
// SOURCE-NEXT:                       // %793 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%793, %791) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb1:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%792) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %794 = jsir.identifier {"_0x3262a7"}
// SOURCE-NEXT:                       // %794 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br (%794)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb2:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%792) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %796 = jsir.variable_declarator (%788, %795)
// SOURCE-NEXT:                       // %796 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%782, %787, %796)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %663 = jsir.identifier {"_0x3262a7"}
// SOURCE-NEXT:                   // %663 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %664 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                   // %664 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %665 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37d", 8.930000e+02 : f64>, 8.930000e+02 : f64}
// SOURCE-NEXT:                   // %665 = 8.930000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %666 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x39e", 9.260000e+02 : f64>, 9.260000e+02 : f64}
// SOURCE-NEXT:                   // %666 = 9.260000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %667 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x371", 8.810000e+02 : f64>, 8.810000e+02 : f64}
// SOURCE-NEXT:                   // %667 = 8.810000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %668 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38d", 9.090000e+02 : f64>, 9.090000e+02 : f64}
// SOURCE-NEXT:                   // %668 = 9.090000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %669 = jsir.call_expression (%664, %665, %666, %667, %668)
// SOURCE-NEXT:                   // %669 = "__proto__"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %670 = jsir.member_expression_ref (%663, %669)
// SOURCE-NEXT:                   // %670 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %671 = jsir.identifier {"_0x4672d1"}
// SOURCE-NEXT:                   // %671 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %672 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                   // %672 = #jsir_builtin<inline_expression_function  "_0x54c92d", 37,  "_0x425092", 37,  "_0x4a5cfe", 37,  "_0x167ebc", 37, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x167ebc", 37>, 5.180000e+02 : f64, "-">, #jsir<symbol_id "_0x54c92d", 37>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %673 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3c0", 9.600000e+02 : f64>, 9.600000e+02 : f64}
// SOURCE-NEXT:                   // %673 = 9.600000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %674 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3ac", 9.400000e+02 : f64>, 9.400000e+02 : f64}
// SOURCE-NEXT:                   // %674 = 9.400000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %675 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3aa", 9.380000e+02 : f64>, 9.380000e+02 : f64}
// SOURCE-NEXT:                   // %675 = 9.380000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %676 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b7", 9.510000e+02 : f64>, 9.510000e+02 : f64}
// SOURCE-NEXT:                   // %676 = 9.510000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %677 = jsir.call_expression (%672, %673, %674, %675, %676)
// SOURCE-NEXT:                   // %677 = "bind"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %678 = jsir.member_expression (%671, %677)
// SOURCE-NEXT:                   // %678 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %679 = jsir.identifier {"_0x4672d1"}
// SOURCE-NEXT:                   // %679 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %680 = jsir.call_expression (%678, %679)
// SOURCE-NEXT:                   // %680 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %681 = jsir.assignment_expression (%670, %680) {"="}
// SOURCE-NEXT:                   // %681 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %682 = jsir.identifier {"_0x3262a7"}
// SOURCE-NEXT:                   // %682 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %683 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                   // %683 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %684 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1eb", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                   // %684 = 4.910000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %685 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c7", 4.550000e+02 : f64>, 4.550000e+02 : f64}
// SOURCE-NEXT:                   // %685 = 4.550000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %686 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x211", 5.290000e+02 : f64>, 5.290000e+02 : f64}
// SOURCE-NEXT:                   // %686 = 5.290000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %687 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20d", 5.250000e+02 : f64>, 5.250000e+02 : f64}
// SOURCE-NEXT:                   // %687 = 5.250000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %688 = jsir.call_expression (%683, %684, %685, %686, %687)
// SOURCE-NEXT:                   // %688 = "toString"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %689 = jsir.member_expression_ref (%682, %688)
// SOURCE-NEXT:                   // %689 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %690 = jsir.identifier {"_0x1d642d"}
// SOURCE-NEXT:                   // %690 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %691 = jsir.string_literal {#jsir<string_literal_extra "'toString'", "toString">, "toString"}
// SOURCE-NEXT:                   // %691 = "toString"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %692 = jsir.member_expression (%690, %691)
// SOURCE-NEXT:                   // %692 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %693 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                   // %693 = #jsir_builtin<inline_expression_function  "_0xf81d04", 38,  "_0x756616", 38,  "_0x1025da", 38,  "_0x5e4339", 38, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xf81d04", 38>, 7.000000e+01 : f64, "-">, #jsir<symbol_id "_0x1025da", 38>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %694 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f7", 5.030000e+02 : f64>, 5.030000e+02 : f64}
// SOURCE-NEXT:                   // %694 = 5.030000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %695 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e4", 4.840000e+02 : f64>, 4.840000e+02 : f64}
// SOURCE-NEXT:                   // %695 = 4.840000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %696 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x20b", 5.230000e+02 : f64>, 5.230000e+02 : f64}
// SOURCE-NEXT:                   // %696 = 5.230000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %697 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x219", 5.370000e+02 : f64>, 5.370000e+02 : f64}
// SOURCE-NEXT:                   // %697 = 5.370000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %698 = jsir.call_expression (%693, %694, %695, %696, %697)
// SOURCE-NEXT:                   // %698 = "bind"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %699 = jsir.member_expression (%692, %698)
// SOURCE-NEXT:                   // %699 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %700 = jsir.identifier {"_0x1d642d"}
// SOURCE-NEXT:                   // %700 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %701 = jsir.call_expression (%699, %700)
// SOURCE-NEXT:                   // %701 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %702 = jsir.assignment_expression (%689, %701) {"="}
// SOURCE-NEXT:                   // %702 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %703 = jsir.identifier {"_0x52e013"}
// SOURCE-NEXT:                   // %703 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %704 = jsir.identifier {"_0x30cb84"}
// SOURCE-NEXT:                   // %704 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %705 = jsir.member_expression_ref (%703, %704)
// SOURCE-NEXT:                   // %705 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %706 = jsir.identifier {"_0x3262a7"}
// SOURCE-NEXT:                   // %706 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %707 = jsir.assignment_expression (%705, %706) {"="}
// SOURCE-NEXT:                   // %707 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %708 = jsir.sequence_expression (%681, %702, %707)
// SOURCE-NEXT:                   // %708 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.expression_statement (%708)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%662) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb5:
// SOURCE-NEXT:                   // <not executable>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%660) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %709 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %709 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%709) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%709) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %710 = jsir.identifier {"_0x2c87de"}
// SOURCE-NEXT:                   // %710 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %711 = jsir.unary_expression (%710) {"!", true}
// SOURCE-NEXT:                   // %711 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %712 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                   // %712 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %713 = builtin.unrealized_conversion_cast (%711)
// SOURCE-NEXT:                   // %713 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 cf.cond_br (%713) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:               ^bb6:
// SOURCE-NEXT:                   // <not executable>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%712) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %714 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                   // %714 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %715 = jsir.identifier {"_0x51073b"}
// SOURCE-NEXT:                   // %715 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %716 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ee", 4.940000e+02 : f64>, 4.940000e+02 : f64}
// SOURCE-NEXT:                   // %716 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %717 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1e7", 4.870000e+02 : f64>, 4.870000e+02 : f64}
// SOURCE-NEXT:                   // %717 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %718 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x205", 5.170000e+02 : f64>, 5.170000e+02 : f64}
// SOURCE-NEXT:                   // %718 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %719 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1d8", 4.720000e+02 : f64>, 4.720000e+02 : f64}
// SOURCE-NEXT:                   // %719 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %720 = jsir.call_expression (%715, %716, %717, %718, %719)
// SOURCE-NEXT:                   // %720 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %721 = jsir.member_expression (%714, %720)
// SOURCE-NEXT:                   // %721 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %722 = jsir.identifier {"_0x12c23d"}
// SOURCE-NEXT:                   // %722 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %723 = jsir.identifier {"_0x5fc719"}
// SOURCE-NEXT:                   // %723 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %724 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                   // %724 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %725 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3bb", 9.550000e+02 : f64>, 9.550000e+02 : f64}
// SOURCE-NEXT:                   // %725 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %726 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3ac", 9.400000e+02 : f64>, 9.400000e+02 : f64}
// SOURCE-NEXT:                   // %726 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %727 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a2", 9.300000e+02 : f64>, 9.300000e+02 : f64}
// SOURCE-NEXT:                   // %727 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %728 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x392", 9.140000e+02 : f64>, 9.140000e+02 : f64}
// SOURCE-NEXT:                   // %728 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %729 = jsir.call_expression (%724, %725, %726, %727, %728)
// SOURCE-NEXT:                   // %729 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %730 = jsir.binary_expression (%723, %729) {"+"}
// SOURCE-NEXT:                   // %730 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %731 = jsir.identifier {"_0x5464bf"}
// SOURCE-NEXT:                   // %731 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %732 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                   // %732 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %733 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x391", 9.130000e+02 : f64>, 9.130000e+02 : f64}
// SOURCE-NEXT:                   // %733 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %734 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x388", 9.040000e+02 : f64>, 9.040000e+02 : f64}
// SOURCE-NEXT:                   // %734 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %735 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x398", 9.200000e+02 : f64>, 9.200000e+02 : f64}
// SOURCE-NEXT:                   // %735 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %736 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b1", 9.450000e+02 : f64>, 9.450000e+02 : f64}
// SOURCE-NEXT:                   // %736 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %737 = jsir.call_expression (%732, %733, %734, %735, %736)
// SOURCE-NEXT:                   // %737 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %738 = jsir.member_expression (%731, %737)
// SOURCE-NEXT:                   // %738 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %739 = jsir.call_expression (%721, %722, %730, %738)
// SOURCE-NEXT:                   // %739 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jsir.throw_statement (%739)
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:               ^bb7:
// SOURCE-NEXT:                   // <not executable>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%712) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %740 = jsir.identifier {"_0xe52f70"}
// SOURCE-NEXT:                   // %740 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %741 = jsir.identifier {"_0x5b7551"}
// SOURCE-NEXT:                   // %741 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %742 = jsir.identifier {"_0x30145a"}
// SOURCE-NEXT:                   // %742 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %743 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x38b", 9.070000e+02 : f64>, 9.070000e+02 : f64}
// SOURCE-NEXT:                   // %743 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %744 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x371", 8.810000e+02 : f64>, 8.810000e+02 : f64}
// SOURCE-NEXT:                   // %744 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %745 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a9", 9.370000e+02 : f64>, 9.370000e+02 : f64}
// SOURCE-NEXT:                   // %745 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %746 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x392", 9.140000e+02 : f64>, 9.140000e+02 : f64}
// SOURCE-NEXT:                   // %746 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %747 = jsir.call_expression (%742, %743, %744, %745, %746)
// SOURCE-NEXT:                   // %747 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %748 = jsir.binary_expression (%741, %747) {"+"}
// SOURCE-NEXT:                   // %748 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %749 = jsir.member_expression (%740, %748)
// SOURCE-NEXT:                   // %749 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %750 = jsir.identifier {"_0x2c043e"}
// SOURCE-NEXT:                   // %750 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %751 = jsir.spread_element (%750)
// SOURCE-NEXT:                   // %751 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 %752 = jsir.call_expression (%749, %751)
// SOURCE-NEXT:                   // %752 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jsir.return_statement (%752)
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%709) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <uninitialized>] { }
// SOURCE-NEXT:               ^bb8:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%660) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%646) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb9:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%631) {#jsir<cf_marker ForStatementUpdate>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %753 = jsir.identifier_ref {"_0x36145e"}
// SOURCE-NEXT:                   // %753 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %754 = jsir.update_expression (%753) {"++", false}
// SOURCE-NEXT:                   // %754 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.expr_region_end (%754)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb10:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%631) {#jsir<cf_marker ForStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%630) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %627 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %628 = jsir.call_expression (%625, %626, %627)
// SOURCE-NEXT:               // %628 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %629 = jsir.variable_declarator (%624, %628)
// SOURCE-NEXT:               // %629 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%623, %629)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %0 = jsir.identifier {"_0x2ffad2"}
// SOURCE-NEXT:           // %0 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %1 = jsir.call_expression (%0)
// SOURCE-NEXT:           // %1 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%1)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %2 = jsir.string_literal {#jsir<string_literal_extra "'use strict'", "use strict">, "use strict"}
// SOURCE-NEXT:           // %2 = "use strict"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%2)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %607 = jsir.identifier_ref {"babelP"}
// SOURCE-NEXT:               // %607 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %608 = jsir.import
// SOURCE-NEXT:               // %608 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %609 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:               // %609 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %610 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x504", 1.284000e+03 : f64>, 1.284000e+03 : f64}
// SOURCE-NEXT:               // %610 = 1.284000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %611 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x529", 1.321000e+03 : f64>, 1.321000e+03 : f64}
// SOURCE-NEXT:               // %611 = 1.321000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %612 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x525", 1.317000e+03 : f64>, 1.317000e+03 : f64}
// SOURCE-NEXT:               // %612 = 1.317000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %613 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x538", 1.336000e+03 : f64>, 1.336000e+03 : f64}
// SOURCE-NEXT:               // %613 = 1.336000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %614 = jsir.call_expression (%609, %610, %611, %612, %613)
// SOURCE-NEXT:               // %614 = "./lib/inde"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %615 = jsir.string_literal {#jsir<string_literal_extra "'x.js'", "x.js">, "x.js"}
// SOURCE-NEXT:               // %615 = "x.js"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %616 = jsir.binary_expression (%614, %615) {"+"}
// SOURCE-NEXT:               // %616 = "./lib/index.js"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %617 = jsir.call_expression (%608, %616)
// SOURCE-NEXT:               // %617 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %618 = jsir.variable_declarator (%607, %617)
// SOURCE-NEXT:               // %618 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%618)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 155 C 9>, <L 155 C 18>, "_0x40ee28", 9293, 9302, 43, "_0x40ee28">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %603 = jsir.identifier_ref {"_0x186aad"}
// SOURCE-NEXT:               // %603 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %604 = jsir.identifier_ref {"_0x1a1677"}
// SOURCE-NEXT:               // %604 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %605 = jsir.identifier_ref {"_0x5e238c"}
// SOURCE-NEXT:               // %605 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %606 = jsir.identifier_ref {"_0x297818"}
// SOURCE-NEXT:               // %606 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%603, %604, %605, %606)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %596 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %596 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %597 = jsir.identifier {"_0x4cd8"}
// SOURCE-NEXT:               // %597 = #jsir_builtin<builtin_function "_0x4cd8">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %598 = jsir.identifier {"_0x1a1677"}
// SOURCE-NEXT:               // %598 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %599 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a5", 9.330000e+02 : f64>, 9.330000e+02 : f64}
// SOURCE-NEXT:               // %599 = 9.330000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %600 = jsir.binary_expression (%598, %599) {"-"}
// SOURCE-NEXT:               // %600 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %601 = jsir.identifier {"_0x297818"}
// SOURCE-NEXT:               // %601 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %602 = jsir.call_expression (%597, %600, %601)
// SOURCE-NEXT:               // %602 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%602)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %593 = jsir.identifier_ref {"babel"}
// SOURCE-NEXT:               // %593 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %594 = jsir.null_literal
// SOURCE-NEXT:               // %594 = #jsir.null_literal
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %595 = jsir.variable_declarator (%593, %594)
// SOURCE-NEXT:               // %595 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             jsir.exprs_region_end (%595)
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %590 = jsir.identifier_ref {"_0xa94f9c"}
// SOURCE-NEXT:               // %590 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %591 = jsir.object_expression ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:                 jsir.exprs_region_end
// SOURCE-NEXT:                   // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %591 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %592 = jsir.variable_declarator (%590, %591)
// SOURCE-NEXT:               // %592 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             jsir.exprs_region_end (%592)
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %3 = jsir.identifier {"_0xa94f9c"}
// SOURCE-NEXT:           // %3 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %4 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %4 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %5 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11e", 2.860000e+02 : f64>, 2.860000e+02 : f64}
// SOURCE-NEXT:           // %5 = 2.860000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %6 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13d", 3.170000e+02 : f64>, 3.170000e+02 : f64}
// SOURCE-NEXT:           // %6 = 3.170000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %7 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12c", 3.000000e+02 : f64>, 3.000000e+02 : f64}
// SOURCE-NEXT:           // %7 = 3.000000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %8 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x141", 3.210000e+02 : f64>, 3.210000e+02 : f64}
// SOURCE-NEXT:           // %8 = 3.210000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %9 = jsir.call_expression (%4, %5, %6, %7, %8)
// SOURCE-NEXT:           // %9 = "set"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %10 = jsir.member_expression_ref (%3, %9)
// SOURCE-NEXT:           // %10 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %11 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %589 = jsir.identifier_ref {"_0x262242"}
// SOURCE-NEXT:               // %589 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%589)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %585 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %585 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%585) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%585) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %586 = jsir.identifier_ref {"babel"}
// SOURCE-NEXT:               // %586 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %587 = jsir.identifier {"_0x262242"}
// SOURCE-NEXT:               // %587 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %588 = jsir.assignment_expression (%586, %587) {"="}
// SOURCE-NEXT:               // %588 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.expression_statement (%588)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%585) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // %11 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %12 = jsir.assignment_expression (%10, %11) {"="}
// SOURCE-NEXT:           // %12 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %13 = jsir.identifier {"Object"}
// SOURCE-NEXT:           // %13 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %14 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %14 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %15 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x144", 3.240000e+02 : f64>, 3.240000e+02 : f64}
// SOURCE-NEXT:           // %15 = 3.240000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %16 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x129", 2.970000e+02 : f64>, 2.970000e+02 : f64}
// SOURCE-NEXT:           // %16 = 2.970000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %17 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14a", 3.300000e+02 : f64>, 3.300000e+02 : f64}
// SOURCE-NEXT:           // %17 = 3.300000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %18 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x173", 3.710000e+02 : f64>, 3.710000e+02 : f64}
// SOURCE-NEXT:           // %18 = 3.710000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %19 = jsir.call_expression (%14, %15, %16, %17, %18)
// SOURCE-NEXT:           // %19 = "defineProp"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %20 = jsir.string_literal {#jsir<string_literal_extra "'erty'", "erty">, "erty"}
// SOURCE-NEXT:           // %20 = "erty"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %21 = jsir.binary_expression (%19, %20) {"+"}
// SOURCE-NEXT:           // %21 = "defineProperty"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %22 = jsir.member_expression (%13, %21)
// SOURCE-NEXT:           // %22 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %23 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %23 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %24 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:           // %24 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %25 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x540", 1.344000e+03 : f64>, 1.344000e+03 : f64}
// SOURCE-NEXT:           // %25 = 1.344000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %26 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x53d", 1.341000e+03 : f64>, 1.341000e+03 : f64}
// SOURCE-NEXT:           // %26 = 1.341000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %27 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x52c", 1.324000e+03 : f64>, 1.324000e+03 : f64}
// SOURCE-NEXT:           // %27 = 1.324000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %28 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x538", 1.336000e+03 : f64>, 1.336000e+03 : f64}
// SOURCE-NEXT:           // %28 = 1.336000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %29 = jsir.call_expression (%24, %25, %26, %27, %28)
// SOURCE-NEXT:           // %29 = "__ initial"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %30 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %30 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %31 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x148", 3.280000e+02 : f64>, 3.280000e+02 : f64}
// SOURCE-NEXT:           // %31 = 3.280000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %32 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x138", 3.120000e+02 : f64>, 3.120000e+02 : f64}
// SOURCE-NEXT:           // %32 = 3.120000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %33 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x152", 3.380000e+02 : f64>, 3.380000e+02 : f64}
// SOURCE-NEXT:           // %33 = 3.380000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %34 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x172", 3.700000e+02 : f64>, 3.700000e+02 : f64}
// SOURCE-NEXT:           // %34 = 3.700000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %35 = jsir.call_expression (%30, %31, %32, %33, %34)
// SOURCE-NEXT:           // %35 = "ize @babel"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %36 = jsir.binary_expression (%29, %35) {"+"}
// SOURCE-NEXT:           // %36 = "__ initialize @babel"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %37 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:           // %37 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %38 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x554", 1.364000e+03 : f64>, 1.364000e+03 : f64}
// SOURCE-NEXT:           // %38 = 1.364000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %39 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x565", 1.381000e+03 : f64>, 1.381000e+03 : f64}
// SOURCE-NEXT:           // %39 = 1.381000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %40 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x58e", 1.422000e+03 : f64>, 1.422000e+03 : f64}
// SOURCE-NEXT:           // %40 = 1.422000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %41 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x54a", 1.354000e+03 : f64>, 1.354000e+03 : f64}
// SOURCE-NEXT:           // %41 = 1.354000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %42 = jsir.call_expression (%37, %38, %39, %40, %41)
// SOURCE-NEXT:           // %42 = "/core cjs "
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %43 = jsir.binary_expression (%36, %42) {"+"}
// SOURCE-NEXT:           // %43 = "__ initialize @babel/core cjs "
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %44 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %44 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %45 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x148", 3.280000e+02 : f64>, 3.280000e+02 : f64}
// SOURCE-NEXT:           // %45 = 3.280000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %46 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x134", 3.080000e+02 : f64>, 3.080000e+02 : f64}
// SOURCE-NEXT:           // %46 = 3.080000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %47 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11f", 2.870000e+02 : f64>, 2.870000e+02 : f64}
// SOURCE-NEXT:           // %47 = 2.870000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %48 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf9", 2.490000e+02 : f64>, 2.490000e+02 : f64}
// SOURCE-NEXT:           // %48 = 2.490000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %49 = jsir.call_expression (%44, %45, %46, %47, %48)
// SOURCE-NEXT:           // %49 = "proxy __"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %50 = jsir.binary_expression (%43, %49) {"+"}
// SOURCE-NEXT:           // %50 = "__ initialize @babel/core cjs proxy __"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %51 = jsir.identifier {"_0xa94f9c"}
// SOURCE-NEXT:           // %51 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %52 = jsir.call_expression (%22, %23, %50, %51)
// SOURCE-NEXT:           // %52 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %53 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %53 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %54 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %54 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %55 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13f", 3.190000e+02 : f64>, 3.190000e+02 : f64}
// SOURCE-NEXT:           // %55 = 3.190000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %56 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x170", 3.680000e+02 : f64>, 3.680000e+02 : f64}
// SOURCE-NEXT:           // %56 = 3.680000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %57 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14e", 3.340000e+02 : f64>, 3.340000e+02 : f64}
// SOURCE-NEXT:           // %57 = 3.340000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %58 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x128", 2.960000e+02 : f64>, 2.960000e+02 : f64}
// SOURCE-NEXT:           // %58 = 2.960000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %59 = jsir.call_expression (%54, %55, %56, %57, %58)
// SOURCE-NEXT:           // %59 = "version"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %60 = jsir.member_expression_ref (%53, %59)
// SOURCE-NEXT:           // %60 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %61 = jsir.identifier {"require"}
// SOURCE-NEXT:           // %61 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %62 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:           // %62 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %63 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x51b", 1.307000e+03 : f64>, 1.307000e+03 : f64}
// SOURCE-NEXT:           // %63 = 1.307000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %64 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x544", 1.348000e+03 : f64>, 1.348000e+03 : f64}
// SOURCE-NEXT:           // %64 = 1.348000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %65 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x537", 1.335000e+03 : f64>, 1.335000e+03 : f64}
// SOURCE-NEXT:           // %65 = 1.335000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %66 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x526", 1.318000e+03 : f64>, 1.318000e+03 : f64}
// SOURCE-NEXT:           // %66 = 1.318000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %67 = jsir.call_expression (%62, %63, %64, %65, %66)
// SOURCE-NEXT:           // %67 = "./package."
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %68 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %68 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %69 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x146", 3.260000e+02 : f64>, 3.260000e+02 : f64}
// SOURCE-NEXT:           // %69 = 3.260000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %70 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x111", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:           // %70 = 2.730000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %71 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x128", 2.960000e+02 : f64>, 2.960000e+02 : f64}
// SOURCE-NEXT:           // %71 = 2.960000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %72 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13f", 3.190000e+02 : f64>, 3.190000e+02 : f64}
// SOURCE-NEXT:           // %72 = 3.190000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %73 = jsir.call_expression (%68, %69, %70, %71, %72)
// SOURCE-NEXT:           // %73 = "json"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %74 = jsir.binary_expression (%67, %73) {"+"}
// SOURCE-NEXT:           // %74 = "./package.json"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %75 = jsir.call_expression (%61, %74)
// SOURCE-NEXT:           // %75 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %76 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %76 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %77 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13d", 3.170000e+02 : f64>, 3.170000e+02 : f64}
// SOURCE-NEXT:           // %77 = 3.170000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %78 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x177", 3.750000e+02 : f64>, 3.750000e+02 : f64}
// SOURCE-NEXT:           // %78 = 3.750000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %79 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14e", 3.340000e+02 : f64>, 3.340000e+02 : f64}
// SOURCE-NEXT:           // %79 = 3.340000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %80 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x137", 3.110000e+02 : f64>, 3.110000e+02 : f64}
// SOURCE-NEXT:           // %80 = 3.110000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %81 = jsir.call_expression (%76, %77, %78, %79, %80)
// SOURCE-NEXT:           // %81 = "version"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %82 = jsir.member_expression (%75, %81)
// SOURCE-NEXT:           // %82 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %83 = jsir.assignment_expression (%60, %82) {"="}
// SOURCE-NEXT:           // %83 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %84 = jsir.sequence_expression (%12, %52, %83)
// SOURCE-NEXT:           // %84 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.expression_statement (%84)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %495 = jsir.identifier_ref {"functionNames"}
// SOURCE-NEXT:               // %495 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %496 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %496 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %497 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf9", 2.490000e+02 : f64>, 2.490000e+02 : f64}
// SOURCE-NEXT:               // %497 = 2.490000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %498 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xeb", 2.350000e+02 : f64>, 2.350000e+02 : f64}
// SOURCE-NEXT:               // %498 = 2.350000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %499 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x111", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:               // %499 = 2.730000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %500 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x114", 2.760000e+02 : f64>, 2.760000e+02 : f64}
// SOURCE-NEXT:               // %500 = 2.760000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %501 = jsir.call_expression (%496, %497, %498, %499, %500)
// SOURCE-NEXT:               // %501 = "createConf"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %502 = jsir.string_literal {#jsir<string_literal_extra "'igItem'", "igItem">, "igItem"}
// SOURCE-NEXT:               // %502 = "igItem"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %503 = jsir.binary_expression (%501, %502) {"+"}
// SOURCE-NEXT:               // %503 = "createConfigItem"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %504 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %504 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %505 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x128", 2.960000e+02 : f64>, 2.960000e+02 : f64}
// SOURCE-NEXT:               // %505 = 2.960000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %506 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x13f", 3.190000e+02 : f64>, 3.190000e+02 : f64}
// SOURCE-NEXT:               // %506 = 3.190000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %507 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11c", 2.840000e+02 : f64>, 2.840000e+02 : f64}
// SOURCE-NEXT:               // %507 = 2.840000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %508 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11e", 2.860000e+02 : f64>, 2.860000e+02 : f64}
// SOURCE-NEXT:               // %508 = 2.860000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %509 = jsir.call_expression (%504, %505, %506, %507, %508)
// SOURCE-NEXT:               // %509 = "loadPartia"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %510 = jsir.string_literal {#jsir<string_literal_extra "'lConfig'", "lConfig">, "lConfig"}
// SOURCE-NEXT:               // %510 = "lConfig"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %511 = jsir.binary_expression (%509, %510) {"+"}
// SOURCE-NEXT:               // %511 = "loadPartialConfig"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %512 = jsir.string_literal {#jsir<string_literal_extra "'loadOption'", "loadOption">, "loadOption"}
// SOURCE-NEXT:               // %512 = "loadOption"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %513 = jsir.string_literal {#jsir<string_literal_extra "'s'", "s">, "s"}
// SOURCE-NEXT:               // %513 = "s"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %514 = jsir.binary_expression (%512, %513) {"+"}
// SOURCE-NEXT:               // %514 = "loadOptions"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %515 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %515 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %516 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:               // %516 = 2.980000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %517 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x131", 3.050000e+02 : f64>, 3.050000e+02 : f64}
// SOURCE-NEXT:               // %517 = 3.050000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %518 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x121", 2.890000e+02 : f64>, 2.890000e+02 : f64}
// SOURCE-NEXT:               // %518 = 2.890000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %519 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x146", 3.260000e+02 : f64>, 3.260000e+02 : f64}
// SOURCE-NEXT:               // %519 = 3.260000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %520 = jsir.call_expression (%515, %516, %517, %518, %519)
// SOURCE-NEXT:               // %520 = "transform"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %521 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:               // %521 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %522 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x572", 1.394000e+03 : f64>, 1.394000e+03 : f64}
// SOURCE-NEXT:               // %522 = 1.394000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %523 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x557", 1.367000e+03 : f64>, 1.367000e+03 : f64}
// SOURCE-NEXT:               // %523 = 1.367000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %524 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x530", 1.328000e+03 : f64>, 1.328000e+03 : f64}
// SOURCE-NEXT:               // %524 = 1.328000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %525 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x533", 1.331000e+03 : f64>, 1.331000e+03 : f64}
// SOURCE-NEXT:               // %525 = 1.331000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %526 = jsir.call_expression (%521, %522, %523, %524, %525)
// SOURCE-NEXT:               // %526 = "transformF"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %527 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %527 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %528 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x126", 2.940000e+02 : f64>, 2.940000e+02 : f64}
// SOURCE-NEXT:               // %528 = 2.940000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %529 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14b", 3.310000e+02 : f64>, 3.310000e+02 : f64}
// SOURCE-NEXT:               // %529 = 3.310000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %530 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12d", 3.010000e+02 : f64>, 3.010000e+02 : f64}
// SOURCE-NEXT:               // %530 = 3.010000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %531 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14f", 3.350000e+02 : f64>, 3.350000e+02 : f64}
// SOURCE-NEXT:               // %531 = 3.350000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %532 = jsir.call_expression (%527, %528, %529, %530, %531)
// SOURCE-NEXT:               // %532 = "ile"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %533 = jsir.binary_expression (%526, %532) {"+"}
// SOURCE-NEXT:               // %533 = "transformFile"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %534 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %534 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %535 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x131", 3.050000e+02 : f64>, 3.050000e+02 : f64}
// SOURCE-NEXT:               // %535 = 3.050000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %536 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x149", 3.290000e+02 : f64>, 3.290000e+02 : f64}
// SOURCE-NEXT:               // %536 = 3.290000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %537 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x138", 3.120000e+02 : f64>, 3.120000e+02 : f64}
// SOURCE-NEXT:               // %537 = 3.120000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %538 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x132", 3.060000e+02 : f64>, 3.060000e+02 : f64}
// SOURCE-NEXT:               // %538 = 3.060000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %539 = jsir.call_expression (%534, %535, %536, %537, %538)
// SOURCE-NEXT:               // %539 = "transformF"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %540 = jsir.string_literal {#jsir<string_literal_extra "'romAst'", "romAst">, "romAst"}
// SOURCE-NEXT:               // %540 = "romAst"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %541 = jsir.binary_expression (%539, %540) {"+"}
// SOURCE-NEXT:               // %541 = "transformFromAst"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %542 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %542 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %543 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf3", 2.430000e+02 : f64>, 2.430000e+02 : f64}
// SOURCE-NEXT:               // %543 = 2.430000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %544 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10e", 2.700000e+02 : f64>, 2.700000e+02 : f64}
// SOURCE-NEXT:               // %544 = 2.700000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %545 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x107", 2.630000e+02 : f64>, 2.630000e+02 : f64}
// SOURCE-NEXT:               // %545 = 2.630000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %546 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10a", 2.660000e+02 : f64>, 2.660000e+02 : f64}
// SOURCE-NEXT:               // %546 = 2.660000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %547 = jsir.call_expression (%542, %543, %544, %545, %546)
// SOURCE-NEXT:               // %547 = "parse"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %548 = jsir.array_expression (%503, %511, %514, %520, %533, %541, %547)
// SOURCE-NEXT:               // %548 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %549 = jsir.variable_declarator (%495, %548)
// SOURCE-NEXT:               // %549 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %550 = jsir.identifier_ref {"propertyNames"}
// SOURCE-NEXT:               // %550 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %551 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %551 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %552 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x120", 2.880000e+02 : f64>, 2.880000e+02 : f64}
// SOURCE-NEXT:               // %552 = 2.880000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %553 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12d", 3.010000e+02 : f64>, 3.010000e+02 : f64}
// SOURCE-NEXT:               // %553 = 3.010000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %554 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12a", 2.980000e+02 : f64>, 2.980000e+02 : f64}
// SOURCE-NEXT:               // %554 = 2.980000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %555 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x108", 2.640000e+02 : f64>, 2.640000e+02 : f64}
// SOURCE-NEXT:               // %555 = 2.640000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %556 = jsir.call_expression (%551, %552, %553, %554, %555)
// SOURCE-NEXT:               // %556 = "buildExter"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %557 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:               // %557 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %558 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x53e", 1.342000e+03 : f64>, 1.342000e+03 : f64}
// SOURCE-NEXT:               // %558 = 1.342000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %559 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x527", 1.319000e+03 : f64>, 1.319000e+03 : f64}
// SOURCE-NEXT:               // %559 = 1.319000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %560 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x50b", 1.291000e+03 : f64>, 1.291000e+03 : f64}
// SOURCE-NEXT:               // %560 = 1.291000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %561 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4fe", 1.278000e+03 : f64>, 1.278000e+03 : f64}
// SOURCE-NEXT:               // %561 = 1.278000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %562 = jsir.call_expression (%557, %558, %559, %560, %561)
// SOURCE-NEXT:               // %562 = "nalHelpers"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %563 = jsir.binary_expression (%556, %562) {"+"}
// SOURCE-NEXT:               // %563 = "buildExternalHelpers"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %564 = jsir.string_literal {#jsir<string_literal_extra "'types'", "types">, "types"}
// SOURCE-NEXT:               // %564 = "types"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %565 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:               // %565 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %566 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x570", 1.392000e+03 : f64>, 1.392000e+03 : f64}
// SOURCE-NEXT:               // %566 = 1.392000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %567 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x56a", 1.386000e+03 : f64>, 1.386000e+03 : f64}
// SOURCE-NEXT:               // %567 = 1.386000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %568 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x543", 1.347000e+03 : f64>, 1.347000e+03 : f64}
// SOURCE-NEXT:               // %568 = 1.347000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %569 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x564", 1.380000e+03 : f64>, 1.380000e+03 : f64}
// SOURCE-NEXT:               // %569 = 1.380000e+03 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %570 = jsir.call_expression (%565, %566, %567, %568, %569)
// SOURCE-NEXT:               // %570 = "tokTypes"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %571 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %571 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %572 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x151", 3.370000e+02 : f64>, 3.370000e+02 : f64}
// SOURCE-NEXT:               // %572 = 3.370000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %573 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x172", 3.700000e+02 : f64>, 3.700000e+02 : f64}
// SOURCE-NEXT:               // %573 = 3.700000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %574 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14d", 3.330000e+02 : f64>, 3.330000e+02 : f64}
// SOURCE-NEXT:               // %574 = 3.330000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %575 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x15f", 3.510000e+02 : f64>, 3.510000e+02 : f64}
// SOURCE-NEXT:               // %575 = 3.510000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %576 = jsir.call_expression (%571, %572, %573, %574, %575)
// SOURCE-NEXT:               // %576 = "traverse"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %577 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:               // %577 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %578 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x126", 2.940000e+02 : f64>, 2.940000e+02 : f64}
// SOURCE-NEXT:               // %578 = 2.940000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %579 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x159", 3.450000e+02 : f64>, 3.450000e+02 : f64}
// SOURCE-NEXT:               // %579 = 3.450000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %580 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x142", 3.220000e+02 : f64>, 3.220000e+02 : f64}
// SOURCE-NEXT:               // %580 = 3.220000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %581 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x136", 3.100000e+02 : f64>, 3.100000e+02 : f64}
// SOURCE-NEXT:               // %581 = 3.100000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %582 = jsir.call_expression (%577, %578, %579, %580, %581)
// SOURCE-NEXT:               // %582 = "template"
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %583 = jsir.array_expression (%563, %564, %570, %576, %582)
// SOURCE-NEXT:               // %583 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %584 = jsir.variable_declarator (%550, %583)
// SOURCE-NEXT:               // %584 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             jsir.exprs_region_end (%549, %584)
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %85 = jsir.identifier_ref {"name"}
// SOURCE-NEXT:           // %85 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %86 = jsir.identifier {"functionNames"}
// SOURCE-NEXT:           // %86 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %87 = jslir.for_of_statement_start (%85, %86) {false, #jsir<for_in_of_declaration   <L 284 C 5>, <L 284 C 15>, 12590, 12600, 49,   <L 284 C 11>, <L 284 C 15>, 12596, 12600, 49,  "name", 49, "const">}
// SOURCE-NEXT:           // %87 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.br
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb1:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %88 = jslir.for_in_of_statement_has_next (%87)
// SOURCE-NEXT:           // %88 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %89 = builtin.unrealized_conversion_cast (%88)
// SOURCE-NEXT:           // %89 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.cond_br (%89) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb2:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.for_in_of_statement_get_next (%87)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %90 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:           // %90 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%90) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%90) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %91 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %91 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %92 = jsir.identifier {"name"}
// SOURCE-NEXT:           // %92 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %93 = jsir.member_expression_ref (%91, %92)
// SOURCE-NEXT:           // %93 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %94 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %493 = jsir.identifier_ref {"_0x289d86"}
// SOURCE-NEXT:               // %493 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %494 = jsir.rest_element_ref (%493)
// SOURCE-NEXT:               // %494 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%494)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %457 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %457 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%457) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%457) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 286 C 15>, <L 286 C 24>, "_0x924763", 12680, 12689, 52, "_0x924763">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %489 = jsir.identifier_ref {"_0x1e890b"}
// SOURCE-NEXT:                   // %489 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %490 = jsir.identifier_ref {"_0x301483"}
// SOURCE-NEXT:                   // %490 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %491 = jsir.identifier_ref {"_0x2b7f7d"}
// SOURCE-NEXT:                   // %491 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %492 = jsir.identifier_ref {"_0xb5702a"}
// SOURCE-NEXT:                   // %492 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%489, %490, %491, %492)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %476 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %476 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%476) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%476) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %477 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                   // %477 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %478 = jsir.identifier {"_0x1e890b"}
// SOURCE-NEXT:                   // %478 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %479 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1cd", 4.610000e+02 : f64>, 4.610000e+02 : f64}
// SOURCE-NEXT:                   // %479 = 4.610000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %480 = jsir.binary_expression (%478, %479) {"-"}
// SOURCE-NEXT:                   // %480 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %481 = jsir.identifier {"_0x301483"}
// SOURCE-NEXT:                   // %481 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %482 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x6f", 1.110000e+02 : f64>, 1.110000e+02 : f64}
// SOURCE-NEXT:                   // %482 = 1.110000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %483 = jsir.binary_expression (%481, %482) {"-"}
// SOURCE-NEXT:                   // %483 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %484 = jsir.identifier {"_0xb5702a"}
// SOURCE-NEXT:                   // %484 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %485 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x250", 5.920000e+02 : f64>, 5.920000e+02 : f64}
// SOURCE-NEXT:                   // %485 = 5.920000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %486 = jsir.binary_expression (%484, %485) {"-"}
// SOURCE-NEXT:                   // %486 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %487 = jsir.identifier {"_0x2b7f7d"}
// SOURCE-NEXT:                   // %487 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %488 = jsir.call_expression (%477, %480, %483, %486, %487)
// SOURCE-NEXT:                   // %488 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%488)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%476) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %458 = jsir.identifier {"babelP"}
// SOURCE-NEXT:               // %458 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %459 = jsir.identifier {"_0x924763"}
// SOURCE-NEXT:               // %459 = #jsir_builtin<inline_expression_function  "_0x1e890b", 52,  "_0x301483", 52,  "_0x2b7f7d", 52,  "_0xb5702a", 52, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1e890b", 52>, 4.610000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x301483", 52>, 1.110000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xb5702a", 52>, 5.920000e+02 : f64, "-">, #jsir<symbol_id "_0x2b7f7d", 52>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %460 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37c", 8.920000e+02 : f64>, 8.920000e+02 : f64}
// SOURCE-NEXT:               // %460 = 8.920000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %461 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x372", 8.820000e+02 : f64>, 8.820000e+02 : f64}
// SOURCE-NEXT:               // %461 = 8.820000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %462 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x372", 8.820000e+02 : f64>, 8.820000e+02 : f64}
// SOURCE-NEXT:               // %462 = 8.820000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %463 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x383", 8.990000e+02 : f64>, 8.990000e+02 : f64}
// SOURCE-NEXT:               // %463 = 8.990000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %464 = jsir.call_expression (%459, %460, %461, %462, %463)
// SOURCE-NEXT:               // %464 = "then"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %465 = jsir.member_expression (%458, %464)
// SOURCE-NEXT:               // %465 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %466 = jsir.identifier_ref {"_0x48d3cf"}
// SOURCE-NEXT:               // %466 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %467 = jsir.arrow_function_expression (%466) {false, false, array<i32: 0, 1>} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %469 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %469 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%469) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%469) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %470 = jsir.identifier {"_0x48d3cf"}
// SOURCE-NEXT:                   // %470 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %471 = jsir.identifier {"name"}
// SOURCE-NEXT:                   // %471 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %472 = jsir.member_expression (%470, %471)
// SOURCE-NEXT:                   // %472 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %473 = jsir.identifier {"_0x289d86"}
// SOURCE-NEXT:                   // %473 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %474 = jsir.spread_element (%473)
// SOURCE-NEXT:                   // %474 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %475 = jsir.call_expression (%472, %474)
// SOURCE-NEXT:                   // %475 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.expression_statement (%475)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%469) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %467 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %468 = jsir.call_expression (%465, %467)
// SOURCE-NEXT:               // %468 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.expression_statement (%468)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%457) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // %94 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %95 = jsir.assignment_expression (%93, %94) {"="}
// SOURCE-NEXT:           // %95 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %96 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %96 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %97 = jsir.identifier {"name"}
// SOURCE-NEXT:           // %97 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %98 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:           // %98 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %99 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x523", 1.315000e+03 : f64>, 1.315000e+03 : f64}
// SOURCE-NEXT:           // %99 = 1.315000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %100 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x523", 1.315000e+03 : f64>, 1.315000e+03 : f64}
// SOURCE-NEXT:           // %100 = 1.315000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %101 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x525", 1.317000e+03 : f64>, 1.317000e+03 : f64}
// SOURCE-NEXT:           // %101 = 1.317000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %102 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x52b", 1.323000e+03 : f64>, 1.323000e+03 : f64}
// SOURCE-NEXT:           // %102 = 1.323000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %103 = jsir.call_expression (%98, %99, %100, %101, %102)
// SOURCE-NEXT:           // %103 = "Async"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %104 = jsir.binary_expression (%97, %103) {"+"}
// SOURCE-NEXT:           // %104 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %105 = jsir.member_expression_ref (%96, %104)
// SOURCE-NEXT:           // %105 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %106 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %455 = jsir.identifier_ref {"_0x1c8b95"}
// SOURCE-NEXT:               // %455 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %456 = jsir.rest_element_ref (%455)
// SOURCE-NEXT:               // %456 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%456)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %395 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %395 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%395) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%395) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 293 C 15>, <L 293 C 24>, "_0xbabec0", 13059, 13068, 55, "_0xbabec0">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %451 = jsir.identifier_ref {"_0x142239"}
// SOURCE-NEXT:                   // %451 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %452 = jsir.identifier_ref {"_0x1ea37a"}
// SOURCE-NEXT:                   // %452 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %453 = jsir.identifier_ref {"_0x397b4a"}
// SOURCE-NEXT:                   // %453 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %454 = jsir.identifier_ref {"_0x200d78"}
// SOURCE-NEXT:                   // %454 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%451, %452, %453, %454)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %438 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %438 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%438) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%438) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %439 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                   // %439 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %440 = jsir.identifier {"_0x142239"}
// SOURCE-NEXT:                   // %440 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %441 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c6", 4.540000e+02 : f64>, 4.540000e+02 : f64}
// SOURCE-NEXT:                   // %441 = 4.540000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %442 = jsir.binary_expression (%440, %441) {"-"}
// SOURCE-NEXT:                   // %442 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %443 = jsir.identifier {"_0x1ea37a"}
// SOURCE-NEXT:                   // %443 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %444 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10", 1.600000e+01 : f64>, 1.600000e+01 : f64}
// SOURCE-NEXT:                   // %444 = 1.600000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %445 = jsir.binary_expression (%443, %444) {"-"}
// SOURCE-NEXT:                   // %445 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %446 = jsir.identifier {"_0x200d78"}
// SOURCE-NEXT:                   // %446 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %447 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x19b", 4.110000e+02 : f64>, 4.110000e+02 : f64}
// SOURCE-NEXT:                   // %447 = 4.110000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %448 = jsir.binary_expression (%446, %447) {"-"}
// SOURCE-NEXT:                   // %448 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %449 = jsir.identifier {"_0x397b4a"}
// SOURCE-NEXT:                   // %449 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %450 = jsir.call_expression (%439, %442, %445, %448, %449)
// SOURCE-NEXT:                   // %450 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%450)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%438) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 296 C 15>, <L 296 C 24>, "_0x38639b", 13233, 13242, 56, "_0x38639b">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %434 = jsir.identifier_ref {"_0x370158"}
// SOURCE-NEXT:                   // %434 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %435 = jsir.identifier_ref {"_0x4cb1b6"}
// SOURCE-NEXT:                   // %435 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %436 = jsir.identifier_ref {"_0x45f135"}
// SOURCE-NEXT:                   // %436 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %437 = jsir.identifier_ref {"_0x3fbc8a"}
// SOURCE-NEXT:                   // %437 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%434, %435, %436, %437)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %420 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %420 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%420) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%420) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %421 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:                   // %421 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %422 = jsir.identifier {"_0x370158"}
// SOURCE-NEXT:                   // %422 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %423 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x39", 5.700000e+01 : f64>, 5.700000e+01 : f64}
// SOURCE-NEXT:                   // %423 = 5.700000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %424 = jsir.binary_expression (%422, %423) {"-"}
// SOURCE-NEXT:                   // %424 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %425 = jsir.identifier {"_0x4cb1b6"}
// SOURCE-NEXT:                   // %425 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %426 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3de", 9.900000e+02 : f64>, 9.900000e+02 : f64}
// SOURCE-NEXT:                   // %426 = 9.900000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %427 = jsir.unary_expression (%426) {"-", true}
// SOURCE-NEXT:                   // %427 = -9.900000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %428 = jsir.binary_expression (%425, %427) {"-"}
// SOURCE-NEXT:                   // %428 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %429 = jsir.identifier {"_0x45f135"}
// SOURCE-NEXT:                   // %429 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %430 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1c1", 4.490000e+02 : f64>, 4.490000e+02 : f64}
// SOURCE-NEXT:                   // %430 = 4.490000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %431 = jsir.binary_expression (%429, %430) {"-"}
// SOURCE-NEXT:                   // %431 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %432 = jsir.identifier {"_0x3fbc8a"}
// SOURCE-NEXT:                   // %432 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %433 = jsir.call_expression (%421, %424, %428, %431, %432)
// SOURCE-NEXT:                   // %433 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%433)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%420) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %396 = jsir.identifier {"babelP"}
// SOURCE-NEXT:               // %396 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %397 = jsir.identifier {"_0x38639b"}
// SOURCE-NEXT:               // %397 = #jsir_builtin<inline_expression_function  "_0x370158", 56,  "_0x4cb1b6", 56,  "_0x45f135", 56,  "_0x3fbc8a", 56, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x40ee28", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x370158", 56>, 5.700000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4cb1b6", 56>, #jsir_builtin<inline_expression_unary_expression 9.900000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x45f135", 56>, 4.490000e+02 : f64, "-">, #jsir<symbol_id "_0x3fbc8a", 56>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %398 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x180", 3.840000e+02 : f64>, 3.840000e+02 : f64}
// SOURCE-NEXT:               // %398 = 3.840000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %399 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x174", 3.720000e+02 : f64>, 3.720000e+02 : f64}
// SOURCE-NEXT:               // %399 = 3.720000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %400 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x152", 3.380000e+02 : f64>, 3.380000e+02 : f64}
// SOURCE-NEXT:               // %400 = 3.380000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %401 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x184", 3.880000e+02 : f64>, 3.880000e+02 : f64}
// SOURCE-NEXT:               // %401 = 3.880000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %402 = jsir.call_expression (%397, %398, %399, %400, %401)
// SOURCE-NEXT:               // %402 = "then"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %403 = jsir.member_expression (%396, %402)
// SOURCE-NEXT:               // %403 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %404 = jsir.identifier_ref {"_0x30c230"}
// SOURCE-NEXT:               // %404 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %405 = jsir.arrow_function_expression (%404) {false, false, array<i32: 0, 1>} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %407 = jsir.identifier {"_0x30c230"}
// SOURCE-NEXT:                   // %407 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %408 = jsir.identifier {"name"}
// SOURCE-NEXT:                   // %408 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %409 = jsir.identifier {"_0x38639b"}
// SOURCE-NEXT:                   // %409 = #jsir_builtin<inline_expression_function  "_0x370158", 56,  "_0x4cb1b6", 56,  "_0x45f135", 56,  "_0x3fbc8a", 56, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x40ee28", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x370158", 56>, 5.700000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4cb1b6", 56>, #jsir_builtin<inline_expression_unary_expression 9.900000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x45f135", 56>, 4.490000e+02 : f64, "-">, #jsir<symbol_id "_0x3fbc8a", 56>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %410 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x140", 3.200000e+02 : f64>, 3.200000e+02 : f64}
// SOURCE-NEXT:                   // %410 = 3.200000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %411 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x145", 3.250000e+02 : f64>, 3.250000e+02 : f64}
// SOURCE-NEXT:                   // %411 = 3.250000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %412 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x16e", 3.660000e+02 : f64>, 3.660000e+02 : f64}
// SOURCE-NEXT:                   // %412 = 3.660000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %413 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14e", 3.340000e+02 : f64>, 3.340000e+02 : f64}
// SOURCE-NEXT:                   // %413 = 3.340000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %414 = jsir.call_expression (%409, %410, %411, %412, %413)
// SOURCE-NEXT:                   // %414 = "Async"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %415 = jsir.binary_expression (%408, %414) {"+"}
// SOURCE-NEXT:                   // %415 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %416 = jsir.member_expression (%407, %415)
// SOURCE-NEXT:                   // %416 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %417 = jsir.identifier {"_0x1c8b95"}
// SOURCE-NEXT:                   // %417 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %418 = jsir.spread_element (%417)
// SOURCE-NEXT:                   // %418 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %419 = jsir.call_expression (%416, %418)
// SOURCE-NEXT:                   // %419 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.expr_region_end (%419)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %405 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %406 = jsir.call_expression (%403, %405)
// SOURCE-NEXT:               // %406 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%406)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%395) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // %106 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %107 = jsir.assignment_expression (%105, %106) {"="}
// SOURCE-NEXT:           // %107 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %108 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %108 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %109 = jsir.identifier {"name"}
// SOURCE-NEXT:           // %109 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %110 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:           // %110 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %111 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x105", 2.610000e+02 : f64>, 2.610000e+02 : f64}
// SOURCE-NEXT:           // %111 = 2.610000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %112 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x12f", 3.030000e+02 : f64>, 3.030000e+02 : f64}
// SOURCE-NEXT:           // %112 = 3.030000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %113 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x112", 2.740000e+02 : f64>, 2.740000e+02 : f64}
// SOURCE-NEXT:           // %113 = 2.740000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %114 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf8", 2.480000e+02 : f64>, 2.480000e+02 : f64}
// SOURCE-NEXT:           // %114 = 2.480000e+02 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %115 = jsir.call_expression (%110, %111, %112, %113, %114)
// SOURCE-NEXT:           // %115 = "Sync"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %116 = jsir.binary_expression (%109, %115) {"+"}
// SOURCE-NEXT:           // %116 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %117 = jsir.member_expression_ref (%108, %116)
// SOURCE-NEXT:           // %117 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %118 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %393 = jsir.identifier_ref {"_0x52b6ef"}
// SOURCE-NEXT:               // %393 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %394 = jsir.rest_element_ref (%393)
// SOURCE-NEXT:               // %394 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%394)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %306 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %306 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%306) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%306) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %390 = jsir.identifier_ref {"_0x2aeb5e"}
// SOURCE-NEXT:                   // %390 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %391 = jsir.object_expression ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %391 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %392 = jsir.variable_declarator (%390, %391)
// SOURCE-NEXT:                   // %392 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%392)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %307 = jsir.identifier {"_0x2aeb5e"}
// SOURCE-NEXT:               // %307 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %308 = jsir.identifier {"_0x42f460"}
// SOURCE-NEXT:               // %308 = #jsir_builtin<inline_expression_function  "_0x2ee8cc", 60,  "_0x118306", 60,  "_0x8af728", 60,  "_0x130ab6", 60, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2ee8cc", 60>, 2.000000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x118306", 60>, 1.710000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8af728", 60>, #jsir_builtin<inline_expression_unary_expression 3.100000e+01 : f64, "-">, "-">, #jsir<symbol_id "_0x118306", 60>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %309 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf2", 2.420000e+02 : f64>, 2.420000e+02 : f64}
// SOURCE-NEXT:               // %309 = 2.420000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %310 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11a", 2.820000e+02 : f64>, 2.820000e+02 : f64}
// SOURCE-NEXT:               // %310 = 2.820000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %311 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf4", 2.440000e+02 : f64>, 2.440000e+02 : f64}
// SOURCE-NEXT:               // %311 = 2.440000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %312 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf7", 2.470000e+02 : f64>, 2.470000e+02 : f64}
// SOURCE-NEXT:               // %312 = 2.470000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %313 = jsir.call_expression (%308, %309, %310, %311, %312)
// SOURCE-NEXT:               // %313 = "kHTii"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %314 = jsir.member_expression_ref (%307, %313)
// SOURCE-NEXT:               // %314 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %315 = jsir.string_literal {#jsir<string_literal_extra "'callable'", "callable">, "callable"}
// SOURCE-NEXT:               // %315 = "callable"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %316 = jsir.assignment_expression (%314, %315) {"="}
// SOURCE-NEXT:               // %316 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.expression_statement (%316)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %387 = jsir.identifier_ref {"_0x22fcea"}
// SOURCE-NEXT:                   // %387 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %388 = jsir.identifier {"_0x2aeb5e"}
// SOURCE-NEXT:                   // %388 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %389 = jsir.variable_declarator (%387, %388)
// SOURCE-NEXT:                   // %389 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%389)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 304 C 15>, <L 304 C 24>, "_0x8a4661", 13767, 13776, 59, "_0x8a4661">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %383 = jsir.identifier_ref {"_0x48d0d1"}
// SOURCE-NEXT:                   // %383 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %384 = jsir.identifier_ref {"_0x3900b9"}
// SOURCE-NEXT:                   // %384 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %385 = jsir.identifier_ref {"_0x4d1f27"}
// SOURCE-NEXT:                   // %385 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %386 = jsir.identifier_ref {"_0x1e73b6"}
// SOURCE-NEXT:                   // %386 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%383, %384, %385, %386)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %370 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %370 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%370) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%370) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %371 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                   // %371 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %372 = jsir.identifier {"_0x48d0d1"}
// SOURCE-NEXT:                   // %372 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %373 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3a", 5.800000e+01 : f64>, 5.800000e+01 : f64}
// SOURCE-NEXT:                   // %373 = 5.800000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %374 = jsir.binary_expression (%372, %373) {"-"}
// SOURCE-NEXT:                   // %374 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %375 = jsir.identifier {"_0x3900b9"}
// SOURCE-NEXT:                   // %375 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %376 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1b7", 4.390000e+02 : f64>, 4.390000e+02 : f64}
// SOURCE-NEXT:                   // %376 = 4.390000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %377 = jsir.binary_expression (%375, %376) {"-"}
// SOURCE-NEXT:                   // %377 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %378 = jsir.identifier {"_0x4d1f27"}
// SOURCE-NEXT:                   // %378 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %379 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x272", 6.260000e+02 : f64>, 6.260000e+02 : f64}
// SOURCE-NEXT:                   // %379 = 6.260000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %380 = jsir.binary_expression (%378, %379) {"-"}
// SOURCE-NEXT:                   // %380 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %381 = jsir.identifier {"_0x3900b9"}
// SOURCE-NEXT:                   // %381 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %382 = jsir.call_expression (%371, %374, %377, %380, %381)
// SOURCE-NEXT:                   // %382 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%382)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%370) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %317 = jsir.identifier {"babel"}
// SOURCE-NEXT:               // %317 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %318 = jsir.unary_expression (%317) {"!", true}
// SOURCE-NEXT:               // %318 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %319 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:               // %319 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %320 = builtin.unrealized_conversion_cast (%318)
// SOURCE-NEXT:               // %320 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             cf.cond_br (%320) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:           ^bb1:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%319) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %321 = jsir.identifier {"notLoadedError"}
// SOURCE-NEXT:               // %321 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %322 = jsir.identifier {"name"}
// SOURCE-NEXT:               // %322 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %323 = jsir.identifier {"_0x42f460"}
// SOURCE-NEXT:               // %323 = #jsir_builtin<inline_expression_function  "_0x2ee8cc", 60,  "_0x118306", 60,  "_0x8af728", 60,  "_0x130ab6", 60, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2ee8cc", 60>, 2.000000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x118306", 60>, 1.710000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8af728", 60>, #jsir_builtin<inline_expression_unary_expression 3.100000e+01 : f64, "-">, "-">, #jsir<symbol_id "_0x118306", 60>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %324 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xd0", 2.080000e+02 : f64>, 2.080000e+02 : f64}
// SOURCE-NEXT:               // %324 = 2.080000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %325 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xd3", 2.110000e+02 : f64>, 2.110000e+02 : f64}
// SOURCE-NEXT:               // %325 = 2.110000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %326 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf3", 2.430000e+02 : f64>, 2.430000e+02 : f64}
// SOURCE-NEXT:               // %326 = 2.430000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %327 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x111", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:               // %327 = 2.730000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %328 = jsir.call_expression (%323, %324, %325, %326, %327)
// SOURCE-NEXT:               // %328 = "Sync"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %329 = jsir.binary_expression (%322, %328) {"+"}
// SOURCE-NEXT:               // %329 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %330 = jsir.identifier {"_0x22fcea"}
// SOURCE-NEXT:               // %330 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %331 = jsir.identifier {"_0x42f460"}
// SOURCE-NEXT:               // %331 = #jsir_builtin<inline_expression_function  "_0x2ee8cc", 60,  "_0x118306", 60,  "_0x8af728", 60,  "_0x130ab6", 60, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2ee8cc", 60>, 2.000000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x118306", 60>, 1.710000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8af728", 60>, #jsir_builtin<inline_expression_unary_expression 3.100000e+01 : f64, "-">, "-">, #jsir<symbol_id "_0x118306", 60>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %332 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf7", 2.470000e+02 : f64>, 2.470000e+02 : f64}
// SOURCE-NEXT:               // %332 = 2.470000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %333 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xfd", 2.530000e+02 : f64>, 2.530000e+02 : f64}
// SOURCE-NEXT:               // %333 = 2.530000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %334 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xf4", 2.440000e+02 : f64>, 2.440000e+02 : f64}
// SOURCE-NEXT:               // %334 = 2.440000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %335 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xde", 2.220000e+02 : f64>, 2.220000e+02 : f64}
// SOURCE-NEXT:               // %335 = 2.220000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %336 = jsir.call_expression (%331, %332, %333, %334, %335)
// SOURCE-NEXT:               // %336 = "kHTii"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %337 = jsir.member_expression (%330, %336)
// SOURCE-NEXT:               // %337 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %338 = jsir.call_expression (%321, %329, %337)
// SOURCE-NEXT:               // %338 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.throw_statement (%338)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             cf.br
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:           ^bb2:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%319) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 309 C 15>, <L 309 C 24>, "_0x42f460", 14080, 14089, 60, "_0x42f460">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %366 = jsir.identifier_ref {"_0x2ee8cc"}
// SOURCE-NEXT:                   // %366 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %367 = jsir.identifier_ref {"_0x118306"}
// SOURCE-NEXT:                   // %367 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %368 = jsir.identifier_ref {"_0x8af728"}
// SOURCE-NEXT:                   // %368 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %369 = jsir.identifier_ref {"_0x130ab6"}
// SOURCE-NEXT:                   // %369 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%366, %367, %368, %369)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %352 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %352 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%352) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%352) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %353 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                   // %353 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %354 = jsir.identifier {"_0x2ee8cc"}
// SOURCE-NEXT:                   // %354 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %355 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14", 2.000000e+01 : f64>, 2.000000e+01 : f64}
// SOURCE-NEXT:                   // %355 = 2.000000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %356 = jsir.binary_expression (%354, %355) {"-"}
// SOURCE-NEXT:                   // %356 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %357 = jsir.identifier {"_0x118306"}
// SOURCE-NEXT:                   // %357 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %358 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xab", 1.710000e+02 : f64>, 1.710000e+02 : f64}
// SOURCE-NEXT:                   // %358 = 1.710000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %359 = jsir.binary_expression (%357, %358) {"-"}
// SOURCE-NEXT:                   // %359 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %360 = jsir.identifier {"_0x8af728"}
// SOURCE-NEXT:                   // %360 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %361 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1f", 3.100000e+01 : f64>, 3.100000e+01 : f64}
// SOURCE-NEXT:                   // %361 = 3.100000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %362 = jsir.unary_expression (%361) {"-", true}
// SOURCE-NEXT:                   // %362 = -3.100000e+01 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %363 = jsir.binary_expression (%360, %362) {"-"}
// SOURCE-NEXT:                   // %363 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %364 = jsir.identifier {"_0x118306"}
// SOURCE-NEXT:                   // %364 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %365 = jsir.call_expression (%353, %356, %359, %363, %364)
// SOURCE-NEXT:                   // %365 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%365)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%352) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %339 = jsir.identifier {"babel"}
// SOURCE-NEXT:               // %339 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %340 = jsir.identifier {"name"}
// SOURCE-NEXT:               // %340 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %341 = jsir.identifier {"_0x8a4661"}
// SOURCE-NEXT:               // %341 = #jsir_builtin<inline_expression_function  "_0x48d0d1", 59,  "_0x3900b9", 59,  "_0x4d1f27", 59,  "_0x1e73b6", 59, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x48d0d1", 59>, 5.800000e+01 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3900b9", 59>, 4.390000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d1f27", 59>, 6.260000e+02 : f64, "-">, #jsir<symbol_id "_0x3900b9", 59>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %342 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x35c", 8.600000e+02 : f64>, 8.600000e+02 : f64}
// SOURCE-NEXT:               // %342 = 8.600000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %343 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x394", 9.160000e+02 : f64>, 9.160000e+02 : f64}
// SOURCE-NEXT:               // %343 = 9.160000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %344 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x384", 9.000000e+02 : f64>, 9.000000e+02 : f64}
// SOURCE-NEXT:               // %344 = 9.000000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %345 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x37e", 8.940000e+02 : f64>, 8.940000e+02 : f64}
// SOURCE-NEXT:               // %345 = 8.940000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %346 = jsir.call_expression (%341, %342, %343, %344, %345)
// SOURCE-NEXT:               // %346 = "Sync"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %347 = jsir.binary_expression (%340, %346) {"+"}
// SOURCE-NEXT:               // %347 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %348 = jsir.member_expression (%339, %347)
// SOURCE-NEXT:               // %348 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %349 = jsir.identifier {"_0x52b6ef"}
// SOURCE-NEXT:               // %349 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %350 = jsir.spread_element (%349)
// SOURCE-NEXT:               // %350 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %351 = jsir.call_expression (%348, %350)
// SOURCE-NEXT:               // %351 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%351)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%306) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // %118 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %119 = jsir.assignment_expression (%117, %118) {"="}
// SOURCE-NEXT:           // %119 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %120 = jsir.sequence_expression (%95, %107, %119)
// SOURCE-NEXT:           // %120 = <uninitialized>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.expression_statement (%120)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%90) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.br
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb3:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.for_in_of_statement_end (%87)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %121 = jsir.identifier_ref {"name"}
// SOURCE-NEXT:           // %121 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %122 = jsir.identifier {"propertyNames"}
// SOURCE-NEXT:           // %122 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %123 = jslir.for_of_statement_start (%121, %122) {false, #jsir<for_in_of_declaration   <L 315 C 5>, <L 315 C 15>, 14330, 14340, 61,   <L 315 C 11>, <L 315 C 15>, 14336, 14340, 61,  "name", 61, "const">}
// SOURCE-NEXT:           // %123 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.br
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb4:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %124 = jslir.for_in_of_statement_has_next (%123)
// SOURCE-NEXT:           // %124 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %125 = builtin.unrealized_conversion_cast (%124)
// SOURCE-NEXT:           // %125 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.cond_br (%125) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb5:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.for_in_of_statement_get_next (%123)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %126 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:           // %126 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%126) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%126) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %127 = jsir.identifier {"Object"}
// SOURCE-NEXT:           // %127 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %128 = jsir.string_literal {#jsir<string_literal_extra "'defineProp'", "defineProp">, "defineProp"}
// SOURCE-NEXT:           // %128 = "defineProp"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %129 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:           // %129 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %130 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x568", 1.384000e+03 : f64>, 1.384000e+03 : f64}
// SOURCE-NEXT:           // %130 = 1.384000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %131 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x568", 1.384000e+03 : f64>, 1.384000e+03 : f64}
// SOURCE-NEXT:           // %131 = 1.384000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %132 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x555", 1.365000e+03 : f64>, 1.365000e+03 : f64}
// SOURCE-NEXT:           // %132 = 1.365000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %133 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x543", 1.347000e+03 : f64>, 1.347000e+03 : f64}
// SOURCE-NEXT:           // %133 = 1.347000e+03 : f64
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %134 = jsir.call_expression (%129, %130, %131, %132, %133)
// SOURCE-NEXT:           // %134 = "erty"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %135 = jsir.binary_expression (%128, %134) {"+"}
// SOURCE-NEXT:           // %135 = "defineProperty"
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %136 = jsir.member_expression (%127, %135)
// SOURCE-NEXT:           // %136 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %137 = jsir.identifier {"exports"}
// SOURCE-NEXT:           // %137 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %138 = jsir.identifier {"name"}
// SOURCE-NEXT:           // %138 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %139 = jsir.object_expression ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             %246 = jsir.object_method {false, false, "method", #jsir<string_literal   <L 317 C 6>, <L 317 C 11>, 14447, 14452, 62, "get",  "'get'", "get">, array<i32: 0, 0>} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %247 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %247 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%247) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%247) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.function_declaration {false, false, #jsir<identifier   <L 318 C 19>, <L 318 C 28>, "_0x5603f7", 14476, 14485, 64, "_0x5603f7">} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %302 = jsir.identifier_ref {"_0x551811"}
// SOURCE-NEXT:                       // %302 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %303 = jsir.identifier_ref {"_0x4f1bac"}
// SOURCE-NEXT:                       // %303 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %304 = jsir.identifier_ref {"_0x1f715e"}
// SOURCE-NEXT:                       // %304 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %305 = jsir.identifier_ref {"_0x3ea73e"}
// SOURCE-NEXT:                       // %305 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%302, %303, %304, %305)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %288 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %288 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%288) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%288) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %289 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                       // %289 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %290 = jsir.identifier {"_0x551811"}
// SOURCE-NEXT:                       // %290 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %291 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1db", 4.750000e+02 : f64>, 4.750000e+02 : f64}
// SOURCE-NEXT:                       // %291 = 4.750000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %292 = jsir.binary_expression (%290, %291) {"-"}
// SOURCE-NEXT:                       // %292 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %293 = jsir.identifier {"_0x4f1bac"}
// SOURCE-NEXT:                       // %293 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %294 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x67", 1.030000e+02 : f64>, 1.030000e+02 : f64}
// SOURCE-NEXT:                       // %294 = 1.030000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %295 = jsir.binary_expression (%293, %294) {"-"}
// SOURCE-NEXT:                       // %295 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %296 = jsir.identifier {"_0x3ea73e"}
// SOURCE-NEXT:                       // %296 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %297 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x169", 3.610000e+02 : f64>, 3.610000e+02 : f64}
// SOURCE-NEXT:                       // %297 = 3.610000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %298 = jsir.unary_expression (%297) {"-", true}
// SOURCE-NEXT:                       // %298 = -3.610000e+02 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %299 = jsir.binary_expression (%296, %298) {"-"}
// SOURCE-NEXT:                       // %299 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %300 = jsir.identifier {"_0x1f715e"}
// SOURCE-NEXT:                       // %300 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %301 = jsir.call_expression (%289, %292, %295, %299, %300)
// SOURCE-NEXT:                       // %301 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%301)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%288) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.variable_declaration {"const"} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %264 = jsir.identifier_ref {"_0x1bda43"}
// SOURCE-NEXT:                       // %264 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %265 = jsir.object_expression ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %267 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %285 = jsir.identifier_ref {"_0x50e379"}
// SOURCE-NEXT:                               // %285 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %286 = jsir.identifier_ref {"_0x21cd99"}
// SOURCE-NEXT:                               // %286 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %287 = jsir.identifier_ref {"_0x4b2a2e"}
// SOURCE-NEXT:                               // %287 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%285, %286, %287)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %280 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %280 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%280) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%280) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %281 = jsir.identifier {"_0x50e379"}
// SOURCE-NEXT:                               // %281 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %282 = jsir.identifier {"_0x21cd99"}
// SOURCE-NEXT:                               // %282 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %283 = jsir.identifier {"_0x4b2a2e"}
// SOURCE-NEXT:                               // %283 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %284 = jsir.call_expression (%281, %282, %283)
// SOURCE-NEXT:                               // %284 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%284)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%280) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %267 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %268 = jsir.object_property (%267) {#jsir<string_literal   <L 322 C 14>, <L 322 C 21>, 14688, 14695, 63, "qrFVU",  "'qrFVU'", "qrFVU">, false}
// SOURCE-NEXT:                           // %268 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %269 = jsir.identifier {"_0x5603f7"}
// SOURCE-NEXT:                           // %269 = #jsir_builtin<inline_expression_function  "_0x551811", 64,  "_0x4f1bac", 64,  "_0x1f715e", 64,  "_0x3ea73e", 64, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x551811", 64>, 4.750000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4f1bac", 64>, 1.030000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3ea73e", 64>, #jsir_builtin<inline_expression_unary_expression 3.610000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x1f715e", 64>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %270 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x3b", 5.900000e+01 : f64>, 5.900000e+01 : f64}
// SOURCE-NEXT:                           // %270 = 5.900000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %271 = jsir.unary_expression (%270) {"-", true}
// SOURCE-NEXT:                           // %271 = -5.900000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %272 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x77", 1.190000e+02 : f64>, 1.190000e+02 : f64}
// SOURCE-NEXT:                           // %272 = 1.190000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %273 = jsir.unary_expression (%272) {"-", true}
// SOURCE-NEXT:                           // %273 = -1.190000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %274 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x66", 1.020000e+02 : f64>, 1.020000e+02 : f64}
// SOURCE-NEXT:                           // %274 = 1.020000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %275 = jsir.unary_expression (%274) {"-", true}
// SOURCE-NEXT:                           // %275 = -1.020000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %276 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x63", 9.900000e+01 : f64>, 9.900000e+01 : f64}
// SOURCE-NEXT:                           // %276 = 9.900000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %277 = jsir.unary_expression (%276) {"-", true}
// SOURCE-NEXT:                           // %277 = -9.900000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %278 = jsir.call_expression (%269, %271, %273, %275, %277)
// SOURCE-NEXT:                           // %278 = "accessible"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %279 = jsir.object_property (%278) {#jsir<string_literal   <L 325 C 14>, <L 325 C 21>, 14831, 14838, 63, "vfvSA",  "'vfvSA'", "vfvSA">, false}
// SOURCE-NEXT:                           // %279 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%268, %279)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %265 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %266 = jsir.variable_declarator (%264, %265)
// SOURCE-NEXT:                       // %266 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%266)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %248 = jsir.identifier {"babel"}
// SOURCE-NEXT:                   // %248 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %249 = jsir.unary_expression (%248) {"!", true}
// SOURCE-NEXT:                   // %249 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %250 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                   // %250 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %251 = builtin.unrealized_conversion_cast (%249)
// SOURCE-NEXT:                   // %251 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.cond_br (%251) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb1:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%250) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %252 = jsir.identifier {"_0x1bda43"}
// SOURCE-NEXT:                   // %252 = #jsir_builtin<inline_expression_object  "qrFVU", #jsir_builtin<inline_expression_function  "_0x50e379", 65,  "_0x21cd99", 65,  "_0x4b2a2e", 65, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x50e379", 65>, #jsir<symbol_id "_0x21cd99", 65>, #jsir<symbol_id "_0x4b2a2e", 65>>>,  "vfvSA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5603f7", 63>, #jsir_builtin<inline_expression_unary_expression 5.900000e+01 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 1.190000e+02 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 1.020000e+02 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 9.900000e+01 : f64, "-">>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %253 = jsir.string_literal {#jsir<string_literal_extra "'qrFVU'", "qrFVU">, "qrFVU"}
// SOURCE-NEXT:                   // %253 = "qrFVU"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %254 = jsir.member_expression (%252, %253)
// SOURCE-NEXT:                   // %254 = #jsir_builtin<inline_expression_function  "_0x50e379", 65,  "_0x21cd99", 65,  "_0x4b2a2e", 65, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x50e379", 65>, #jsir<symbol_id "_0x21cd99", 65>, #jsir<symbol_id "_0x4b2a2e", 65>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %255 = jsir.identifier {"notLoadedError"}
// SOURCE-NEXT:                   // %255 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %256 = jsir.identifier {"name"}
// SOURCE-NEXT:                   // %256 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %257 = jsir.identifier {"_0x1bda43"}
// SOURCE-NEXT:                   // %257 = #jsir_builtin<inline_expression_object  "qrFVU", #jsir_builtin<inline_expression_function  "_0x50e379", 65,  "_0x21cd99", 65,  "_0x4b2a2e", 65, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x50e379", 65>, #jsir<symbol_id "_0x21cd99", 65>, #jsir<symbol_id "_0x4b2a2e", 65>>>,  "vfvSA", #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x5603f7", 63>, #jsir_builtin<inline_expression_unary_expression 5.900000e+01 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 1.190000e+02 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 1.020000e+02 : f64, "-">, #jsir_builtin<inline_expression_unary_expression 9.900000e+01 : f64, "-">>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %258 = jsir.string_literal {#jsir<string_literal_extra "'vfvSA'", "vfvSA">, "vfvSA"}
// SOURCE-NEXT:                   // %258 = "vfvSA"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %259 = jsir.member_expression (%257, %258)
// SOURCE-NEXT:                   // %259 = "accessible"
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %260 = jsir.call_expression (%254, %255, %256, %259)
// SOURCE-NEXT:                   // %260 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.throw_statement (%260)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 cf.br
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:               ^bb2:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%250) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %261 = jsir.identifier {"babel"}
// SOURCE-NEXT:                   // %261 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %262 = jsir.identifier {"name"}
// SOURCE-NEXT:                   // %262 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %263 = jsir.member_expression (%261, %262)
// SOURCE-NEXT:                   // %263 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%263)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%247) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // %246 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:             jsir.exprs_region_end (%246)
// SOURCE-NEXT:               // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // %139 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         %140 = jsir.call_expression (%136, %137, %138, %139)
// SOURCE-NEXT:           // %140 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.expression_statement (%140)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.control_flow_marker (%126) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         cf.br
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:       ^bb6:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jslir.for_in_of_statement_end (%123)
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 333 C 9>, <L 333 C 23>, "notLoadedError", 15050, 15064, 66, "notLoadedError">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %244 = jsir.identifier_ref {"_0x4cf207"}
// SOURCE-NEXT:               // %244 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %245 = jsir.identifier_ref {"_0x30a2f8"}
// SOURCE-NEXT:               // %245 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%244, %245)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %141 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %141 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%141) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%141) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 334 C 11>, <L 334 C 20>, "_0x1ef47c", 15100, 15109, 67, "_0x1ef47c">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %240 = jsir.identifier_ref {"_0xb04e5e"}
// SOURCE-NEXT:                   // %240 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %241 = jsir.identifier_ref {"_0x3d4018"}
// SOURCE-NEXT:                   // %241 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %242 = jsir.identifier_ref {"_0x2a23a3"}
// SOURCE-NEXT:                   // %242 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %243 = jsir.identifier_ref {"_0x18496d"}
// SOURCE-NEXT:                   // %243 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%240, %241, %242, %243)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %226 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %226 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%226) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%226) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %227 = jsir.identifier {"_0x40ee28"}
// SOURCE-NEXT:                   // %227 = #jsir_builtin<inline_expression_function  "_0x186aad", 43,  "_0x1a1677", 43,  "_0x5e238c", 43,  "_0x297818", 43, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1a1677", 43>, 9.330000e+02 : f64, "-">, #jsir<symbol_id "_0x297818", 43>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %228 = jsir.identifier {"_0xb04e5e"}
// SOURCE-NEXT:                   // %228 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %229 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1ea", 4.900000e+02 : f64>, 4.900000e+02 : f64}
// SOURCE-NEXT:                   // %229 = 4.900000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %230 = jsir.binary_expression (%228, %229) {"-"}
// SOURCE-NEXT:                   // %230 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %231 = jsir.identifier {"_0x3d4018"}
// SOURCE-NEXT:                   // %231 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %232 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x272", 6.260000e+02 : f64>, 6.260000e+02 : f64}
// SOURCE-NEXT:                   // %232 = 6.260000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %233 = jsir.unary_expression (%232) {"-", true}
// SOURCE-NEXT:                   // %233 = -6.260000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %234 = jsir.binary_expression (%231, %233) {"-"}
// SOURCE-NEXT:                   // %234 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %235 = jsir.identifier {"_0x2a23a3"}
// SOURCE-NEXT:                   // %235 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %236 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2", 2.000000e+00 : f64>, 2.000000e+00 : f64}
// SOURCE-NEXT:                   // %236 = 2.000000e+00 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %237 = jsir.binary_expression (%235, %236) {"-"}
// SOURCE-NEXT:                   // %237 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %238 = jsir.identifier {"_0x18496d"}
// SOURCE-NEXT:                   // %238 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %239 = jsir.call_expression (%227, %230, %234, %237, %238)
// SOURCE-NEXT:                   // %239 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%239)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%226) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 337 C 11>, <L 337 C 20>, "_0x18bf26", 15262, 15271, 68, "_0x18bf26">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %222 = jsir.identifier_ref {"_0x57328a"}
// SOURCE-NEXT:                   // %222 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %223 = jsir.identifier_ref {"_0x5309c9"}
// SOURCE-NEXT:                   // %223 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %224 = jsir.identifier_ref {"_0x3e0fe0"}
// SOURCE-NEXT:                   // %224 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %225 = jsir.identifier_ref {"_0x30025e"}
// SOURCE-NEXT:                   // %225 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%222, %223, %224, %225)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %208 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %208 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%208) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%208) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %209 = jsir.identifier {"_0xacf810"}
// SOURCE-NEXT:                   // %209 = #jsir_builtin<inline_expression_function  "_0x4acd2a", 8,  "_0x16c7ef", 8,  "_0x638ddb", 8,  "_0x5673ea", 8, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4cd8", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x638ddb", 8>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x5673ea", 8>>>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %210 = jsir.identifier {"_0x57328a"}
// SOURCE-NEXT:                   // %210 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %211 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x131", 3.050000e+02 : f64>, 3.050000e+02 : f64}
// SOURCE-NEXT:                   // %211 = 3.050000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %212 = jsir.binary_expression (%210, %211) {"-"}
// SOURCE-NEXT:                   // %212 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %213 = jsir.identifier {"_0x5309c9"}
// SOURCE-NEXT:                   // %213 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %214 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x1b2", 4.340000e+02 : f64>, 4.340000e+02 : f64}
// SOURCE-NEXT:                   // %214 = 4.340000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %215 = jsir.binary_expression (%213, %214) {"-"}
// SOURCE-NEXT:                   // %215 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %216 = jsir.identifier {"_0x5309c9"}
// SOURCE-NEXT:                   // %216 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %217 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x4", 4.000000e+00 : f64>, 4.000000e+00 : f64}
// SOURCE-NEXT:                   // %217 = 4.000000e+00 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %218 = jsir.unary_expression (%217) {"-", true}
// SOURCE-NEXT:                   // %218 = -4.000000e+00 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %219 = jsir.binary_expression (%216, %218) {"-"}
// SOURCE-NEXT:                   // %219 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %220 = jsir.identifier {"_0x57328a"}
// SOURCE-NEXT:                   // %220 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %221 = jsir.call_expression (%209, %212, %215, %219, %220)
// SOURCE-NEXT:                   // %221 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%221)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%208) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %142 = jsir.identifier {"Error"}
// SOURCE-NEXT:               // %142 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %143 = jsir.string_literal {#jsir<string_literal_extra "'The\\x20`'", "The `">, "The `"}
// SOURCE-NEXT:               // %143 = "The `"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %144 = jsir.identifier {"_0x4cf207"}
// SOURCE-NEXT:               // %144 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %145 = jsir.binary_expression (%143, %144) {"+"}
// SOURCE-NEXT:               // %145 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %146 = jsir.identifier {"_0x1ef47c"}
// SOURCE-NEXT:               // %146 = #jsir_builtin<inline_expression_function  "_0xb04e5e", 67,  "_0x3d4018", 67,  "_0x2a23a3", 67,  "_0x18496d", 67, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x40ee28", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xb04e5e", 67>, 4.900000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3d4018", 67>, #jsir_builtin<inline_expression_unary_expression 6.260000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a23a3", 67>, 2.000000e+00 : f64, "-">, #jsir<symbol_id "_0x18496d", 67>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %147 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2de", 7.340000e+02 : f64>, 7.340000e+02 : f64}
// SOURCE-NEXT:               // %147 = 7.340000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %148 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e2", 7.380000e+02 : f64>, 7.380000e+02 : f64}
// SOURCE-NEXT:               // %148 = 7.380000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %149 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2ec", 7.480000e+02 : f64>, 7.480000e+02 : f64}
// SOURCE-NEXT:               // %149 = 7.480000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %150 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e6", 7.420000e+02 : f64>, 7.420000e+02 : f64}
// SOURCE-NEXT:               // %150 = 7.420000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %151 = jsir.call_expression (%146, %147, %148, %149, %150)
// SOURCE-NEXT:               // %151 = "` export o"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %152 = jsir.identifier {"_0x18bf26"}
// SOURCE-NEXT:               // %152 = #jsir_builtin<inline_expression_function  "_0x57328a", 68,  "_0x5309c9", 68,  "_0x3e0fe0", 68,  "_0x30025e", 68, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x57328a", 68>, 3.050000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, 4.340000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, #jsir_builtin<inline_expression_unary_expression 4.000000e+00 : f64, "-">, "-">, #jsir<symbol_id "_0x57328a", 68>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %153 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x164", 3.560000e+02 : f64>, 3.560000e+02 : f64}
// SOURCE-NEXT:               // %153 = 3.560000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %154 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x14c", 3.320000e+02 : f64>, 3.320000e+02 : f64}
// SOURCE-NEXT:               // %154 = 3.320000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %155 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x146", 3.260000e+02 : f64>, 3.260000e+02 : f64}
// SOURCE-NEXT:               // %155 = 3.260000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %156 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x128", 2.960000e+02 : f64>, 2.960000e+02 : f64}
// SOURCE-NEXT:               // %156 = 2.960000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %157 = jsir.call_expression (%152, %153, %154, %155, %156)
// SOURCE-NEXT:               // %157 = "f @babel/c"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %158 = jsir.binary_expression (%151, %157) {"+"}
// SOURCE-NEXT:               // %158 = "` export of @babel/c"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %159 = jsir.identifier {"_0x1ef47c"}
// SOURCE-NEXT:               // %159 = #jsir_builtin<inline_expression_function  "_0xb04e5e", 67,  "_0x3d4018", 67,  "_0x2a23a3", 67,  "_0x18496d", 67, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x40ee28", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xb04e5e", 67>, 4.900000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3d4018", 67>, #jsir_builtin<inline_expression_unary_expression 6.260000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a23a3", 67>, 2.000000e+00 : f64, "-">, #jsir<symbol_id "_0x18496d", 67>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %160 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x312", 7.860000e+02 : f64>, 7.860000e+02 : f64}
// SOURCE-NEXT:               // %160 = 7.860000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %161 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f0", 7.520000e+02 : f64>, 7.520000e+02 : f64}
// SOURCE-NEXT:               // %161 = 7.520000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %162 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f5", 7.570000e+02 : f64>, 7.570000e+02 : f64}
// SOURCE-NEXT:               // %162 = 7.570000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %163 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2e6", 7.420000e+02 : f64>, 7.420000e+02 : f64}
// SOURCE-NEXT:               // %163 = 7.420000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %164 = jsir.call_expression (%159, %160, %161, %162, %163)
// SOURCE-NEXT:               // %164 = "ore is onl"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %165 = jsir.binary_expression (%158, %164) {"+"}
// SOURCE-NEXT:               // %165 = "` export of @babel/core is onl"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %166 = jsir.string_literal {#jsir<string_literal_extra "'y\\x20'", "y ">, "y "}
// SOURCE-NEXT:               // %166 = "y "
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %167 = jsir.binary_expression (%165, %166) {"+"}
// SOURCE-NEXT:               // %167 = "` export of @babel/core is only "
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %168 = jsir.parenthesized_expression (%167)
// SOURCE-NEXT:               // %168 = "` export of @babel/core is only "
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %169 = jsir.binary_expression (%145, %168) {"+"}
// SOURCE-NEXT:               // %169 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %170 = jsir.identifier {"_0x30a2f8"}
// SOURCE-NEXT:               // %170 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %171 = jsir.binary_expression (%169, %170) {"+"}
// SOURCE-NEXT:               // %171 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %172 = jsir.string_literal {#jsir<string_literal_extra "'\\x20from\\x20the\\x20'", " from the ">, " from the "}
// SOURCE-NEXT:               // %172 = " from the "
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %173 = jsir.identifier {"_0x1ef47c"}
// SOURCE-NEXT:               // %173 = #jsir_builtin<inline_expression_function  "_0xb04e5e", 67,  "_0x3d4018", 67,  "_0x2a23a3", 67,  "_0x18496d", 67, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x40ee28", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0xb04e5e", 67>, 4.900000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x3d4018", 67>, #jsir_builtin<inline_expression_unary_expression 6.260000e+02 : f64, "-">, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x2a23a3", 67>, 2.000000e+00 : f64, "-">, #jsir<symbol_id "_0x18496d", 67>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %174 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d3", 7.230000e+02 : f64>, 7.230000e+02 : f64}
// SOURCE-NEXT:               // %174 = 7.230000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %175 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2f4", 7.560000e+02 : f64>, 7.560000e+02 : f64}
// SOURCE-NEXT:               // %175 = 7.560000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %176 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x305", 7.730000e+02 : f64>, 7.730000e+02 : f64}
// SOURCE-NEXT:               // %176 = 7.730000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %177 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x2d8", 7.280000e+02 : f64>, 7.280000e+02 : f64}
// SOURCE-NEXT:               // %177 = 7.280000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %178 = jsir.call_expression (%173, %174, %175, %176, %177)
// SOURCE-NEXT:               // %178 = "CommonJS v"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %179 = jsir.binary_expression (%172, %178) {"+"}
// SOURCE-NEXT:               // %179 = " from the CommonJS v"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %180 = jsir.identifier {"_0x18bf26"}
// SOURCE-NEXT:               // %180 = #jsir_builtin<inline_expression_function  "_0x57328a", 68,  "_0x5309c9", 68,  "_0x3e0fe0", 68,  "_0x30025e", 68, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x57328a", 68>, 3.050000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, 4.340000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, #jsir_builtin<inline_expression_unary_expression 4.000000e+00 : f64, "-">, "-">, #jsir<symbol_id "_0x57328a", 68>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %181 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x152", 3.380000e+02 : f64>, 3.380000e+02 : f64}
// SOURCE-NEXT:               // %181 = 3.380000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %182 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x130", 3.040000e+02 : f64>, 3.040000e+02 : f64}
// SOURCE-NEXT:               // %182 = 3.040000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %183 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x147", 3.270000e+02 : f64>, 3.270000e+02 : f64}
// SOURCE-NEXT:               // %183 = 3.270000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %184 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x107", 2.630000e+02 : f64>, 2.630000e+02 : f64}
// SOURCE-NEXT:               // %184 = 2.630000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %185 = jsir.call_expression (%180, %181, %182, %183, %184)
// SOURCE-NEXT:               // %185 = "ersion aft"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %186 = jsir.binary_expression (%179, %185) {"+"}
// SOURCE-NEXT:               // %186 = " from the CommonJS version aft"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %187 = jsir.identifier {"_0x18bf26"}
// SOURCE-NEXT:               // %187 = #jsir_builtin<inline_expression_function  "_0x57328a", 68,  "_0x5309c9", 68,  "_0x3e0fe0", 68,  "_0x30025e", 68, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x57328a", 68>, 3.050000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, 4.340000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, #jsir_builtin<inline_expression_unary_expression 4.000000e+00 : f64, "-">, "-">, #jsir<symbol_id "_0x57328a", 68>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %188 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x10e", 2.700000e+02 : f64>, 2.700000e+02 : f64}
// SOURCE-NEXT:               // %188 = 2.700000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %189 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x119", 2.810000e+02 : f64>, 2.810000e+02 : f64}
// SOURCE-NEXT:               // %189 = 2.810000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %190 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11a", 2.820000e+02 : f64>, 2.820000e+02 : f64}
// SOURCE-NEXT:               // %190 = 2.820000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %191 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x11a", 2.820000e+02 : f64>, 2.820000e+02 : f64}
// SOURCE-NEXT:               // %191 = 2.820000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %192 = jsir.call_expression (%187, %188, %189, %190, %191)
// SOURCE-NEXT:               // %192 = "er that th"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %193 = jsir.binary_expression (%186, %192) {"+"}
// SOURCE-NEXT:               // %193 = " from the CommonJS version after that th"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %194 = jsir.identifier {"_0x18bf26"}
// SOURCE-NEXT:               // %194 = #jsir_builtin<inline_expression_function  "_0x57328a", 68,  "_0x5309c9", 68,  "_0x3e0fe0", 68,  "_0x30025e", 68, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0xacf810", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x57328a", 68>, 3.050000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, 4.340000e+02 : f64, "-">, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x5309c9", 68>, #jsir_builtin<inline_expression_unary_expression 4.000000e+00 : f64, "-">, "-">, #jsir<symbol_id "_0x57328a", 68>>>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %195 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x125", 2.930000e+02 : f64>, 2.930000e+02 : f64}
// SOURCE-NEXT:               // %195 = 2.930000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %196 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xfd", 2.530000e+02 : f64>, 2.530000e+02 : f64}
// SOURCE-NEXT:               // %196 = 2.530000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %197 = jsir.numeric_literal {#jsir<numeric_literal_extra "0xed", 2.370000e+02 : f64>, 2.370000e+02 : f64}
// SOURCE-NEXT:               // %197 = 2.370000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %198 = jsir.numeric_literal {#jsir<numeric_literal_extra "0x125", 2.930000e+02 : f64>, 2.930000e+02 : f64}
// SOURCE-NEXT:               // %198 = 2.930000e+02 : f64
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %199 = jsir.call_expression (%194, %195, %196, %197, %198)
// SOURCE-NEXT:               // %199 = "e ESM vers"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %200 = jsir.binary_expression (%193, %199) {"+"}
// SOURCE-NEXT:               // %200 = " from the CommonJS version after that the ESM vers"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %201 = jsir.string_literal {#jsir<string_literal_extra "'ion\\x20is\\x20loa'", "ion is loa">, "ion is loa"}
// SOURCE-NEXT:               // %201 = "ion is loa"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %202 = jsir.binary_expression (%200, %201) {"+"}
// SOURCE-NEXT:               // %202 = " from the CommonJS version after that the ESM version is loa"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %203 = jsir.string_literal {#jsir<string_literal_extra "'ded.'", "ded.">, "ded."}
// SOURCE-NEXT:               // %203 = "ded."
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %204 = jsir.binary_expression (%202, %203) {"+"}
// SOURCE-NEXT:               // %204 = " from the CommonJS version after that the ESM version is loaded."
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %205 = jsir.parenthesized_expression (%204)
// SOURCE-NEXT:               // %205 = " from the CommonJS version after that the ESM version is loaded."
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %206 = jsir.binary_expression (%171, %205) {"+"}
// SOURCE-NEXT:               // %206 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %207 = jsir.new_expression (%142, %206)
// SOURCE-NEXT:               // %207 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%207)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%141) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <babel#0 : #jsir.null_literal> }
// SOURCE-NEXT:     }, {
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     })
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT: })
// SOURCE-NEXT:   // State [default = <uninitialized>] { }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Bindings:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: _0x40ee28#0:
// SOURCE-NEXT:     (_0x186aad#43, _0x1a1677#43, _0x5e238c#43, _0x297818#43) => { _0x4cd8#0((_0x1a1677#43 - 933), _0x297818#43) }
// SOURCE-NEXT: _0xacf810#0:
// SOURCE-NEXT:     (_0x4acd2a#8, _0x16c7ef#8, _0x638ddb#8, _0x5673ea#8) => { _0x4cd8#0((_0x638ddb#8 - -122), _0x5673ea#8) }
// SOURCE-NEXT: _0x29c472#9:
// SOURCE-NEXT:     (_0x5456dc#10, _0x33a37e#10, _0x3cbdff#10, _0x396c1e#10) => { _0x4cd8#0((_0x396c1e#10 - 301), _0x3cbdff#10) }
// SOURCE-NEXT: _0x544ee4#9:
// SOURCE-NEXT:     _0x390bfc#9
// SOURCE-NEXT: _0x24d832#12:
// SOURCE-NEXT:     (_0x5a8af9#13, _0x70056f#13, _0x35b75a#13, _0x258873#13) => { _0x29c472#9((_0x5a8af9#13 - 363), (_0x70056f#13 - 409), _0x70056f#13, (_0x5a8af9#13 - -1281)) }
// SOURCE-NEXT: _0x15f3bc#15:
// SOURCE-NEXT:     (_0x2bf733#16, _0x4c796c#16, _0x3a4c2a#16, _0x10ef38#16) => { _0x24d832#12((_0x4c796c#16 - 1756), _0x10ef38#16, (_0x3a4c2a#16 - 54), (_0x10ef38#16 - 431)) }
// SOURCE-NEXT: _0x5ca77d#17:
// SOURCE-NEXT:     _0x4e326e#12[_0x15f3bc#15(1195, 1159, 1200, 1166)](_0x305fc8#12, arguments#undeclared)
// SOURCE-NEXT: _0x30145a#19:
// SOURCE-NEXT:     (_0x54c92d#37, _0x425092#37, _0x4a5cfe#37, _0x167ebc#37) => { _0x4cd8#0((_0x167ebc#37 - 518), _0x54c92d#37) }
// SOURCE-NEXT: _0x51073b#19:
// SOURCE-NEXT:     (_0xf81d04#38, _0x756616#38, _0x1025da#38, _0x5e4339#38) => { _0x4cd8#0((_0xf81d04#38 - 70), _0x1025da#38) }
// SOURCE-NEXT: _0x5464bf#19:
// SOURCE-NEXT:     /* 20 properties */ {
// SOURCE-NEXT:         ["syuJq"]: (_0x3118b5#20, _0x21ddb4#20) => { (_0x3118b5#20 + _0x21ddb4#20) },
// SOURCE-NEXT:         ["nZJPO"]: (_0x43622f#21, _0x52d507#21) => { (_0x43622f#21 === _0x52d507#21) },
// SOURCE-NEXT:         ["iQdRz"]: "ajsZf",
// SOURCE-NEXT:         ["IPWWb"]: _0x51073b#19(517, 502, 541, 495),
// SOURCE-NEXT:         ["JqNej"]: (_0x2ce0fe#22, _0x2cf948#22) => { _0x2ce0fe#22(_0x2cf948#22) },
// SOURCE-NEXT:         ["RxDWL"]: (_0x49f4c1#23, _0xdb5f9d#23) => { (_0x49f4c1#23 + _0xdb5f9d#23) },
// SOURCE-NEXT:         ["ihWZS"]: (_0x30145a#19(949, 998, 927, 960) + _0x30145a#19(889, 905, 930, 907)),
// SOURCE-NEXT:         ["tfQnO"]: ((("{}.constru" + _0x30145a#19(940, 921, 959, 953)) + "rn this\22)(") + " )"),
// SOURCE-NEXT:         ["JCsly"]: (_0x219e19#24, _0x443178#24) => { (_0x219e19#24 !== _0x443178#24) },
// SOURCE-NEXT:         ["bfMPq"]: _0x51073b#19(495, 461, 491, 491),
// SOURCE-NEXT:         ["BFaCv"]: (_0xe039d2#25, _0x46e119#25, _0x21e121#25) => { _0xe039d2#25(_0x46e119#25, _0x21e121#25) },
// SOURCE-NEXT:         ["IKNzV"]: _0x30145a#19(873, 878, 877, 911),
// SOURCE-NEXT:         ["uXNCK"]: (_0x37da51#26) => { _0x37da51#26() },
// SOURCE-NEXT:         ["HQlLe"]: _0x51073b#19(489, 525, 458, 522),
// SOURCE-NEXT:         ["ZYRdl"]: _0x30145a#19(980, 990, 947, 950),
// SOURCE-NEXT:         ["esErA"]: _0x51073b#19(529, 505, 544, 566),
// SOURCE-NEXT:         ["KMrmn"]: _0x51073b#19(487, 485, 521, 480),
// SOURCE-NEXT:         ["meuOR"]: (_0x434fe5#27, _0x2b865b#27) => { (_0x434fe5#27 < _0x2b865b#27) },
// SOURCE-NEXT:         ["LqGSe"]: (_0x15a9dc#28, _0x2ad08d#28) => { (_0x15a9dc#28 !== _0x2ad08d#28) },
// SOURCE-NEXT:         ["ZJayL"]: "stwZs",
// SOURCE-NEXT:     }
// SOURCE-NEXT: _0x55557e#29:
// SOURCE-NEXT:     (_0x5bb5d0#30, _0x35eea7#30, _0x795e0c#30, _0x498a5c#30) => { _0x51073b#19((_0x5bb5d0#30 - -168), (_0x35eea7#30 - 367), _0x498a5c#30, (_0x498a5c#30 - 111)) }
// SOURCE-NEXT: _0x7fdc4d#29:
// SOURCE-NEXT:     (_0x5bf779#31, _0x429b8a#31, _0x37652a#31, _0x3759df#31) => { _0x30145a#19(_0x3759df#31, (_0x429b8a#31 - 477), (_0x37652a#31 - 257), (_0x429b8a#31 - 331)) }
// SOURCE-NEXT: _0xf457f#36:
// SOURCE-NEXT:     _0x1f05f3#undeclared[_0x55557e#29(285, 275, 293, 292)](_0x3ac693#undeclared, arguments#undeclared)
// SOURCE-NEXT: _0x30cb84#41:
// SOURCE-NEXT:     _0x441e2d#19[_0x36145e#39]
// SOURCE-NEXT: _0x924763#51:
// SOURCE-NEXT:     (_0x1e890b#52, _0x301483#52, _0x2b7f7d#52, _0xb5702a#52) => { _0xacf810#0((_0x1e890b#52 - 461), (_0x301483#52 - 111), (_0xb5702a#52 - 592), _0x2b7f7d#52) }
// SOURCE-NEXT: _0x38639b#54:
// SOURCE-NEXT:     (_0x370158#56, _0x4cb1b6#56, _0x45f135#56, _0x3fbc8a#56) => { _0x40ee28#0((_0x370158#56 - 57), (_0x4cb1b6#56 - -990), (_0x45f135#56 - 449), _0x3fbc8a#56) }
// SOURCE-NEXT: _0xbabec0#54:
// SOURCE-NEXT:     (_0x142239#55, _0x1ea37a#55, _0x397b4a#55, _0x200d78#55) => { _0xacf810#0((_0x142239#55 - 454), (_0x1ea37a#55 - 16), (_0x200d78#55 - 411), _0x397b4a#55) }
// SOURCE-NEXT: _0x22fcea#58:
// SOURCE-NEXT:     _0x2aeb5e#58
// SOURCE-NEXT: _0x42f460#58:
// SOURCE-NEXT:     (_0x2ee8cc#60, _0x118306#60, _0x8af728#60, _0x130ab6#60) => { _0xacf810#0((_0x2ee8cc#60 - 20), (_0x118306#60 - 171), (_0x8af728#60 - -31), _0x118306#60) }
// SOURCE-NEXT: _0x8a4661#58:
// SOURCE-NEXT:     (_0x48d0d1#59, _0x3900b9#59, _0x4d1f27#59, _0x1e73b6#59) => { _0xacf810#0((_0x48d0d1#59 - 58), (_0x3900b9#59 - 439), (_0x4d1f27#59 - 626), _0x3900b9#59) }
// SOURCE-NEXT: _0x1bda43#63:
// SOURCE-NEXT:     /* 2 properties */ {
// SOURCE-NEXT:         ["qrFVU"]: (_0x50e379#65, _0x21cd99#65, _0x4b2a2e#65) => { _0x50e379#65(_0x21cd99#65, _0x4b2a2e#65) },
// SOURCE-NEXT:         ["vfvSA"]: _0x5603f7#63(-59, -119, -102, -99),
// SOURCE-NEXT:     }
// SOURCE-NEXT: _0x5603f7#63:
// SOURCE-NEXT:     (_0x551811#64, _0x4f1bac#64, _0x1f715e#64, _0x3ea73e#64) => { _0xacf810#0((_0x551811#64 - 475), (_0x4f1bac#64 - 103), (_0x3ea73e#64 - -361), _0x1f715e#64) }
// SOURCE-NEXT: _0x18bf26#66:
// SOURCE-NEXT:     (_0x57328a#68, _0x5309c9#68, _0x3e0fe0#68, _0x30025e#68) => { _0xacf810#0((_0x57328a#68 - 305), (_0x5309c9#68 - 434), (_0x5309c9#68 - -4), _0x57328a#68) }
// SOURCE-NEXT: _0x1ef47c#66:
// SOURCE-NEXT:     (_0xb04e5e#67, _0x3d4018#67, _0x2a23a3#67, _0x18496d#67) => { _0x40ee28#0((_0xb04e5e#67 - 490), (_0x3d4018#67 - -626), (_0x2a23a3#67 - 2), _0x18496d#67) }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Computed constants:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: From [1919, 1924): `-0x7a` -> `-122`
// SOURCE-NEXT: From [2258, 2295): `_0x29c472(0x2d9, 0x2ac, 0x2af, 0x2b5)` -> `jsqtB`
// SOURCE-NEXT: From [2585, 2591): `-0x501` -> `-1281`
// SOURCE-NEXT: From [2668, 2674): `-0x24c` -> `-588`
// SOURCE-NEXT: From [2676, 2682): `-0x24a` -> `-586`
// SOURCE-NEXT: From [2684, 2690): `-0x22f` -> `-559`
// SOURCE-NEXT: From [2692, 2698): `-0x25d` -> `-605`
// SOURCE-NEXT: From [2658, 2699): `_0x24d832(-0x24c, -0x24a, -0x22f, -0x25d)` -> `jsqtB`
// SOURCE-NEXT: From [3110, 3147): `_0x15f3bc(0x4ab, 0x487, 0x4b0, 0x48e)` -> `apply`
// SOURCE-NEXT: From [3746, 3783): `_0x51073b(0x205, 0x1f6, 0x21d, 0x1ef)` -> `LVBjR`
// SOURCE-NEXT: From [4051, 4088): `_0x30145a(0x3b5, 0x3e6, 0x39f, 0x3c0)` -> `return (fu`
// SOURCE-NEXT: From [4091, 4128): `_0x30145a(0x379, 0x389, 0x3a2, 0x38b)` -> `nction() `
// SOURCE-NEXT: From [4051, 4128): `_0x30145a(0x3b5, 0x3e6, 0x39f, 0x3c0) + _0x30145a(0x379, 0x389, 0x3a2, 0x38b)` -> `return (function() `
// SOURCE-NEXT: From [4168, 4205): `_0x30145a(0x3ac, 0x399, 0x3bf, 0x3b9)` -> `ctor("retu`
// SOURCE-NEXT: From [4153, 4205): `'{}.constru' + _0x30145a(0x3ac, 0x399, 0x3bf, 0x3b9)` -> `{}.constructor("retu`
// SOURCE-NEXT: From [4153, 4226): `'{}.constru' + _0x30145a(0x3ac, 0x399, 0x3bf, 0x3b9) + 'rn\x20this\x22)('` -> `{}.constructor("return this")(`
// SOURCE-NEXT: From [4153, 4236): `'{}.constru' + _0x30145a(0x3ac, 0x399, 0x3bf, 0x3b9) + 'rn\x20this\x22)(' + '\x20)'` -> `{}.constructor("return this")( )`
// SOURCE-NEXT: From [4385, 4422): `_0x51073b(0x1ef, 0x1cd, 0x1eb, 0x1eb)` -> `BUbjB`
// SOURCE-NEXT: From [4590, 4627): `_0x30145a(0x369, 0x36e, 0x36d, 0x38f)` -> `callable`
// SOURCE-NEXT: From [4753, 4790): `_0x51073b(0x1e9, 0x20d, 0x1ca, 0x20a)` -> `info`
// SOURCE-NEXT: From [4815, 4852): `_0x30145a(0x3d4, 0x3de, 0x3b3, 0x3b6)` -> `exception`
// SOURCE-NEXT: From [4877, 4914): `_0x51073b(0x211, 0x1f9, 0x220, 0x236)` -> `table`
// SOURCE-NEXT: From [4939, 4976): `_0x51073b(0x1e7, 0x1e5, 0x209, 0x1e0)` -> `trace`
// SOURCE-NEXT: From [5420, 5425): `-0xa8` -> `-168`
// SOURCE-NEXT: From [5719, 5756): `_0x55557e(0x159, 0x162, 0x13c, 0x15f)` -> `nZJPO`
// SOURCE-NEXT: From [5768, 5805): `_0x55557e(0x121, 0x136, 0x13e, 0x10f)` -> `iQdRz`
// SOURCE-NEXT: From [5758, 5806): `_0x5464bf[_0x55557e(0x121, 0x136, 0x13e, 0x10f)]` -> `ajsZf`
// SOURCE-NEXT: From [5818, 5855): `_0x7fdc4d(0x4cc, 0x4df, 0x4eb, 0x4cd)` -> `IPWWb`
// SOURCE-NEXT: From [5808, 5856): `_0x5464bf[_0x7fdc4d(0x4cc, 0x4df, 0x4eb, 0x4cd)]` -> `LVBjR`
// SOURCE-NEXT: From [5709, 5857): `_0x5464bf[_0x55557e(0x159, 0x162, 0x13c, 0x15f)](_0x5464bf[_0x55557e(0x121, 0x136, 0x13e, 0x10f)], _0x5464bf[_0x7fdc4d(0x4cc, 0x4df, 0x4eb, 0x4cd)])` -> `false`
// SOURCE-NEXT: From [5705, 7214): `if (_0x5464bf[_0x55557e(0x159, 0x162, 0x13c, 0x15f)](_0x5464bf[_0x55557e(0x121, 0x136, 0x13e, 0x10f)], _0x5464bf[_0x7fdc4d(0x4cc, 0x4df, 0x4eb, 0x4cd)]))
// SOURCE-NEXT:                   return new _0x18ec3f(_0x5464bf['syuJq'](_0x55557e(0x13b, 0x122, 0x146, 0x148) + _0x5c7608 + (_0x55557e(0x14d, 0x167, 0x12a, 0x160) + 'f\x20@babel/c' + 'ore\x20is\x20onl' + 'y\x20') + _0x3629a5, '\x20from\x20the\x20' + _0x55557e(0x15f, 0x157, 0x169, 0x183) + _0x55557e(0x14c, 0x13c, 0x15b, 0x165) + _0x55557e(0x135, 0x14f, 0x15d, 0x135) + _0x55557e(0x119, 0x136, 0x130, 0x104) + _0x7fdc4d(0x51d, 0x4fb, 0x520, 0x4df) + 'ded.'));
// SOURCE-NEXT:               else {
// SOURCE-NEXT:                   let _0x98a032;
// SOURCE-NEXT:                   try {
// SOURCE-NEXT:                       _0x98a032 = _0x5464bf[_0x7fdc4d(0x501, 0x4eb, 0x4e0, 0x511)](Function, _0x5464bf[_0x7fdc4d(0x509, 0x509, 0x4f7, 0x501)](_0x5464bf[_0x7fdc4d(0x4b8, 0x4e0, 0x4cc, 0x4ce)](_0x5464bf[_0x7fdc4d(0x4ed, 0x513, 0x520, 0x51d)], _0x5464bf['tfQnO']), ');'))();
// SOURCE-NEXT:                   } catch (_0x306e21) {
// SOURCE-NEXT:                       if (_0x5464bf['JCsly'](_0x5464bf[_0x7fdc4d(0x4b9, 0x4d7, 0x4cc, 0x4c1)], _0x5464bf['bfMPq'])) {
// SOURCE-NEXT:                           if (_0x28fe3a) {
// SOURCE-NEXT:                               const _0xf457f = _0x1f05f3[_0x55557e(0x11d, 0x113, 0x125, 0x124)](_0x3ac693, arguments);
// SOURCE-NEXT:                               return _0x30398c = null, _0xf457f;
// SOURCE-NEXT:                           }
// SOURCE-NEXT:                       } else
// SOURCE-NEXT:                           _0x98a032 = window;
// SOURCE-NEXT:                   }
// SOURCE-NEXT:                   return _0x98a032;
// SOURCE-NEXT:               }` -> `false`
// SOURCE-NEXT: From [6427, 6464): `_0x7fdc4d(0x501, 0x4eb, 0x4e0, 0x511)` -> `JqNej`
// SOURCE-NEXT: From [6486, 6523): `_0x7fdc4d(0x509, 0x509, 0x4f7, 0x501)` -> `RxDWL`
// SOURCE-NEXT: From [6535, 6572): `_0x7fdc4d(0x4b8, 0x4e0, 0x4cc, 0x4ce)` -> `syuJq`
// SOURCE-NEXT: From [6584, 6621): `_0x7fdc4d(0x4ed, 0x513, 0x520, 0x51d)` -> `ihWZS`
// SOURCE-NEXT: From [6574, 6622): `_0x5464bf[_0x7fdc4d(0x4ed, 0x513, 0x520, 0x51d)]` -> `return (function() `
// SOURCE-NEXT: From [6624, 6642): `_0x5464bf['tfQnO']` -> `{}.constructor("return this")( )`
// SOURCE-NEXT: From [6525, 6643): `_0x5464bf[_0x7fdc4d(0x4b8, 0x4e0, 0x4cc, 0x4ce)](_0x5464bf[_0x7fdc4d(0x4ed, 0x513, 0x520, 0x51d)], _0x5464bf['tfQnO'])` -> `return (function() {}.constructor("return this")( )`
// SOURCE-NEXT: From [6476, 6650): `_0x5464bf[_0x7fdc4d(0x509, 0x509, 0x4f7, 0x501)](_0x5464bf[_0x7fdc4d(0x4b8, 0x4e0, 0x4cc, 0x4ce)](_0x5464bf[_0x7fdc4d(0x4ed, 0x513, 0x520, 0x51d)], _0x5464bf['tfQnO']), ');')` -> `return (function() {}.constructor("return this")( ));`
// SOURCE-NEXT: From [7250, 7287): `_0x30145a(0x3b7, 0x3f1, 0x3e8, 0x3cf)` -> `uXNCK`
// SOURCE-NEXT: From [7470, 7507): `_0x30145a(0x39a, 0x3be, 0x38b, 0x399)` -> `console`
// SOURCE-NEXT: From [7521, 7558): `_0x51073b(0x1d9, 0x1c0, 0x1f6, 0x1c1)` -> `console`
// SOURCE-NEXT: From [7754, 7791): `_0x51073b(0x1e4, 0x1e8, 0x1c9, 0x1c4)` -> `warn`
// SOURCE-NEXT: From [7813, 7850): `_0x51073b(0x1db, 0x1e6, 0x1f1, 0x1bc)` -> `HQlLe`
// SOURCE-NEXT: From [7803, 7851): `_0x5464bf[_0x51073b(0x1db, 0x1e6, 0x1f1, 0x1bc)]` -> `info`
// SOURCE-NEXT: From [7892, 7929): `_0x30145a(0x3bd, 0x3dd, 0x3d2, 0x3bf)` -> `ZYRdl`
// SOURCE-NEXT: From [7882, 7930): `_0x5464bf[_0x30145a(0x3bd, 0x3dd, 0x3d2, 0x3bf)]` -> `exception`
// SOURCE-NEXT: From [7942, 7960): `_0x5464bf['esErA']` -> `table`
// SOURCE-NEXT: From [7982, 8019): `_0x30145a(0x375, 0x386, 0x3a3, 0x383)` -> `KMrmn`
// SOURCE-NEXT: From [7972, 8020): `_0x5464bf[_0x30145a(0x375, 0x386, 0x3a3, 0x383)]` -> `trace`
// SOURCE-NEXT: From [8057, 8061): `-0x1` -> `-1`
// SOURCE-NEXT: From [8064, 8070): `-0x2e7` -> `-743`
// SOURCE-NEXT: From [8057, 8070): `-0x1 * -0x2e7` -> `743`
// SOURCE-NEXT: From [8079, 8085): `-0x161` -> `-353`
// SOURCE-NEXT: From [8073, 8085): `0x2 * -0x161` -> `-706`
// SOURCE-NEXT: From [8057, 8085): `-0x1 * -0x2e7 + 0x2 * -0x161` -> `37`
// SOURCE-NEXT: From [8088, 8093): `-0x25` -> `-37`
// SOURCE-NEXT: From [8057, 8093): `-0x1 * -0x2e7 + 0x2 * -0x161 + -0x25` -> `0`
// SOURCE-NEXT: From [8135, 8172): `_0x51073b(0x1e6, 0x1cd, 0x1e9, 0x1c3)` -> `length`
// SOURCE-NEXT: From [8224, 8261): `_0x51073b(0x1fc, 0x21a, 0x208, 0x1d8)` -> `thXxj`
// SOURCE-NEXT: From [8263, 8281): `_0x5464bf['ZJayL']` -> `stwZs`
// SOURCE-NEXT: From [8205, 8282): `_0x5464bf['LqGSe'](_0x51073b(0x1fc, 0x21a, 0x208, 0x1d8), _0x5464bf['ZJayL'])` -> `true`
// SOURCE-NEXT: From [8201, 9171): `if (_0x5464bf['LqGSe'](_0x51073b(0x1fc, 0x21a, 0x208, 0x1d8), _0x5464bf['ZJayL'])) {
// SOURCE-NEXT:               const _0x3262a7 = _0x4672d1[_0x30145a(0x391, 0x3a4, 0x37d, 0x382) + 'r'][_0x51073b(0x1d7, 0x1e7, 0x1e4, 0x1c2)][_0x30145a(0x3be, 0x3b0, 0x3e0, 0x3b7)](_0x4672d1), _0x30cb84 = _0x441e2d[_0x36145e], _0x1d642d = _0x52e013[_0x30cb84] || _0x3262a7;
// SOURCE-NEXT:               _0x3262a7[_0x30145a(0x37d, 0x39e, 0x371, 0x38d)] = _0x4672d1[_0x30145a(0x3c0, 0x3ac, 0x3aa, 0x3b7)](_0x4672d1), _0x3262a7[_0x51073b(0x1eb, 0x1c7, 0x211, 0x20d)] = _0x1d642d['toString'][_0x51073b(0x1f7, 0x1e4, 0x20b, 0x219)](_0x1d642d), _0x52e013[_0x30cb84] = _0x3262a7;
// SOURCE-NEXT:           } else {
// SOURCE-NEXT:               if (!_0x2c87de)
// SOURCE-NEXT:                   throw _0x5464bf[_0x51073b(0x1ee, 0x1e7, 0x205, 0x1d8)](_0x12c23d, _0x5fc719 + _0x30145a(0x3bb, 0x3ac, 0x3a2, 0x392), _0x5464bf[_0x30145a(0x391, 0x388, 0x398, 0x3b1)]);
// SOURCE-NEXT:               return _0xe52f70[_0x5b7551 + _0x30145a(0x38b, 0x371, 0x3a9, 0x392)](..._0x2c043e);
// SOURCE-NEXT:           }` -> `true`
// SOURCE-NEXT: From [8328, 8365): `_0x30145a(0x391, 0x3a4, 0x37d, 0x382)` -> `constructo`
// SOURCE-NEXT: From [8328, 8371): `_0x30145a(0x391, 0x3a4, 0x37d, 0x382) + 'r'` -> `constructor`
// SOURCE-NEXT: From [8373, 8410): `_0x51073b(0x1d7, 0x1e7, 0x1e4, 0x1c2)` -> `prototype`
// SOURCE-NEXT: From [8412, 8449): `_0x30145a(0x3be, 0x3b0, 0x3e0, 0x3b7)` -> `bind`
// SOURCE-NEXT: From [8568, 8605): `_0x30145a(0x37d, 0x39e, 0x371, 0x38d)` -> `__proto__`
// SOURCE-NEXT: From [8619, 8656): `_0x30145a(0x3c0, 0x3ac, 0x3aa, 0x3b7)` -> `bind`
// SOURCE-NEXT: From [8680, 8717): `_0x51073b(0x1eb, 0x1c7, 0x211, 0x20d)` -> `toString`
// SOURCE-NEXT: From [8743, 8780): `_0x51073b(0x1f7, 0x1e4, 0x20b, 0x219)` -> `bind`
// SOURCE-NEXT: From [9235, 9272): `_0x40ee28(0x504, 0x529, 0x525, 0x538)` -> `./lib/inde`
// SOURCE-NEXT: From [9235, 9281): `_0x40ee28(0x504, 0x529, 0x525, 0x538) + 'x.js'` -> `./lib/index.js`
// SOURCE-NEXT: From [11435, 11472): `_0xacf810(0x11e, 0x13d, 0x12c, 0x141)` -> `set`
// SOURCE-NEXT: From [11530, 11567): `_0xacf810(0x144, 0x129, 0x14a, 0x173)` -> `defineProp`
// SOURCE-NEXT: From [11530, 11576): `_0xacf810(0x144, 0x129, 0x14a, 0x173) + 'erty'` -> `defineProperty`
// SOURCE-NEXT: From [11587, 11624): `_0x40ee28(0x540, 0x53d, 0x52c, 0x538)` -> `__ initial`
// SOURCE-NEXT: From [11627, 11664): `_0xacf810(0x148, 0x138, 0x152, 0x172)` -> `ize @babel`
// SOURCE-NEXT: From [11587, 11664): `_0x40ee28(0x540, 0x53d, 0x52c, 0x538) + _0xacf810(0x148, 0x138, 0x152, 0x172)` -> `__ initialize @babel`
// SOURCE-NEXT: From [11667, 11704): `_0x40ee28(0x554, 0x565, 0x58e, 0x54a)` -> `/core cjs `
// SOURCE-NEXT: From [11587, 11704): `_0x40ee28(0x540, 0x53d, 0x52c, 0x538) + _0xacf810(0x148, 0x138, 0x152, 0x172) + _0x40ee28(0x554, 0x565, 0x58e, 0x54a)` -> `__ initialize @babel/core cjs `
// SOURCE-NEXT: From [11707, 11743): `_0xacf810(0x148, 0x134, 0x11f, 0xf9)` -> `proxy __`
// SOURCE-NEXT: From [11587, 11743): `_0x40ee28(0x540, 0x53d, 0x52c, 0x538) + _0xacf810(0x148, 0x138, 0x152, 0x172) + _0x40ee28(0x554, 0x565, 0x58e, 0x54a) + _0xacf810(0x148, 0x134, 0x11f, 0xf9)` -> `__ initialize @babel/core cjs proxy __`
// SOURCE-NEXT: From [11765, 11802): `_0xacf810(0x13f, 0x170, 0x14e, 0x128)` -> `version`
// SOURCE-NEXT: From [11814, 11851): `_0x40ee28(0x51b, 0x544, 0x537, 0x526)` -> `./package.`
// SOURCE-NEXT: From [11854, 11891): `_0xacf810(0x146, 0x111, 0x128, 0x13f)` -> `json`
// SOURCE-NEXT: From [11814, 11891): `_0x40ee28(0x51b, 0x544, 0x537, 0x526) + _0xacf810(0x146, 0x111, 0x128, 0x13f)` -> `./package.json`
// SOURCE-NEXT: From [11893, 11930): `_0xacf810(0x13d, 0x177, 0x14e, 0x137)` -> `version`
// SOURCE-NEXT: From [11963, 11998): `_0xacf810(0xf9, 0xeb, 0x111, 0x114)` -> `createConf`
// SOURCE-NEXT: From [11963, 12009): `_0xacf810(0xf9, 0xeb, 0x111, 0x114) + 'igItem'` -> `createConfigItem`
// SOURCE-NEXT: From [12017, 12054): `_0xacf810(0x128, 0x13f, 0x11c, 0x11e)` -> `loadPartia`
// SOURCE-NEXT: From [12017, 12066): `_0xacf810(0x128, 0x13f, 0x11c, 0x11e) + 'lConfig'` -> `loadPartialConfig`
// SOURCE-NEXT: From [12074, 12092): `'loadOption' + 's'` -> `loadOptions`
// SOURCE-NEXT: From [12100, 12137): `_0xacf810(0x12a, 0x131, 0x121, 0x146)` -> `transform`
// SOURCE-NEXT: From [12145, 12182): `_0x40ee28(0x572, 0x557, 0x530, 0x533)` -> `transformF`
// SOURCE-NEXT: From [12185, 12222): `_0xacf810(0x126, 0x14b, 0x12d, 0x14f)` -> `ile`
// SOURCE-NEXT: From [12145, 12222): `_0x40ee28(0x572, 0x557, 0x530, 0x533) + _0xacf810(0x126, 0x14b, 0x12d, 0x14f)` -> `transformFile`
// SOURCE-NEXT: From [12230, 12267): `_0xacf810(0x131, 0x149, 0x138, 0x132)` -> `transformF`
// SOURCE-NEXT: From [12230, 12278): `_0xacf810(0x131, 0x149, 0x138, 0x132) + 'romAst'` -> `transformFromAst`
// SOURCE-NEXT: From [12286, 12322): `_0xacf810(0xf3, 0x10e, 0x107, 0x10a)` -> `parse`
// SOURCE-NEXT: From [12352, 12389): `_0xacf810(0x120, 0x12d, 0x12a, 0x108)` -> `buildExter`
// SOURCE-NEXT: From [12392, 12429): `_0x40ee28(0x53e, 0x527, 0x50b, 0x4fe)` -> `nalHelpers`
// SOURCE-NEXT: From [12352, 12429): `_0xacf810(0x120, 0x12d, 0x12a, 0x108) + _0x40ee28(0x53e, 0x527, 0x50b, 0x4fe)` -> `buildExternalHelpers`
// SOURCE-NEXT: From [12452, 12489): `_0x40ee28(0x570, 0x56a, 0x543, 0x564)` -> `tokTypes`
// SOURCE-NEXT: From [12497, 12534): `_0xacf810(0x151, 0x172, 0x14d, 0x15f)` -> `traverse`
// SOURCE-NEXT: From [12542, 12579): `_0xacf810(0x126, 0x159, 0x142, 0x136)` -> `template`
// SOURCE-NEXT: From [12852, 12889): `_0x924763(0x37c, 0x372, 0x372, 0x383)` -> `then`
// SOURCE-NEXT: From [12977, 13014): `_0x40ee28(0x523, 0x523, 0x525, 0x52b)` -> `Async`
// SOURCE-NEXT: From [13346, 13352): `-0x3de` -> `-990`
// SOURCE-NEXT: From [13413, 13450): `_0x38639b(0x180, 0x174, 0x152, 0x184)` -> `then`
// SOURCE-NEXT: From [13482, 13519): `_0x38639b(0x140, 0x145, 0x16e, 0x14e)` -> `Async`
// SOURCE-NEXT: From [13557, 13593): `_0xacf810(0x105, 0x12f, 0x112, 0xf8)` -> `Sync`
// SOURCE-NEXT: From [13667, 13701): `_0x42f460(0xf2, 0x11a, 0xf4, 0xf7)` -> `kHTii`
// SOURCE-NEXT: From [13982, 14016): `_0x42f460(0xd0, 0xd3, 0xf3, 0x111)` -> `Sync`
// SOURCE-NEXT: From [14028, 14061): `_0x42f460(0xf7, 0xfd, 0xf4, 0xde)` -> `kHTii`
// SOURCE-NEXT: From [14211, 14216): `-0x1f` -> `-31`
// SOURCE-NEXT: From [14264, 14301): `_0x8a4661(0x35c, 0x394, 0x384, 0x37e)` -> `Sync`
// SOURCE-NEXT: From [14385, 14422): `_0x40ee28(0x568, 0x568, 0x555, 0x543)` -> `erty`
// SOURCE-NEXT: From [14370, 14422): `'defineProp' + _0x40ee28(0x568, 0x568, 0x555, 0x543)` -> `defineProperty`
// SOURCE-NEXT: From [14612, 14618): `-0x169` -> `-361`
// SOURCE-NEXT: From [14850, 14855): `-0x3b` -> `-59`
// SOURCE-NEXT: From [14857, 14862): `-0x77` -> `-119`
// SOURCE-NEXT: From [14864, 14869): `-0x66` -> `-102`
// SOURCE-NEXT: From [14871, 14876): `-0x63` -> `-99`
// SOURCE-NEXT: From [14840, 14877): `_0x5603f7(-0x3b, -0x77, -0x66, -0x63)` -> `accessible`
// SOURCE-NEXT: From [14974, 14992): `_0x1bda43['vfvSA']` -> `accessible`
// SOURCE-NEXT: From [15210, 15216): `-0x272` -> `-626`
// SOURCE-NEXT: From [15391, 15395): `-0x4` -> `-4`
// SOURCE-NEXT: From [15458, 15495): `_0x1ef47c(0x2de, 0x2e2, 0x2ec, 0x2e6)` -> `` export o`
// SOURCE-NEXT: From [15498, 15535): `_0x18bf26(0x164, 0x14c, 0x146, 0x128)` -> `f @babel/c`
// SOURCE-NEXT: From [15458, 15535): `_0x1ef47c(0x2de, 0x2e2, 0x2ec, 0x2e6) + _0x18bf26(0x164, 0x14c, 0x146, 0x128)` -> `` export of @babel/c`
// SOURCE-NEXT: From [15538, 15575): `_0x1ef47c(0x312, 0x2f0, 0x2f5, 0x2e6)` -> `ore is onl`
// SOURCE-NEXT: From [15458, 15575): `_0x1ef47c(0x2de, 0x2e2, 0x2ec, 0x2e6) + _0x18bf26(0x164, 0x14c, 0x146, 0x128) + _0x1ef47c(0x312, 0x2f0, 0x2f5, 0x2e6)` -> `` export of @babel/core is onl`
// SOURCE-NEXT: From [15458, 15585): `_0x1ef47c(0x2de, 0x2e2, 0x2ec, 0x2e6) + _0x18bf26(0x164, 0x14c, 0x146, 0x128) + _0x1ef47c(0x312, 0x2f0, 0x2f5, 0x2e6) + 'y\x20'` -> `` export of @babel/core is only `
// SOURCE-NEXT: From [15457, 15586): `(_0x1ef47c(0x2de, 0x2e2, 0x2ec, 0x2e6) + _0x18bf26(0x164, 0x14c, 0x146, 0x128) + _0x1ef47c(0x312, 0x2f0, 0x2f5, 0x2e6) + 'y\x20')` -> `` export of @babel/core is only `
// SOURCE-NEXT: From [15626, 15663): `_0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8)` -> `CommonJS v`
// SOURCE-NEXT: From [15602, 15663): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8)` -> ` from the CommonJS v`
// SOURCE-NEXT: From [15666, 15703): `_0x18bf26(0x152, 0x130, 0x147, 0x107)` -> `ersion aft`
// SOURCE-NEXT: From [15602, 15703): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107)` -> ` from the CommonJS version aft`
// SOURCE-NEXT: From [15706, 15743): `_0x18bf26(0x10e, 0x119, 0x11a, 0x11a)` -> `er that th`
// SOURCE-NEXT: From [15602, 15743): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107) + _0x18bf26(0x10e, 0x119, 0x11a, 0x11a)` -> ` from the CommonJS version after that th`
// SOURCE-NEXT: From [15746, 15781): `_0x18bf26(0x125, 0xfd, 0xed, 0x125)` -> `e ESM vers`
// SOURCE-NEXT: From [15602, 15781): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107) + _0x18bf26(0x10e, 0x119, 0x11a, 0x11a) + _0x18bf26(0x125, 0xfd, 0xed, 0x125)` -> ` from the CommonJS version after that the ESM vers`
// SOURCE-NEXT: From [15602, 15802): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107) + _0x18bf26(0x10e, 0x119, 0x11a, 0x11a) + _0x18bf26(0x125, 0xfd, 0xed, 0x125) + 'ion\x20is\x20loa'` -> ` from the CommonJS version after that the ESM version is loa`
// SOURCE-NEXT: From [15602, 15811): `'\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107) + _0x18bf26(0x10e, 0x119, 0x11a, 0x11a) + _0x18bf26(0x125, 0xfd, 0xed, 0x125) + 'ion\x20is\x20loa' + 'ded.'` -> ` from the CommonJS version after that the ESM version is loaded.`
// SOURCE-NEXT: From [15601, 15812): `('\x20from\x20the\x20' + _0x1ef47c(0x2d3, 0x2f4, 0x305, 0x2d8) + _0x18bf26(0x152, 0x130, 0x147, 0x107) + _0x18bf26(0x10e, 0x119, 0x11a, 0x11a) + _0x18bf26(0x125, 0xfd, 0xed, 0x125) + 'ion\x20is\x20loa' + 'ded.')` -> ` from the CommonJS version after that the ESM version is loaded.`
// SOURCE-NEXT: ================================================================
