// SOURCE:      console.log("raw");
// SOURCE-NEXT: let alias = prelude;
// SOURCE-NEXT: console.log("alias");
// SOURCE-NEXT: function wrapper(x) {
// SOURCE-NEXT:   return prelude(x);
// SOURCE-NEXT: }
// SOURCE-NEXT: console.log("wrapper");
// SOURCE-NEXT: let wrapper_alias = wrapper;
// SOURCE-NEXT: console.log("wrapper_alias");
// SOURCE-NEXT: function alias_wrapper(x) {
// SOURCE-NEXT:   return alias(x);
// SOURCE-NEXT: }
// SOURCE-NEXT: console.log("alias_wrapper");
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Prelude:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: function prelude(x) {
// SOURCE-NEXT:   return x;
// SOURCE-NEXT: }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Dataflow:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: jsir.file ({
// SOURCE-NEXT:   ^bb0:
// SOURCE-NEXT:       // <executable>
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT:     jsir.program {"script"} ({
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %0 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %0 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %1 = jsir.member_expression (%0) {#jsir<identifier   <L 7 C 8>, <L 7 C 11>, "log", 71, 74, 0, "log">}
// SOURCE-NEXT:           // %1 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %2 = jsir.identifier {"prelude"}
// SOURCE-NEXT:           // %2 = #jsir_builtin<builtin_function "prelude">
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %3 = jsir.string_literal {#jsir<string_literal_extra "'raw'", "raw">, "raw"}
// SOURCE-NEXT:           // %3 = "raw"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %4 = jsir.call_expression (%2, %3)
// SOURCE-NEXT:           // %4 = "raw"
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %5 = jsir.call_expression (%1, %4)
// SOURCE-NEXT:           // %5 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%5)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jsir.identifier_ref {"alias"}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %31 = jsir.identifier {"prelude"}
// SOURCE-NEXT:               // %31 = #jsir_builtin<builtin_function "prelude">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %32 = jsir.variable_declarator (%30, %31)
// SOURCE-NEXT:               // %32 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:             jsir.exprs_region_end (%32)
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %6 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %6 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %7 = jsir.member_expression (%6) {#jsir<identifier   <L 10 C 8>, <L 10 C 11>, "log", 122, 125, 0, "log">}
// SOURCE-NEXT:           // %7 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %8 = jsir.identifier {"alias"}
// SOURCE-NEXT:           // %8 = #jsir_builtin<builtin_function "prelude">
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %9 = jsir.string_literal {#jsir<string_literal_extra "'alias'", "alias">, "alias"}
// SOURCE-NEXT:           // %9 = "alias"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %10 = jsir.call_expression (%8, %9)
// SOURCE-NEXT:           // %10 = "alias"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %11 = jsir.call_expression (%7, %10)
// SOURCE-NEXT:           // %11 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         jsir.expression_statement (%11)
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 12 C 9>, <L 12 C 16>, "wrapper", 153, 160, 2, "wrapper">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jsir.identifier_ref {"x"}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%30)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %31 = jsir.identifier {"prelude"}
// SOURCE-NEXT:               // %31 = #jsir_builtin<builtin_function "prelude">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %32 = jsir.identifier {"x"}
// SOURCE-NEXT:               // %32 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %33 = jsir.call_expression (%31, %32)
// SOURCE-NEXT:               // %33 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%33)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %12 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %12 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %13 = jsir.member_expression (%12) {#jsir<identifier   <L 15 C 8>, <L 15 C 11>, "log", 197, 200, 0, "log">}
// SOURCE-NEXT:           // %13 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %14 = jsir.identifier {"wrapper"}
// SOURCE-NEXT:           // %14 = #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %15 = jsir.string_literal {#jsir<string_literal_extra "'wrapper'", "wrapper">, "wrapper"}
// SOURCE-NEXT:           // %15 = "wrapper"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %16 = jsir.call_expression (%14, %15)
// SOURCE-NEXT:           // %16 = "wrapper"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         %17 = jsir.call_expression (%13, %16)
// SOURCE-NEXT:           // %17 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         jsir.expression_statement (%17)
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:         jsir.variable_declaration {"let"} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:             %30 = jsir.identifier_ref {"wrapper_alias"}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:             %31 = jsir.identifier {"wrapper"}
// SOURCE-NEXT:               // %31 = #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> }
// SOURCE-NEXT:             %32 = jsir.variable_declarator (%30, %31)
// SOURCE-NEXT:               // %32 = <uninitialized>
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:             jsir.exprs_region_end (%32)
// SOURCE-NEXT:               // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %18 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %18 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %19 = jsir.member_expression (%18) {#jsir<identifier   <L 18 C 8>, <L 18 C 11>, "log", 260, 263, 0, "log">}
// SOURCE-NEXT:           // %19 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %20 = jsir.identifier {"wrapper_alias"}
// SOURCE-NEXT:           // %20 = #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %21 = jsir.string_literal {#jsir<string_literal_extra "'wrapper_alias'", "wrapper_alias">, "wrapper_alias"}
// SOURCE-NEXT:           // %21 = "wrapper_alias"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %22 = jsir.call_expression (%20, %21)
// SOURCE-NEXT:           // %22 = "wrapper_alias"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %23 = jsir.call_expression (%19, %22)
// SOURCE-NEXT:           // %23 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         jsir.expression_statement (%23)
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 20 C 9>, <L 20 C 22>, "alias_wrapper", 307, 320, 3, "alias_wrapper">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jsir.identifier_ref {"x"}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end (%30)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %30 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %30 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %31 = jsir.identifier {"alias"}
// SOURCE-NEXT:               // %31 = #jsir_builtin<builtin_function "prelude">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %32 = jsir.identifier {"x"}
// SOURCE-NEXT:               // %32 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %33 = jsir.call_expression (%31, %32)
// SOURCE-NEXT:               // %33 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.return_statement (%33)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%30) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %24 = jsir.identifier {"console"}
// SOURCE-NEXT:           // %24 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %25 = jsir.member_expression (%24) {#jsir<identifier   <L 23 C 8>, <L 23 C 11>, "log", 355, 358, 0, "log">}
// SOURCE-NEXT:           // %25 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %26 = jsir.identifier {"alias_wrapper"}
// SOURCE-NEXT:           // %26 = #jsir_builtin<inline_expression_function  "x", 3, #jsir_builtin<inline_expression_call #jsir<symbol_id "alias", 0>, #jsir<symbol_id "x", 3>>>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %27 = jsir.string_literal {#jsir<string_literal_extra "'alias_wrapper'", "alias_wrapper">, "alias_wrapper"}
// SOURCE-NEXT:           // %27 = "alias_wrapper"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %28 = jsir.call_expression (%26, %27)
// SOURCE-NEXT:           // %28 = "alias_wrapper"
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         %29 = jsir.call_expression (%25, %28)
// SOURCE-NEXT:           // %29 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:         jsir.expression_statement (%29)
// SOURCE-NEXT:           // State [default = <unknown>] { <alias#0 : #jsir_builtin<builtin_function "prelude">> <wrapper_alias#0 : #jsir_builtin<inline_expression_function  "x", 2, #jsir_builtin<inline_expression_call #jsir<symbol_id "prelude", 0>, #jsir<symbol_id "x", 2>>>> }
// SOURCE-NEXT:     }, {
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     })
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT: })
// SOURCE-NEXT:   // State [default = <uninitialized>] { }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Bindings:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: alias#0:
// SOURCE-NEXT:     prelude#0
// SOURCE-NEXT: alias_wrapper#0:
// SOURCE-NEXT:     (x#3) => { alias#0(x#3) }
// SOURCE-NEXT: wrapper#0:
// SOURCE-NEXT:     (x#2) => { prelude#0(x#2) }
// SOURCE-NEXT: wrapper_alias#0:
// SOURCE-NEXT:     wrapper#0
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Computed constants:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: From [75, 89): `prelude('raw')` -> `raw`
// SOURCE-NEXT: From [126, 140): `alias('alias')` -> `alias`
// SOURCE-NEXT: From [201, 219): `wrapper('wrapper')` -> `wrapper`
// SOURCE-NEXT: From [264, 294): `wrapper_alias('wrapper_alias')` -> `wrapper_alias`
// SOURCE-NEXT: From [359, 389): `alias_wrapper('alias_wrapper')` -> `alias_wrapper`
// SOURCE-NEXT: ================================================================
