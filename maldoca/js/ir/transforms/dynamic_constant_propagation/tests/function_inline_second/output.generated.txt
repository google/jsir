// SOURCE:      function hi() {
// SOURCE-NEXT:   var _0x24a11a = {
// SOURCE-NEXT:     'cmIIa': function (_0x4d887e, _0x258647) {
// SOURCE-NEXT:       return _0x4d887e === _0x258647;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'rvTTb': "LtmRg",
// SOURCE-NEXT:     'BLRju': function (_0x32f73d, _0x51021c) {
// SOURCE-NEXT:       return _0x32f73d === _0x51021c;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'INEBZ': "snjPo",
// SOURCE-NEXT:     'gCfqE': "Nngrv",
// SOURCE-NEXT:     'ZUNtd': "2|0|4|3|1",
// SOURCE-NEXT:     'soDZs': function (_0x38801d, _0xf075cb) {
// SOURCE-NEXT:       return _0x38801d(_0xf075cb);
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'NieDC': function (_0x320e85, _0x58fb4d) {
// SOURCE-NEXT:       return _0x320e85 + _0x58fb4d;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'yEDez': "return (function() ",
// SOURCE-NEXT:     'ZEmIi': "{}.constructor(\"return this\")( )",
// SOURCE-NEXT:     'jXOCo': function (_0x482b82, _0x2bafd9) {
// SOURCE-NEXT:       return _0x482b82 < _0x2bafd9;
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'GyCwQ': "3|0|2|4|5|1",
// SOURCE-NEXT:     'Fmzmy': "log",
// SOURCE-NEXT:     'bDDQL': "warn",
// SOURCE-NEXT:     'wkULH': "info",
// SOURCE-NEXT:     'Wftmu': "error",
// SOURCE-NEXT:     'gXlVo': "exception",
// SOURCE-NEXT:     'DRyXW': "table",
// SOURCE-NEXT:     'fPEpB': function (_0x4d07dc) {
// SOURCE-NEXT:       return _0x4d07dc();
// SOURCE-NEXT:     },
// SOURCE-NEXT:     'Xxejz': "Hello World!"
// SOURCE-NEXT:   };
// SOURCE-NEXT:   function _0x3e158c(_0x3bd438, _0x53f095, _0x2b1b5d, _0x1150ec) {
// SOURCE-NEXT:     return _0x107c(_0x1150ec - -343, _0x2b1b5d);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   var _0x58a38a = (function () {
// SOURCE-NEXT:     var _0x10bab4 = !![];
// SOURCE-NEXT:     return function (_0x1008f4, _0x4f3fc0) {
// SOURCE-NEXT:       function _0x4184b2(_0x22e15e, _0x5174c3, _0x1241d4, _0x8ab890) {
// SOURCE-NEXT:         return _0x107c(_0x8ab890 - 283, _0x5174c3);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       function _0x167d7e(_0x3c0256, _0x2b47e1, _0x4957e3, _0x3b662d) {
// SOURCE-NEXT:         return _0x107c(_0x4957e3 - 491, _0x3c0256);
// SOURCE-NEXT:       }
// SOURCE-NEXT:       if (false) {
// SOURCE-NEXT:         var _0x5b6c55 = _0x3f313a ? function () {
// SOURCE-NEXT:           function _0x552a36(_0x5b91b5, _0x5a4c29, _0x102518, _0x1d60e6) {
// SOURCE-NEXT:             return _0x4184b2(_0x5b91b5 - 273, _0x5a4c29, _0x102518 - 81, _0x102518 - -946);
// SOURCE-NEXT:           }
// SOURCE-NEXT:           if (_0x330f38) {
// SOURCE-NEXT:             var _0x62708b = _0x293663["apply"](_0x408f4b, arguments);
// SOURCE-NEXT:             return _0x3b8fa6 = null, _0x62708b;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function () {};
// SOURCE-NEXT:         return _0x5ac793 = ![], _0x5b6c55;
// SOURCE-NEXT:       } else {
// SOURCE-NEXT:         var _0x46af11 = _0x10bab4 ? function () {
// SOURCE-NEXT:           if (_0x4f3fc0) {
// SOURCE-NEXT:             var _0x5b3fd6 = _0x4f3fc0["apply"](_0x1008f4, arguments);
// SOURCE-NEXT:             return _0x4f3fc0 = null, _0x5b3fd6;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function () {};
// SOURCE-NEXT:         return _0x10bab4 = ![], _0x46af11;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     };
// SOURCE-NEXT:   }());
// SOURCE-NEXT:   function _0x5fb062(_0x1176c2, _0x37fd7c, _0x5718e5, _0x3d07ce) {
// SOURCE-NEXT:     return _0x107c(_0x1176c2 - -122, _0x37fd7c);
// SOURCE-NEXT:   }
// SOURCE-NEXT:   var _0x5a5e61 = _0x58a38a(this, function () {
// SOURCE-NEXT:     function _0x9092eb(_0x4068cb, _0x4ee7f0, _0x2d9ed5, _0x497bbc) {
// SOURCE-NEXT:       return _0x5fb062(_0x497bbc - 457, _0x4ee7f0, _0x2d9ed5 - 369, _0x497bbc - 84);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     function _0x620196(_0x425af0, _0x2a4dc9, _0x4f88d8, _0x5d56ca) {
// SOURCE-NEXT:       return _0x3e158c(_0x425af0 - 88, _0x2a4dc9 - 394, _0x2a4dc9, _0x5d56ca - 446);
// SOURCE-NEXT:     }
// SOURCE-NEXT:     if (false) {
// SOURCE-NEXT:       var _0x2abedf = '5|2|1|4|3|0'['split']('|'),
// SOURCE-NEXT:         _0x53335d = 0;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x2abedf[_0x53335d++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             _0x233f7c[_0x25cc23] = _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             var _0x527da8 = _0x4f1603[_0x25cc23] || _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x25cc23 = _0x4e0893[_0x3ab0e9];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             _0x185f9c['toString'] = _0x527da8['toString']['bind'](_0x527da8);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             _0x185f9c['__proto__'] = _0x486a8b['bind'](_0x67a5a1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case '5':
// SOURCE-NEXT:             var _0x185f9c = _0x4b92d5['constructor']['prototype']['bind'](_0x5026e1);
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     } else {
// SOURCE-NEXT:       var _0x1999fe = "2|0|4|3|1"["split"]("|"),
// SOURCE-NEXT:         _0x50c043 = 0;
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x1999fe[_0x50c043++]) {
// SOURCE-NEXT:           case "0":
// SOURCE-NEXT:             try {
// SOURCE-NEXT:               var _0xc6ad63 = Function("return (function() {}.constructor(\"return this\")( ));");
// SOURCE-NEXT:               _0x2ed7aa = _0xc6ad63();
// SOURCE-NEXT:             } catch (_0x455513) {
// SOURCE-NEXT:               _0x2ed7aa = window;
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "1":
// SOURCE-NEXT:             for (var _0x4a8534 = 0; _0x24a11a["jXOCo"](0, _0x27bc28["length"]); _0x4a8534++) {
// SOURCE-NEXT:               var _0x20167d = "3|0|2|4|5|1"["split"]("|"),
// SOURCE-NEXT:                 _0x92b385 = 0;
// SOURCE-NEXT:               while (!![]) {
// SOURCE-NEXT:                 switch (_0x20167d[_0x92b385++]) {
// SOURCE-NEXT:                   case "0":
// SOURCE-NEXT:                     var _0x5154ca = _0x27bc28[0];
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "1":
// SOURCE-NEXT:                     _0x223732[_0x5154ca] = _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "2":
// SOURCE-NEXT:                     var _0x3bb083 = _0x223732[_0x5154ca] || _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "3":
// SOURCE-NEXT:                     var _0x3a6f48 = _0x58a38a["constructor"]["prototype"]["bind"](_0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "4":
// SOURCE-NEXT:                     _0x3a6f48["__proto__"] = _0x58a38a["bind"](_0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                   case "5":
// SOURCE-NEXT:                     _0x3a6f48["toString"] = _0x3bb083["toString"]["bind"](_0x3bb083);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                 }
// SOURCE-NEXT:                 break;
// SOURCE-NEXT:               }
// SOURCE-NEXT:             }
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "2":
// SOURCE-NEXT:             var _0x2ed7aa;
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "3":
// SOURCE-NEXT:             var _0x27bc28 = ["log", "warn", "info", "error", "exception", "table", "trace"];
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:           case "4":
// SOURCE-NEXT:             var _0x223732 = _0x2ed7aa["console"] = _0x2ed7aa["console"] || {};
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     }
// SOURCE-NEXT:   });
// SOURCE-NEXT:   _0x5a5e61(), console["log"]("Hello World!");
// SOURCE-NEXT: }
// SOURCE-NEXT: hi();
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Prelude:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: function _0x55b1() {
// SOURCE-NEXT:   var _0x42f1e1 = [
// SOURCE-NEXT:     'zLbfCei',
// SOURCE-NEXT:     'C29ewNm',
// SOURCE-NEXT:     'wLvoDgq',
// SOURCE-NEXT:     'tM5NCNy',
// SOURCE-NEXT:     'EuvezxO',
// SOURCE-NEXT:     'C25Qug8',
// SOURCE-NEXT:     'D2fYBG',
// SOURCE-NEXT:     'DgfIBgu',
// SOURCE-NEXT:     'v2z0Bxu',
// SOURCE-NEXT:     'm29kr0f4BW',
// SOURCE-NEXT:     'ndu0mdG5m3r2Bw1yDa',
// SOURCE-NEXT:     'vM15vNa',
// SOURCE-NEXT:     'E30Uy29UC3rYDq',
// SOURCE-NEXT:     'mZziBMj0Ee8',
// SOURCE-NEXT:     'mJa0nJGYntbkvfrZAeW',
// SOURCE-NEXT:     'odyYwgvNsKLK',
// SOURCE-NEXT:     'x19WCM90B19F',
// SOURCE-NEXT:     'nJK3nZuZmgvqwgnTAW',
// SOURCE-NEXT:     'CM4GDgHPCYiPka',
// SOURCE-NEXT:     'zxjYB3i',
// SOURCE-NEXT:     'thrTuMC',
// SOURCE-NEXT:     'yxbWBhK',
// SOURCE-NEXT:     'ntiWogXKuvzzDa',
// SOURCE-NEXT:     'whHLANO',
// SOURCE-NEXT:     'zxHJzxb0Aw9U',
// SOURCE-NEXT:     'y29UC3rYDwn0BW',
// SOURCE-NEXT:     'z0nMCuu',
// SOURCE-NEXT:     'mNWWFdr8m3WX',
// SOURCE-NEXT:     'y3rVCIGICMv0Dq',
// SOURCE-NEXT:     'Bg9N',
// SOURCE-NEXT:     'm3WWFdj8nhW1Fa',
// SOURCE-NEXT:     'rM16BxK',
// SOURCE-NEXT:     'C3bSAxq',
// SOURCE-NEXT:     'nZG1sxj0r052',
// SOURCE-NEXT:     'z1HSvM8',
// SOURCE-NEXT:     'tMLLrem',
// SOURCE-NEXT:     'yMLUza',
// SOURCE-NEXT:     'D2TvteG',
// SOURCE-NEXT:     'CNzuvgi',
// SOURCE-NEXT:     'BgvUz3rO',
// SOURCE-NEXT:     'mZmXnZK1EujdBhvf',
// SOURCE-NEXT:     'mtm3mtz5CvfsyvC',
// SOURCE-NEXT:     'ChjVDg90ExbL',
// SOURCE-NEXT:     'Aw5MBW',
// SOURCE-NEXT:     'sgvSBg8Gv29YBa',
// SOURCE-NEXT:     'BMn0Aw9UkcKG',
// SOURCE-NEXT:     'yKreuuW',
// SOURCE-NEXT:     'DhjHy2u',
// SOURCE-NEXT:     'Dg9tDhjPBMC',
// SOURCE-NEXT:     'wKvTswK',
// SOURCE-NEXT:     'ALHpq28',
// SOURCE-NEXT:     'mte1nJCYnfvoyNDhsG',
// SOURCE-NEXT:     'y29UC29Szq'
// SOURCE-NEXT:   ];
// SOURCE-NEXT:   _0x55b1 = function() {
// SOURCE-NEXT:     return _0x42f1e1;
// SOURCE-NEXT:   };
// SOURCE-NEXT:   return _0x55b1();
// SOURCE-NEXT: }
// SOURCE-NEXT: function _0x107c(_0xb34c16, _0x5a0566) {
// SOURCE-NEXT:   var _0x10b1ac = _0x55b1();
// SOURCE-NEXT:   return _0x107c = function(_0x204f0a, _0x401549) {
// SOURCE-NEXT:     _0x204f0a = _0x204f0a - (0xf88 + -0x1a73 + -0x1 * -0xc6b);
// SOURCE-NEXT:     var _0x4ed5b7 = _0x10b1ac[_0x204f0a];
// SOURCE-NEXT:     if (_0x107c['xUWrKl'] === undefined) {
// SOURCE-NEXT:       var _0x1b40cf = function(_0x4e0893) {
// SOURCE-NEXT:         var _0x3ab0e9 =
// SOURCE-NEXT:             'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';
// SOURCE-NEXT:         var _0x4f1603 = '', _0x486a8b = '';
// SOURCE-NEXT:         for (var _0x67a5a1 = 0x1f23 + 0x1 * -0x1990 + 0x593 * -0x1, _0x233f7c,
// SOURCE-NEXT:                  _0x3b178e, _0x4e8da3 = 0xe36 + 0x2f * 0x31 + -0x1735;
// SOURCE-NEXT:              _0x3b178e = _0x4e0893['charAt'](_0x4e8da3++); ~_0x3b178e &&
// SOURCE-NEXT:                      (_0x233f7c = _0x67a5a1 %
// SOURCE-NEXT:                               (0x1ca * -0x5 + 0x10f * 0xc + 0x1 * -0x3be) ?
// SOURCE-NEXT:                           _0x233f7c *
// SOURCE-NEXT:                                   (-0x6 * 0x5d7 + 0x1 * -0x7ae + 0x55f * 0x8) +
// SOURCE-NEXT:                               _0x3b178e :
// SOURCE-NEXT:                           _0x3b178e,
// SOURCE-NEXT:                      _0x67a5a1++ % (-0x1f26 + 0x2 * 0xf04 + 0x122)) ?
// SOURCE-NEXT:                  _0x4f1603 += String['fromCharCode'](
// SOURCE-NEXT:                      -0x10b5 * 0x2 + 0x1f71 + 0x2f8 &
// SOURCE-NEXT:                      _0x233f7c >>
// SOURCE-NEXT:                          (-(-0x9e * -0x2 + -0x509 + 0x3cf) * _0x67a5a1 &
// SOURCE-NEXT:                           -0x27f * -0x9 + 0x6d * 0x7 + -0x196c)) :
// SOURCE-NEXT:                  -0x11fa + 0x1003 + 0x1f7 * 0x1) {
// SOURCE-NEXT:           _0x3b178e = _0x3ab0e9['indexOf'](_0x3b178e);
// SOURCE-NEXT:         }
// SOURCE-NEXT:         for (var _0x1778e4 = 0x477 + 0x9d5 + -0xe4c,
// SOURCE-NEXT:                  _0x560bb9 = _0x4f1603['length'];
// SOURCE-NEXT:              _0x1778e4 < _0x560bb9; _0x1778e4++) {
// SOURCE-NEXT:           _0x486a8b += '%' +
// SOURCE-NEXT:               ('00' +
// SOURCE-NEXT:                _0x4f1603['charCodeAt'](_0x1778e4)['toString'](
// SOURCE-NEXT:                    -0x130c + 0x1b94 + -0x878))['slice'](
// SOURCE-NEXT:                            -(-0x2 * 0x3fd + -0x12a0 + -0x34 * -0x83));
// SOURCE-NEXT:         }
// SOURCE-NEXT:         return decodeURIComponent(_0x486a8b);
// SOURCE-NEXT:       };
// SOURCE-NEXT:       _0x107c['rmDTmt'] = _0x1b40cf, _0xb34c16 = arguments,
// SOURCE-NEXT:       _0x107c['xUWrKl'] = !![];
// SOURCE-NEXT:     }
// SOURCE-NEXT:     var _0x4cbb54 = _0x10b1ac[-0xa * 0x231 + -0x8 * 0xf6 + -0x4ef * -0x6],
// SOURCE-NEXT:         _0x4b92d5 = _0x204f0a + _0x4cbb54, _0x5026e1 = _0xb34c16[_0x4b92d5];
// SOURCE-NEXT:     return !_0x5026e1 ? (_0x4ed5b7 = _0x107c['rmDTmt'](_0x4ed5b7),
// SOURCE-NEXT:                          _0xb34c16[_0x4b92d5] = _0x4ed5b7) :
// SOURCE-NEXT:                         _0x4ed5b7 = _0x5026e1,
// SOURCE-NEXT:                         _0x4ed5b7;
// SOURCE-NEXT:   }, _0x107c(_0xb34c16, _0x5a0566);
// SOURCE-NEXT: }
// SOURCE-NEXT: (function(_0x5b9586, _0x57cd49) {
// SOURCE-NEXT: var _0x5677d9 = _0x5b9586();
// SOURCE-NEXT: function _0xdb2cac(_0x5f34a9, _0x176ce0, _0x43e000, _0x7823af) {
// SOURCE-NEXT:   return _0x107c(_0x7823af - -0x374, _0x5f34a9);
// SOURCE-NEXT: }
// SOURCE-NEXT: function _0x25bda2(_0x2c9fa7, _0x17862b, _0x457726, _0x52c9a8) {
// SOURCE-NEXT:   return _0x107c(_0x17862b - -0x32, _0x457726);
// SOURCE-NEXT: }
// SOURCE-NEXT: while (!![]) {
// SOURCE-NEXT:   try {
// SOURCE-NEXT:     var _0x462c32 = parseInt(_0x25bda2(0x175, 0x178, 0x16b, 0x16c)) /
// SOURCE-NEXT:             (0x7 * -0x251 + -0xb93 * 0x1 + 0x1bcb) *
// SOURCE-NEXT:             (parseInt(_0xdb2cac(-0x1d9, -0x1f0, -0x1d5, -0x1dc)) /
// SOURCE-NEXT:              (-0x1 * 0x108f + -0xa * 0x10 + -0x3 * -0x5bb)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x174, 0x160, 0x146, 0x151)) /
// SOURCE-NEXT:             (0x17ba + 0x25b5 + -0x2 * 0x1eb6) *
// SOURCE-NEXT:             (-parseInt(_0xdb2cac(-0x1df, -0x1fe, -0x1ea, -0x1ed)) /
// SOURCE-NEXT:              (-0x43a + -0x193f + 0x1d7d)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x199, 0x17f, 0x182, 0x176)) /
// SOURCE-NEXT:             (0x2044 + 0x963 + 0x1 * -0x29a2) *
// SOURCE-NEXT:             (-parseInt(_0x25bda2(0x16c, 0x164, 0x15d, 0x175)) /
// SOURCE-NEXT:              (0x26f1 * 0x1 + -0x1b08 + 0x11 * -0xb3)) +
// SOURCE-NEXT:         -parseInt(_0xdb2cac(-0x1dc, -0x1dd, -0x1eb, -0x1e1)) /
// SOURCE-NEXT:             (-0x10 * -0xfb + -0x43 * 0x8d + -0x2 * -0xa9f) +
// SOURCE-NEXT:         -parseInt(_0xdb2cac(-0x1ef, -0x1e9, -0x1e1, -0x1d5)) /
// SOURCE-NEXT:             (0x4b2 * 0x8 + 0x3 * -0xba7 + 0x1 * -0x293) *
// SOURCE-NEXT:             (parseInt(_0x25bda2(0x167, 0x180, 0x174, 0x193)) /
// SOURCE-NEXT:              (-0x13d5 * -0x1 + 0x3 * -0xb22 + 0x2 * 0x6cd)) +
// SOURCE-NEXT:         -parseInt(_0x25bda2(0x16f, 0x168, 0x153, 0x156)) /
// SOURCE-NEXT:             (0x1 * -0x35b + -0xc94 + 0xff9) +
// SOURCE-NEXT:         parseInt(_0x25bda2(0x15c, 0x165, 0x17d, 0x163)) /
// SOURCE-NEXT:             (0xf5a + -0x2241 + 0x12f2);
// SOURCE-NEXT:     if (_0x462c32 === _0x57cd49)
// SOURCE-NEXT:       break;
// SOURCE-NEXT:     else
// SOURCE-NEXT:       _0x5677d9['push'](_0x5677d9['shift']());
// SOURCE-NEXT:   } catch (_0x23c6b4) {
// SOURCE-NEXT:     _0x5677d9['push'](_0x5677d9['shift']());
// SOURCE-NEXT:   }
// SOURCE-NEXT: }
// SOURCE-NEXT: }(_0x55b1, 0x9d * 0xa6d + -0x3fc67 + 0x5f392));
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Dataflow:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: jsir.file ({
// SOURCE-NEXT:   ^bb0:
// SOURCE-NEXT:       // <executable>
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT:     jsir.program {"script"} ({
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.function_declaration {false, false, #jsir<identifier   <L 156 C 9>, <L 156 C 11>, "hi", 5349, 5351, 18, "hi">} ({
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.exprs_region_end
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         }, {
// SOURCE-NEXT:           ^bb0:
// SOURCE-NEXT:               // <executable>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %2 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:               // %2 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %549 = jsir.identifier_ref {"_0x24a11a"}
// SOURCE-NEXT:                   // %549 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %550 = jsir.object_expression ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %552 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %624 = jsir.identifier_ref {"_0x4d887e"}
// SOURCE-NEXT:                           // %624 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %625 = jsir.identifier_ref {"_0x258647"}
// SOURCE-NEXT:                           // %625 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%624, %625)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %620 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %620 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%620) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%620) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %621 = jsir.identifier {"_0x4d887e"}
// SOURCE-NEXT:                           // %621 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %622 = jsir.identifier {"_0x258647"}
// SOURCE-NEXT:                           // %622 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %623 = jsir.binary_expression (%621, %622) {"==="}
// SOURCE-NEXT:                           // %623 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%623)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%620) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %552 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %553 = jsir.object_property (%552) {#jsir<string_literal   <L 158 C 4>, <L 158 C 11>, 5380, 5387, 18, "cmIIa",  "'cmIIa'", "cmIIa">, false}
// SOURCE-NEXT:                       // %553 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %554 = jsir.string_literal {#jsir<string_literal_extra "'LtmRg'", "LtmRg">, "LtmRg"}
// SOURCE-NEXT:                       // %554 = "LtmRg"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %555 = jsir.object_property (%554) {#jsir<string_literal   <L 161 C 4>, <L 161 C 11>, 5471, 5478, 18, "rvTTb",  "'rvTTb'", "rvTTb">, false}
// SOURCE-NEXT:                       // %555 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %556 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %618 = jsir.identifier_ref {"_0x32f73d"}
// SOURCE-NEXT:                           // %618 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %619 = jsir.identifier_ref {"_0x51021c"}
// SOURCE-NEXT:                           // %619 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%618, %619)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %614 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %614 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%614) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%614) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %615 = jsir.identifier {"_0x32f73d"}
// SOURCE-NEXT:                           // %615 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %616 = jsir.identifier {"_0x51021c"}
// SOURCE-NEXT:                           // %616 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %617 = jsir.binary_expression (%615, %616) {"==="}
// SOURCE-NEXT:                           // %617 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%617)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%614) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %556 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %557 = jsir.object_property (%556) {#jsir<string_literal   <L 162 C 4>, <L 162 C 11>, 5493, 5500, 18, "BLRju",  "'BLRju'", "BLRju">, false}
// SOURCE-NEXT:                       // %557 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %558 = jsir.string_literal {#jsir<string_literal_extra "'snjPo'", "snjPo">, "snjPo"}
// SOURCE-NEXT:                       // %558 = "snjPo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %559 = jsir.object_property (%558) {#jsir<string_literal   <L 165 C 4>, <L 165 C 11>, 5584, 5591, 18, "INEBZ",  "'INEBZ'", "INEBZ">, false}
// SOURCE-NEXT:                       // %559 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %560 = jsir.string_literal {#jsir<string_literal_extra "'Nngrv'", "Nngrv">, "Nngrv"}
// SOURCE-NEXT:                       // %560 = "Nngrv"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %561 = jsir.object_property (%560) {#jsir<string_literal   <L 166 C 4>, <L 166 C 11>, 5606, 5613, 18, "gCfqE",  "'gCfqE'", "gCfqE">, false}
// SOURCE-NEXT:                       // %561 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %562 = jsir.string_literal {#jsir<string_literal_extra "'2|0|4|3|1'", "2|0|4|3|1">, "2|0|4|3|1"}
// SOURCE-NEXT:                       // %562 = "2|0|4|3|1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %563 = jsir.object_property (%562) {#jsir<string_literal   <L 167 C 4>, <L 167 C 11>, 5628, 5635, 18, "ZUNtd",  "'ZUNtd'", "ZUNtd">, false}
// SOURCE-NEXT:                       // %563 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %564 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %612 = jsir.identifier_ref {"_0x38801d"}
// SOURCE-NEXT:                           // %612 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %613 = jsir.identifier_ref {"_0xf075cb"}
// SOURCE-NEXT:                           // %613 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%612, %613)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %608 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %608 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%608) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%608) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %609 = jsir.identifier {"_0x38801d"}
// SOURCE-NEXT:                           // %609 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %610 = jsir.identifier {"_0xf075cb"}
// SOURCE-NEXT:                           // %610 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %611 = jsir.call_expression (%609, %610)
// SOURCE-NEXT:                           // %611 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%611)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%608) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %564 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %565 = jsir.object_property (%564) {#jsir<string_literal   <L 168 C 4>, <L 168 C 11>, 5654, 5661, 18, "soDZs",  "'soDZs'", "soDZs">, false}
// SOURCE-NEXT:                       // %565 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %566 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %606 = jsir.identifier_ref {"_0x320e85"}
// SOURCE-NEXT:                           // %606 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %607 = jsir.identifier_ref {"_0x58fb4d"}
// SOURCE-NEXT:                           // %607 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%606, %607)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %602 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %602 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%602) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%602) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %603 = jsir.identifier {"_0x320e85"}
// SOURCE-NEXT:                           // %603 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %604 = jsir.identifier {"_0x58fb4d"}
// SOURCE-NEXT:                           // %604 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %605 = jsir.binary_expression (%603, %604) {"+"}
// SOURCE-NEXT:                           // %605 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%605)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%602) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %566 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %567 = jsir.object_property (%566) {#jsir<string_literal   <L 171 C 4>, <L 171 C 11>, 5742, 5749, 18, "NieDC",  "'NieDC'", "NieDC">, false}
// SOURCE-NEXT:                       // %567 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %568 = jsir.string_literal {#jsir<string_literal_extra "'return (function() '", "return (function() ">, "return (function() "}
// SOURCE-NEXT:                       // %568 = "return (function() "
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %569 = jsir.object_property (%568) {#jsir<string_literal   <L 174 C 4>, <L 174 C 11>, 5831, 5838, 18, "yEDez",  "'yEDez'", "yEDez">, false}
// SOURCE-NEXT:                       // %569 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %570 = jsir.string_literal {#jsir<string_literal_extra "'{}.constructor(\22return this\22)( )'", "{}.constructor(\22return this\22)( )">, "{}.constructor(\22return this\22)( )"}
// SOURCE-NEXT:                       // %570 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %571 = jsir.object_property (%570) {#jsir<string_literal   <L 175 C 4>, <L 175 C 11>, 5867, 5874, 18, "ZEmIi",  "'ZEmIi'", "ZEmIi">, false}
// SOURCE-NEXT:                       // %571 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %572 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %600 = jsir.identifier_ref {"_0x482b82"}
// SOURCE-NEXT:                           // %600 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %601 = jsir.identifier_ref {"_0x2bafd9"}
// SOURCE-NEXT:                           // %601 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%600, %601)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %596 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %596 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %597 = jsir.identifier {"_0x482b82"}
// SOURCE-NEXT:                           // %597 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %598 = jsir.identifier {"_0x2bafd9"}
// SOURCE-NEXT:                           // %598 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %599 = jsir.binary_expression (%597, %598) {"<"}
// SOURCE-NEXT:                           // %599 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%599)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%596) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %572 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %573 = jsir.object_property (%572) {#jsir<string_literal   <L 176 C 4>, <L 176 C 11>, 5916, 5923, 18, "jXOCo",  "'jXOCo'", "jXOCo">, false}
// SOURCE-NEXT:                       // %573 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %574 = jsir.string_literal {#jsir<string_literal_extra "'3|0|2|4|5|1'", "3|0|2|4|5|1">, "3|0|2|4|5|1"}
// SOURCE-NEXT:                       // %574 = "3|0|2|4|5|1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %575 = jsir.object_property (%574) {#jsir<string_literal   <L 179 C 4>, <L 179 C 11>, 6005, 6012, 18, "GyCwQ",  "'GyCwQ'", "GyCwQ">, false}
// SOURCE-NEXT:                       // %575 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %576 = jsir.string_literal {#jsir<string_literal_extra "'log'", "log">, "log"}
// SOURCE-NEXT:                       // %576 = "log"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %577 = jsir.object_property (%576) {#jsir<string_literal   <L 180 C 4>, <L 180 C 11>, 6033, 6040, 18, "Fmzmy",  "'Fmzmy'", "Fmzmy">, false}
// SOURCE-NEXT:                       // %577 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %578 = jsir.string_literal {#jsir<string_literal_extra "'warn'", "warn">, "warn"}
// SOURCE-NEXT:                       // %578 = "warn"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %579 = jsir.object_property (%578) {#jsir<string_literal   <L 181 C 4>, <L 181 C 11>, 6053, 6060, 18, "bDDQL",  "'bDDQL'", "bDDQL">, false}
// SOURCE-NEXT:                       // %579 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %580 = jsir.string_literal {#jsir<string_literal_extra "'info'", "info">, "info"}
// SOURCE-NEXT:                       // %580 = "info"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %581 = jsir.object_property (%580) {#jsir<string_literal   <L 182 C 4>, <L 182 C 11>, 6074, 6081, 18, "wkULH",  "'wkULH'", "wkULH">, false}
// SOURCE-NEXT:                       // %581 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %582 = jsir.string_literal {#jsir<string_literal_extra "'error'", "error">, "error"}
// SOURCE-NEXT:                       // %582 = "error"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %583 = jsir.object_property (%582) {#jsir<string_literal   <L 183 C 4>, <L 183 C 11>, 6095, 6102, 18, "Wftmu",  "'Wftmu'", "Wftmu">, false}
// SOURCE-NEXT:                       // %583 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %584 = jsir.string_literal {#jsir<string_literal_extra "'exception'", "exception">, "exception"}
// SOURCE-NEXT:                       // %584 = "exception"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %585 = jsir.object_property (%584) {#jsir<string_literal   <L 184 C 4>, <L 184 C 11>, 6117, 6124, 18, "gXlVo",  "'gXlVo'", "gXlVo">, false}
// SOURCE-NEXT:                       // %585 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %586 = jsir.string_literal {#jsir<string_literal_extra "'table'", "table">, "table"}
// SOURCE-NEXT:                       // %586 = "table"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %587 = jsir.object_property (%586) {#jsir<string_literal   <L 185 C 4>, <L 185 C 11>, 6143, 6150, 18, "DRyXW",  "'DRyXW'", "DRyXW">, false}
// SOURCE-NEXT:                       // %587 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %588 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %595 = jsir.identifier_ref {"_0x4d07dc"}
// SOURCE-NEXT:                           // %595 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%595)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %592 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %592 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%592) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%592) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %593 = jsir.identifier {"_0x4d07dc"}
// SOURCE-NEXT:                           // %593 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %594 = jsir.call_expression (%593)
// SOURCE-NEXT:                           // %594 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%594)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%592) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %588 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %589 = jsir.object_property (%588) {#jsir<string_literal   <L 186 C 4>, <L 186 C 11>, 6165, 6172, 18, "fPEpB",  "'fPEpB'", "fPEpB">, false}
// SOURCE-NEXT:                       // %589 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %590 = jsir.string_literal {#jsir<string_literal_extra "'Hello World!'", "Hello World!">, "Hello World!"}
// SOURCE-NEXT:                       // %590 = "Hello World!"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %591 = jsir.object_property (%590) {#jsir<string_literal   <L 189 C 4>, <L 189 C 11>, 6233, 6240, 18, "Xxejz",  "'Xxejz'", "Xxejz">, false}
// SOURCE-NEXT:                       // %591 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end (%553, %555, %557, %559, %561, %563, %565, %567, %569, %571, %573, %575, %577, %579, %581, %583, %585, %587, %589, %591)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %550 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %551 = jsir.variable_declarator (%549, %550)
// SOURCE-NEXT:                   // %551 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%551)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 192 C 11>, <L 192 C 20>, "_0x3e158c", 6274, 6283, 25, "_0x3e158c">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %545 = jsir.identifier_ref {"_0x3bd438"}
// SOURCE-NEXT:                   // %545 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %546 = jsir.identifier_ref {"_0x53f095"}
// SOURCE-NEXT:                   // %546 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %547 = jsir.identifier_ref {"_0x2b1b5d"}
// SOURCE-NEXT:                   // %547 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %548 = jsir.identifier_ref {"_0x1150ec"}
// SOURCE-NEXT:                   // %548 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%545, %546, %547, %548)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %537 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %537 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%537) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%537) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %538 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                   // %538 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %539 = jsir.identifier {"_0x1150ec"}
// SOURCE-NEXT:                   // %539 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %540 = jsir.numeric_literal {#jsir<numeric_literal_extra "343", 3.430000e+02 : f64>, 3.430000e+02 : f64}
// SOURCE-NEXT:                   // %540 = 3.430000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %541 = jsir.unary_expression (%540) {"-", true}
// SOURCE-NEXT:                   // %541 = -3.430000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %542 = jsir.binary_expression (%539, %541) {"-"}
// SOURCE-NEXT:                   // %542 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %543 = jsir.identifier {"_0x2b1b5d"}
// SOURCE-NEXT:                   // %543 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %544 = jsir.call_expression (%538, %542, %543)
// SOURCE-NEXT:                   // %544 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%544)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%537) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %404 = jsir.identifier_ref {"_0x58a38a"}
// SOURCE-NEXT:                   // %404 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %405 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %409 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %409 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%409) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%409) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %532 = jsir.identifier_ref {"_0x10bab4"}
// SOURCE-NEXT:                           // %532 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %533 = jsir.array_expression
// SOURCE-NEXT:                           // %533 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %534 = jsir.unary_expression (%533) {"!", true}
// SOURCE-NEXT:                           // %534 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %535 = jsir.unary_expression (%534) {"!", true}
// SOURCE-NEXT:                           // %535 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %536 = jsir.variable_declarator (%532, %535)
// SOURCE-NEXT:                           // %536 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%536)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %410 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %530 = jsir.identifier_ref {"_0x1008f4"}
// SOURCE-NEXT:                           // %530 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %531 = jsir.identifier_ref {"_0x4f3fc0"}
// SOURCE-NEXT:                           // %531 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%530, %531)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %411 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %411 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%411) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%411) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 200 C 15>, <L 200 C 24>, "_0x4184b2", 6502, 6511, 28, "_0x4184b2">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %526 = jsir.identifier_ref {"_0x22e15e"}
// SOURCE-NEXT:                               // %526 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %527 = jsir.identifier_ref {"_0x5174c3"}
// SOURCE-NEXT:                               // %527 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %528 = jsir.identifier_ref {"_0x1241d4"}
// SOURCE-NEXT:                               // %528 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %529 = jsir.identifier_ref {"_0x8ab890"}
// SOURCE-NEXT:                               // %529 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%526, %527, %528, %529)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %519 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %519 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%519) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%519) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %520 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                               // %520 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %521 = jsir.identifier {"_0x8ab890"}
// SOURCE-NEXT:                               // %521 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %522 = jsir.numeric_literal {#jsir<numeric_literal_extra "283", 2.830000e+02 : f64>, 2.830000e+02 : f64}
// SOURCE-NEXT:                               // %522 = 2.830000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %523 = jsir.binary_expression (%521, %522) {"-"}
// SOURCE-NEXT:                               // %523 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %524 = jsir.identifier {"_0x5174c3"}
// SOURCE-NEXT:                               // %524 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %525 = jsir.call_expression (%520, %523, %524)
// SOURCE-NEXT:                               // %525 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%525)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%519) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.function_declaration {false, false, #jsir<identifier   <L 204 C 15>, <L 204 C 24>, "_0x167d7e", 6634, 6643, 29, "_0x167d7e">} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %515 = jsir.identifier_ref {"_0x3c0256"}
// SOURCE-NEXT:                               // %515 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %516 = jsir.identifier_ref {"_0x2b47e1"}
// SOURCE-NEXT:                               // %516 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %517 = jsir.identifier_ref {"_0x4957e3"}
// SOURCE-NEXT:                               // %517 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %518 = jsir.identifier_ref {"_0x3b662d"}
// SOURCE-NEXT:                               // %518 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%515, %516, %517, %518)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         }, {
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %508 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                               // %508 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%508) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%508) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %509 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                               // %509 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %510 = jsir.identifier {"_0x4957e3"}
// SOURCE-NEXT:                               // %510 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %511 = jsir.numeric_literal {#jsir<numeric_literal_extra "491", 4.910000e+02 : f64>, 4.910000e+02 : f64}
// SOURCE-NEXT:                               // %511 = 4.910000e+02 : f64
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %512 = jsir.binary_expression (%510, %511) {"-"}
// SOURCE-NEXT:                               // %512 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %513 = jsir.identifier {"_0x3c0256"}
// SOURCE-NEXT:                               // %513 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %514 = jsir.call_expression (%509, %512, %513)
// SOURCE-NEXT:                               // %514 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.return_statement (%514)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%508) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %412 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %412 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %413 = jsir.string_literal {#jsir<string_literal_extra "'cmIIa'", "cmIIa">, "cmIIa"}
// SOURCE-NEXT:                           // %413 = "cmIIa"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %414 = jsir.member_expression (%412, %413)
// SOURCE-NEXT:                           // %414 = #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %415 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %415 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %416 = jsir.string_literal {#jsir<string_literal_extra "'rvTTb'", "rvTTb">, "rvTTb"}
// SOURCE-NEXT:                           // %416 = "rvTTb"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %417 = jsir.member_expression (%415, %416)
// SOURCE-NEXT:                           // %417 = "LtmRg"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %418 = jsir.string_literal {#jsir<string_literal_extra "'VmyVp'", "VmyVp">, "VmyVp"}
// SOURCE-NEXT:                           // %418 = "VmyVp"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %419 = jsir.call_expression (%414, %417, %418)
// SOURCE-NEXT:                           // %419 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %420 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                           // %420 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %421 = builtin.unrealized_conversion_cast (%419)
// SOURCE-NEXT:                           // %421 = false
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%421) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%420) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %422 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %422 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%422) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%422) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %463 = jsir.identifier_ref {"_0x5b6c55"}
// SOURCE-NEXT:                               // %463 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %464 = jsir.identifier {"_0x3f313a"}
// SOURCE-NEXT:                               // %464 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %465 = jslir.control_flow_starter {#jsir<cf_kind ConditionalExpression>}
// SOURCE-NEXT:                               // %465 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %466 = builtin.unrealized_conversion_cast (%464)
// SOURCE-NEXT:                               // %466 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.cond_br (%466) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb1:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%465) {#jsir<cf_marker ConditionalExpressionAlternate>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %467 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %507 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %507 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%507) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%507) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%507) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %467 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.br (%467)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb2:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%465) {#jsir<cf_marker ConditionalExpressionConsequent>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %468 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %471 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %471 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%471) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%471) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.function_declaration {false, false, #jsir<identifier   <L 210 C 19>, <L 210 C 28>, "_0x552a36", 6880, 6889, 32, "_0x552a36">} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %503 = jsir.identifier_ref {"_0x5b91b5"}
// SOURCE-NEXT:                                       // %503 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %504 = jsir.identifier_ref {"_0x5a4c29"}
// SOURCE-NEXT:                                       // %504 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %505 = jsir.identifier_ref {"_0x102518"}
// SOURCE-NEXT:                                       // %505 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %506 = jsir.identifier_ref {"_0x1d60e6"}
// SOURCE-NEXT:                                       // %506 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%503, %504, %505, %506)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 }, {
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %489 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                       // %489 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%489) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%489) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %490 = jsir.identifier {"_0x4184b2"}
// SOURCE-NEXT:                                       // %490 = #jsir_builtin<inline_expression_function  "_0x22e15e", 28,  "_0x5174c3", 28,  "_0x1241d4", 28,  "_0x8ab890", 28, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x8ab890", 28>, 2.830000e+02 : f64, "-">, #jsir<symbol_id "_0x5174c3", 28>>>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %491 = jsir.identifier {"_0x5b91b5"}
// SOURCE-NEXT:                                       // %491 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %492 = jsir.numeric_literal {#jsir<numeric_literal_extra "273", 2.730000e+02 : f64>, 2.730000e+02 : f64}
// SOURCE-NEXT:                                       // %492 = 2.730000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %493 = jsir.binary_expression (%491, %492) {"-"}
// SOURCE-NEXT:                                       // %493 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %494 = jsir.identifier {"_0x5a4c29"}
// SOURCE-NEXT:                                       // %494 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %495 = jsir.identifier {"_0x102518"}
// SOURCE-NEXT:                                       // %495 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %496 = jsir.numeric_literal {#jsir<numeric_literal_extra "81", 8.100000e+01 : f64>, 8.100000e+01 : f64}
// SOURCE-NEXT:                                       // %496 = 8.100000e+01 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %497 = jsir.binary_expression (%495, %496) {"-"}
// SOURCE-NEXT:                                       // %497 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %498 = jsir.identifier {"_0x102518"}
// SOURCE-NEXT:                                       // %498 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %499 = jsir.numeric_literal {#jsir<numeric_literal_extra "946", 9.460000e+02 : f64>, 9.460000e+02 : f64}
// SOURCE-NEXT:                                       // %499 = 9.460000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %500 = jsir.unary_expression (%499) {"-", true}
// SOURCE-NEXT:                                       // %500 = -9.460000e+02 : f64
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %501 = jsir.binary_expression (%498, %500) {"-"}
// SOURCE-NEXT:                                       // %501 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %502 = jsir.call_expression (%490, %493, %494, %497, %501)
// SOURCE-NEXT:                                       // %502 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.return_statement (%502)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jslir.control_flow_marker (%489) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %472 = jsir.identifier {"_0x330f38"}
// SOURCE-NEXT:                                   // %472 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %473 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                                   // %473 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %474 = builtin.unrealized_conversion_cast (%472)
// SOURCE-NEXT:                                   // %474 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 cf.cond_br (%474) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                               ^bb1:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%473) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %475 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %475 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%475) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%475) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %481 = jsir.identifier_ref {"_0x62708b"}
// SOURCE-NEXT:                                       // %481 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %482 = jsir.identifier {"_0x293663"}
// SOURCE-NEXT:                                       // %482 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %483 = jsir.string_literal {#jsir<string_literal_extra "'apply'", "apply">, "apply"}
// SOURCE-NEXT:                                       // %483 = "apply"
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %484 = jsir.member_expression (%482, %483)
// SOURCE-NEXT:                                       // %484 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %485 = jsir.identifier {"_0x408f4b"}
// SOURCE-NEXT:                                       // %485 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %486 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                                       // %486 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %487 = jsir.call_expression (%484, %485, %486)
// SOURCE-NEXT:                                       // %487 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %488 = jsir.variable_declarator (%481, %487)
// SOURCE-NEXT:                                       // %488 = <uninitialized>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%488)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %476 = jsir.identifier_ref {"_0x3b8fa6"}
// SOURCE-NEXT:                                   // %476 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %477 = jsir.null_literal
// SOURCE-NEXT:                                   // %477 = #jsir.null_literal
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %478 = jsir.assignment_expression (%476, %477) {"="}
// SOURCE-NEXT:                                   // %478 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 %479 = jsir.identifier {"_0x62708b"}
// SOURCE-NEXT:                                   // %479 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 %480 = jsir.sequence_expression (%478, %479)
// SOURCE-NEXT:                                   // %480 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 jsir.return_statement (%480)
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%475) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                                 cf.br
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x3b8fa6#undeclared : #jsir.null_literal> }
// SOURCE-NEXT:                               ^bb2:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%473) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%471) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %468 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             cf.br (%468)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                           ^bb3:
// SOURCE-NEXT:                               // <not executable>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%465) {#jsir<cf_marker ConditionalExpressionEnd>}
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             %470 = jsir.variable_declarator (%463, %469)
// SOURCE-NEXT:                               // %470 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%470)
// SOURCE-NEXT:                               // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %423 = jsir.identifier_ref {"_0x5ac793"}
// SOURCE-NEXT:                           // %423 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %424 = jsir.array_expression
// SOURCE-NEXT:                           // %424 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %425 = jsir.unary_expression (%424) {"!", true}
// SOURCE-NEXT:                           // %425 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %426 = jsir.assignment_expression (%423, %425) {"="}
// SOURCE-NEXT:                           // %426 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %427 = jsir.identifier {"_0x5b6c55"}
// SOURCE-NEXT:                           // %427 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %428 = jsir.sequence_expression (%426, %427)
// SOURCE-NEXT:                           // %428 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.return_statement (%428)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%422) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%420) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %429 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %429 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%429) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%429) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %436 = jsir.identifier_ref {"_0x46af11"}
// SOURCE-NEXT:                               // %436 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %437 = jsir.identifier {"_0x10bab4"}
// SOURCE-NEXT:                               // %437 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %438 = jslir.control_flow_starter {#jsir<cf_kind ConditionalExpression>}
// SOURCE-NEXT:                               // %438 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %439 = builtin.unrealized_conversion_cast (%437)
// SOURCE-NEXT:                               // %439 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.cond_br (%439) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb1:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%438) {#jsir<cf_marker ConditionalExpressionAlternate>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %440 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %462 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %462 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%462) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%462) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%462) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %440 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.br (%440)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb2:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%438) {#jsir<cf_marker ConditionalExpressionConsequent>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %441 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.exprs_region_end
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             }, {
// SOURCE-NEXT:                               ^bb0:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %444 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %444 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%444) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%444) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %445 = jsir.identifier {"_0x4f3fc0"}
// SOURCE-NEXT:                                   // %445 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %446 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                                   // %446 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %447 = builtin.unrealized_conversion_cast (%445)
// SOURCE-NEXT:                                   // %447 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 cf.cond_br (%447) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                               ^bb1:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%446) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %448 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                                   // %448 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%448) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%448) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                                   ^bb0:
// SOURCE-NEXT:                                       // <executable>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %454 = jsir.identifier_ref {"_0x5b3fd6"}
// SOURCE-NEXT:                                       // %454 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %455 = jsir.identifier {"_0x4f3fc0"}
// SOURCE-NEXT:                                       // %455 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %456 = jsir.string_literal {#jsir<string_literal_extra "'apply'", "apply">, "apply"}
// SOURCE-NEXT:                                       // %456 = "apply"
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %457 = jsir.member_expression (%455, %456)
// SOURCE-NEXT:                                       // %457 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %458 = jsir.identifier {"_0x1008f4"}
// SOURCE-NEXT:                                       // %458 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %459 = jsir.identifier {"arguments"}
// SOURCE-NEXT:                                       // %459 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %460 = jsir.call_expression (%457, %458, %459)
// SOURCE-NEXT:                                       // %460 = <unknown>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     %461 = jsir.variable_declarator (%454, %460)
// SOURCE-NEXT:                                       // %461 = <uninitialized>
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                     jsir.exprs_region_end (%461)
// SOURCE-NEXT:                                       // State [default = <unknown>] { }
// SOURCE-NEXT:                                 })
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %449 = jsir.identifier_ref {"_0x4f3fc0"}
// SOURCE-NEXT:                                   // %449 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %450 = jsir.null_literal
// SOURCE-NEXT:                                   // %450 = #jsir.null_literal
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 %451 = jsir.assignment_expression (%449, %450) {"="}
// SOURCE-NEXT:                                   // %451 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 %452 = jsir.identifier {"_0x5b3fd6"}
// SOURCE-NEXT:                                   // %452 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 %453 = jsir.sequence_expression (%451, %452)
// SOURCE-NEXT:                                   // %453 = <unknown>
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 jsir.return_statement (%453)
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%448) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                                 cf.br
// SOURCE-NEXT:                                   // State [default = <unknown>] { <_0x4f3fc0#27 : #jsir.null_literal> }
// SOURCE-NEXT:                               ^bb2:
// SOURCE-NEXT:                                   // <executable>
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%446) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                                 jslir.control_flow_marker (%444) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                                   // State [default = <unknown>] { }
// SOURCE-NEXT:                             })
// SOURCE-NEXT:                               // %441 = <unknown>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             cf.br (%441)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                           ^bb3:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jslir.control_flow_marker (%438) {#jsir<cf_marker ConditionalExpressionEnd>}
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             %443 = jsir.variable_declarator (%436, %442)
// SOURCE-NEXT:                               // %443 = <uninitialized>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end (%443)
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %430 = jsir.identifier_ref {"_0x10bab4"}
// SOURCE-NEXT:                           // %430 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %431 = jsir.array_expression
// SOURCE-NEXT:                           // %431 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %432 = jsir.unary_expression (%431) {"!", true}
// SOURCE-NEXT:                           // %432 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %433 = jsir.assignment_expression (%430, %432) {"="}
// SOURCE-NEXT:                           // %433 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %434 = jsir.identifier {"_0x46af11"}
// SOURCE-NEXT:                           // %434 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %435 = jsir.sequence_expression (%433, %434)
// SOURCE-NEXT:                           // %435 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%435)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%429) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb3:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%420) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%411) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // %410 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.return_statement (%410)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%409) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %405 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %406 = jsir.call_expression (%405)
// SOURCE-NEXT:                   // %406 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %407 = jsir.parenthesized_expression (%406)
// SOURCE-NEXT:                   // %407 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %408 = jsir.variable_declarator (%404, %407)
// SOURCE-NEXT:                   // %408 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%408)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.function_declaration {false, false, #jsir<identifier   <L 237 C 11>, <L 237 C 20>, "_0x5fb062", 7615, 7624, 39, "_0x5fb062">} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %400 = jsir.identifier_ref {"_0x1176c2"}
// SOURCE-NEXT:                   // %400 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %401 = jsir.identifier_ref {"_0x37fd7c"}
// SOURCE-NEXT:                   // %401 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %402 = jsir.identifier_ref {"_0x5718e5"}
// SOURCE-NEXT:                   // %402 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %403 = jsir.identifier_ref {"_0x3d07ce"}
// SOURCE-NEXT:                   // %403 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%400, %401, %402, %403)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             }, {
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %392 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                   // %392 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%392) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%392) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %393 = jsir.identifier {"_0x107c"}
// SOURCE-NEXT:                   // %393 = #jsir_builtin<builtin_function "_0x107c">
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %394 = jsir.identifier {"_0x1176c2"}
// SOURCE-NEXT:                   // %394 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %395 = jsir.numeric_literal {#jsir<numeric_literal_extra "122", 1.220000e+02 : f64>, 1.220000e+02 : f64}
// SOURCE-NEXT:                   // %395 = 1.220000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %396 = jsir.unary_expression (%395) {"-", true}
// SOURCE-NEXT:                   // %396 = -1.220000e+02 : f64
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %397 = jsir.binary_expression (%394, %396) {"-"}
// SOURCE-NEXT:                   // %397 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %398 = jsir.identifier {"_0x37fd7c"}
// SOURCE-NEXT:                   // %398 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %399 = jsir.call_expression (%393, %397, %398)
// SOURCE-NEXT:                   // %399 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.return_statement (%399)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jslir.control_flow_marker (%392) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:               ^bb0:
// SOURCE-NEXT:                   // <executable>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %16 = jsir.identifier_ref {"_0x5a5e61"}
// SOURCE-NEXT:                   // %16 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %17 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                   // %17 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %18 = jsir.this_expression
// SOURCE-NEXT:                   // %18 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %19 = jsir.function_expression {false, false} ({
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.exprs_region_end
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 }, {
// SOURCE-NEXT:                   ^bb0:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %22 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %22 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%22) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%22) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.function_declaration {false, false, #jsir<identifier   <L 242 C 13>, <L 242 C 22>, "_0x9092eb", 7785, 7794, 41, "_0x9092eb">} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %388 = jsir.identifier_ref {"_0x4068cb"}
// SOURCE-NEXT:                           // %388 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %389 = jsir.identifier_ref {"_0x4ee7f0"}
// SOURCE-NEXT:                           // %389 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %390 = jsir.identifier_ref {"_0x2d9ed5"}
// SOURCE-NEXT:                           // %390 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %391 = jsir.identifier_ref {"_0x497bbc"}
// SOURCE-NEXT:                           // %391 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%388, %389, %390, %391)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %375 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %375 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%375) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%375) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %376 = jsir.identifier {"_0x5fb062"}
// SOURCE-NEXT:                           // %376 = #jsir_builtin<inline_expression_function  "_0x1176c2", 39,  "_0x37fd7c", 39,  "_0x5718e5", 39,  "_0x3d07ce", 39, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1176c2", 39>, #jsir_builtin<inline_expression_unary_expression 1.220000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x37fd7c", 39>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %377 = jsir.identifier {"_0x497bbc"}
// SOURCE-NEXT:                           // %377 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %378 = jsir.numeric_literal {#jsir<numeric_literal_extra "457", 4.570000e+02 : f64>, 4.570000e+02 : f64}
// SOURCE-NEXT:                           // %378 = 4.570000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %379 = jsir.binary_expression (%377, %378) {"-"}
// SOURCE-NEXT:                           // %379 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %380 = jsir.identifier {"_0x4ee7f0"}
// SOURCE-NEXT:                           // %380 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %381 = jsir.identifier {"_0x2d9ed5"}
// SOURCE-NEXT:                           // %381 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %382 = jsir.numeric_literal {#jsir<numeric_literal_extra "369", 3.690000e+02 : f64>, 3.690000e+02 : f64}
// SOURCE-NEXT:                           // %382 = 3.690000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %383 = jsir.binary_expression (%381, %382) {"-"}
// SOURCE-NEXT:                           // %383 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %384 = jsir.identifier {"_0x497bbc"}
// SOURCE-NEXT:                           // %384 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %385 = jsir.numeric_literal {#jsir<numeric_literal_extra "84", 8.400000e+01 : f64>, 8.400000e+01 : f64}
// SOURCE-NEXT:                           // %385 = 8.400000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %386 = jsir.binary_expression (%384, %385) {"-"}
// SOURCE-NEXT:                           // %386 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %387 = jsir.call_expression (%376, %379, %380, %383, %386)
// SOURCE-NEXT:                           // %387 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%387)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%375) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.function_declaration {false, false, #jsir<identifier   <L 247 C 13>, <L 247 C 22>, "_0x620196", 7957, 7966, 42, "_0x620196">} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %371 = jsir.identifier_ref {"_0x425af0"}
// SOURCE-NEXT:                           // %371 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %372 = jsir.identifier_ref {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %372 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %373 = jsir.identifier_ref {"_0x4f88d8"}
// SOURCE-NEXT:                           // %373 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %374 = jsir.identifier_ref {"_0x5d56ca"}
// SOURCE-NEXT:                           // %374 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%371, %372, %373, %374)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     }, {
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %358 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                           // %358 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%358) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%358) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %359 = jsir.identifier {"_0x3e158c"}
// SOURCE-NEXT:                           // %359 = #jsir_builtin<inline_expression_function  "_0x3bd438", 25,  "_0x53f095", 25,  "_0x2b1b5d", 25,  "_0x1150ec", 25, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x107c", 0>, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x1150ec", 25>, #jsir_builtin<inline_expression_unary_expression 3.430000e+02 : f64, "-">, "-">, #jsir<symbol_id "_0x2b1b5d", 25>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %360 = jsir.identifier {"_0x425af0"}
// SOURCE-NEXT:                           // %360 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %361 = jsir.numeric_literal {#jsir<numeric_literal_extra "88", 8.800000e+01 : f64>, 8.800000e+01 : f64}
// SOURCE-NEXT:                           // %361 = 8.800000e+01 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %362 = jsir.binary_expression (%360, %361) {"-"}
// SOURCE-NEXT:                           // %362 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %363 = jsir.identifier {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %363 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %364 = jsir.numeric_literal {#jsir<numeric_literal_extra "394", 3.940000e+02 : f64>, 3.940000e+02 : f64}
// SOURCE-NEXT:                           // %364 = 3.940000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %365 = jsir.binary_expression (%363, %364) {"-"}
// SOURCE-NEXT:                           // %365 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %366 = jsir.identifier {"_0x2a4dc9"}
// SOURCE-NEXT:                           // %366 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %367 = jsir.identifier {"_0x5d56ca"}
// SOURCE-NEXT:                           // %367 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %368 = jsir.numeric_literal {#jsir<numeric_literal_extra "446", 4.460000e+02 : f64>, 4.460000e+02 : f64}
// SOURCE-NEXT:                           // %368 = 4.460000e+02 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %369 = jsir.binary_expression (%367, %368) {"-"}
// SOURCE-NEXT:                           // %369 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %370 = jsir.call_expression (%359, %362, %365, %366, %369)
// SOURCE-NEXT:                           // %370 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.return_statement (%370)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%358) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %23 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %23 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %24 = jsir.string_literal {#jsir<string_literal_extra "'BLRju'", "BLRju">, "BLRju"}
// SOURCE-NEXT:                       // %24 = "BLRju"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %25 = jsir.member_expression (%23, %24)
// SOURCE-NEXT:                       // %25 = #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %26 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %26 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %27 = jsir.string_literal {#jsir<string_literal_extra "'INEBZ'", "INEBZ">, "INEBZ"}
// SOURCE-NEXT:                       // %27 = "INEBZ"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %28 = jsir.member_expression (%26, %27)
// SOURCE-NEXT:                       // %28 = "snjPo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %29 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %29 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %30 = jsir.string_literal {#jsir<string_literal_extra "'gCfqE'", "gCfqE">, "gCfqE"}
// SOURCE-NEXT:                       // %30 = "gCfqE"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %31 = jsir.member_expression (%29, %30)
// SOURCE-NEXT:                       // %31 = "Nngrv"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %32 = jsir.call_expression (%25, %28, %31)
// SOURCE-NEXT:                       // %32 = false
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %33 = jslir.control_flow_starter {#jsir<cf_kind IfStatement>}
// SOURCE-NEXT:                       // %33 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %34 = builtin.unrealized_conversion_cast (%32)
// SOURCE-NEXT:                       // %34 = false
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%34) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb1:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%33) {#jsir<cf_marker IfStatementConsequent>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %35 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %35 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%35) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%35) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %348 = jsir.identifier_ref {"_0x2abedf"}
// SOURCE-NEXT:                           // %348 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %349 = jsir.string_literal {#jsir<string_literal_extra "'5|2|1|4|3|0'", "5|2|1|4|3|0">, "5|2|1|4|3|0"}
// SOURCE-NEXT:                           // %349 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %350 = jsir.string_literal {#jsir<string_literal_extra "'split'", "split">, "split"}
// SOURCE-NEXT:                           // %350 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %351 = jsir.member_expression (%349, %350)
// SOURCE-NEXT:                           // %351 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %352 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %352 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %353 = jsir.call_expression (%351, %352)
// SOURCE-NEXT:                           // %353 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %354 = jsir.variable_declarator (%348, %353)
// SOURCE-NEXT:                           // %354 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %355 = jsir.identifier_ref {"_0x53335d"}
// SOURCE-NEXT:                           // %355 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %356 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                           // %356 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %357 = jsir.variable_declarator (%355, %356)
// SOURCE-NEXT:                           // %357 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%354, %357)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %36 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %36 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb2:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%36) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %37 = jsir.array_expression
// SOURCE-NEXT:                       // %37 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %38 = jsir.unary_expression (%37) {"!", true}
// SOURCE-NEXT:                       // %38 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %39 = jsir.unary_expression (%38) {"!", true}
// SOURCE-NEXT:                       // %39 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %40 = builtin.unrealized_conversion_cast (%39)
// SOURCE-NEXT:                       // %40 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%40) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb3:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%36) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %41 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %41 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%41) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%41) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %42 = jsir.identifier {"_0x2abedf"}
// SOURCE-NEXT:                       // %42 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %43 = jsir.identifier_ref {"_0x53335d"}
// SOURCE-NEXT:                       // %43 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %44 = jsir.update_expression (%43) {"++", false}
// SOURCE-NEXT:                       // %44 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %45 = jsir.member_expression (%42, %44)
// SOURCE-NEXT:                       // %45 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %46 = jslir.switch_statement_start (%45)
// SOURCE-NEXT:                       // %46 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb4:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %47 = jslir.switch_statement_case_start (%46) {0 : ui32}
// SOURCE-NEXT:                       // %47 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %48 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %48 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%48)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %49 = jsir.binary_expression (%45, %48) {"==="}
// SOURCE-NEXT:                       // %49 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %50 = builtin.unrealized_conversion_cast (%49)
// SOURCE-NEXT:                       // %50 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%50) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb5:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%47) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %51 = jsir.identifier {"_0x233f7c"}
// SOURCE-NEXT:                       // %51 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %52 = jsir.identifier {"_0x25cc23"}
// SOURCE-NEXT:                       // %52 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %53 = jsir.member_expression_ref (%51, %52)
// SOURCE-NEXT:                       // %53 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %54 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %54 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %55 = jsir.assignment_expression (%53, %54) {"="}
// SOURCE-NEXT:                       // %55 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%55)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb6:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb7:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %56 = jslir.switch_statement_case_start (%46) {1 : ui32}
// SOURCE-NEXT:                       // %56 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %57 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %57 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%57)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %58 = jsir.binary_expression (%45, %57) {"==="}
// SOURCE-NEXT:                       // %58 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %59 = builtin.unrealized_conversion_cast (%58)
// SOURCE-NEXT:                       // %59 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%59) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb8:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%56) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %339 = jsir.identifier_ref {"_0x527da8"}
// SOURCE-NEXT:                           // %339 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %340 = jsir.identifier {"_0x4f1603"}
// SOURCE-NEXT:                           // %340 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %341 = jsir.identifier {"_0x25cc23"}
// SOURCE-NEXT:                           // %341 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %342 = jsir.member_expression (%340, %341)
// SOURCE-NEXT:                           // %342 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %343 = jslir.logical_expression_start (%342) {"||"}
// SOURCE-NEXT:                           // %343 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %344 = builtin.unrealized_conversion_cast (%342)
// SOURCE-NEXT:                           // %344 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.cond_br (%344, %342) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%343) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %345 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                           // %345 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         cf.br (%345)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%343) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %347 = jsir.variable_declarator (%339, %346)
// SOURCE-NEXT:                           // %347 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%347)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb9:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb10:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %60 = jslir.switch_statement_case_start (%46) {2 : ui32}
// SOURCE-NEXT:                       // %60 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %61 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %61 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%61)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %62 = jsir.binary_expression (%45, %61) {"==="}
// SOURCE-NEXT:                       // %62 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %63 = builtin.unrealized_conversion_cast (%62)
// SOURCE-NEXT:                       // %63 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%63) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb11:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%60) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %334 = jsir.identifier_ref {"_0x25cc23"}
// SOURCE-NEXT:                           // %334 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %335 = jsir.identifier {"_0x4e0893"}
// SOURCE-NEXT:                           // %335 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %336 = jsir.identifier {"_0x3ab0e9"}
// SOURCE-NEXT:                           // %336 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %337 = jsir.member_expression (%335, %336)
// SOURCE-NEXT:                           // %337 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %338 = jsir.variable_declarator (%334, %337)
// SOURCE-NEXT:                           // %338 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%338)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb12:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb13:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %64 = jslir.switch_statement_case_start (%46) {3 : ui32}
// SOURCE-NEXT:                       // %64 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %65 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %65 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%65)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %66 = jsir.binary_expression (%45, %65) {"==="}
// SOURCE-NEXT:                       // %66 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %67 = builtin.unrealized_conversion_cast (%66)
// SOURCE-NEXT:                       // %67 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%67) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb14:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%64) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %68 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %68 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %69 = jsir.string_literal {#jsir<string_literal_extra "'toString'", "toString">, "toString"}
// SOURCE-NEXT:                       // %69 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %70 = jsir.member_expression_ref (%68, %69)
// SOURCE-NEXT:                       // %70 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %71 = jsir.identifier {"_0x527da8"}
// SOURCE-NEXT:                       // %71 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %72 = jsir.string_literal {#jsir<string_literal_extra "'toString'", "toString">, "toString"}
// SOURCE-NEXT:                       // %72 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %73 = jsir.member_expression (%71, %72)
// SOURCE-NEXT:                       // %73 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %74 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                       // %74 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %75 = jsir.member_expression (%73, %74)
// SOURCE-NEXT:                       // %75 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %76 = jsir.identifier {"_0x527da8"}
// SOURCE-NEXT:                       // %76 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %77 = jsir.call_expression (%75, %76)
// SOURCE-NEXT:                       // %77 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %78 = jsir.assignment_expression (%70, %77) {"="}
// SOURCE-NEXT:                       // %78 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%78)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb15:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb16:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %79 = jslir.switch_statement_case_start (%46) {4 : ui32}
// SOURCE-NEXT:                       // %79 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %80 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %80 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%80)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %81 = jsir.binary_expression (%45, %80) {"==="}
// SOURCE-NEXT:                       // %81 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %82 = builtin.unrealized_conversion_cast (%81)
// SOURCE-NEXT:                       // %82 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%82) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb17:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%79) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %83 = jsir.identifier {"_0x185f9c"}
// SOURCE-NEXT:                       // %83 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %84 = jsir.string_literal {#jsir<string_literal_extra "'__proto__'", "__proto__">, "__proto__"}
// SOURCE-NEXT:                       // %84 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %85 = jsir.member_expression_ref (%83, %84)
// SOURCE-NEXT:                       // %85 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %86 = jsir.identifier {"_0x486a8b"}
// SOURCE-NEXT:                       // %86 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %87 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                       // %87 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %88 = jsir.member_expression (%86, %87)
// SOURCE-NEXT:                       // %88 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %89 = jsir.identifier {"_0x67a5a1"}
// SOURCE-NEXT:                       // %89 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %90 = jsir.call_expression (%88, %89)
// SOURCE-NEXT:                       // %90 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %91 = jsir.assignment_expression (%85, %90) {"="}
// SOURCE-NEXT:                       // %91 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%91)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb18:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb19:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %92 = jslir.switch_statement_case_start (%46) {5 : ui32}
// SOURCE-NEXT:                       // %92 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %93 = jsir.string_literal {#jsir<string_literal_extra "'5'", "5">, "5"}
// SOURCE-NEXT:                       // %93 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%93)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %94 = jsir.binary_expression (%45, %93) {"==="}
// SOURCE-NEXT:                       // %94 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %95 = builtin.unrealized_conversion_cast (%94)
// SOURCE-NEXT:                       // %95 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.cond_br (%95) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb20:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%92) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <not executable>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %323 = jsir.identifier_ref {"_0x185f9c"}
// SOURCE-NEXT:                           // %323 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %324 = jsir.identifier {"_0x4b92d5"}
// SOURCE-NEXT:                           // %324 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %325 = jsir.string_literal {#jsir<string_literal_extra "'constructor'", "constructor">, "constructor"}
// SOURCE-NEXT:                           // %325 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %326 = jsir.member_expression (%324, %325)
// SOURCE-NEXT:                           // %326 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %327 = jsir.string_literal {#jsir<string_literal_extra "'prototype'", "prototype">, "prototype"}
// SOURCE-NEXT:                           // %327 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %328 = jsir.member_expression (%326, %327)
// SOURCE-NEXT:                           // %328 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %329 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                           // %329 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %330 = jsir.member_expression (%328, %329)
// SOURCE-NEXT:                           // %330 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %331 = jsir.identifier {"_0x5026e1"}
// SOURCE-NEXT:                           // %331 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %332 = jsir.call_expression (%330, %331)
// SOURCE-NEXT:                           // %332 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         %333 = jsir.variable_declarator (%323, %332)
// SOURCE-NEXT:                           // %333 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%333)
// SOURCE-NEXT:                           // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb21:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb22:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%46) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb23:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%41) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb24:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%36) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%35) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb25:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%33) {#jsir<cf_marker IfStatementAlternate>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %96 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %96 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%96) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%96) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %311 = jsir.identifier_ref {"_0x1999fe"}
// SOURCE-NEXT:                           // %311 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %312 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %312 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %313 = jsir.string_literal {#jsir<string_literal_extra "'ZUNtd'", "ZUNtd">, "ZUNtd"}
// SOURCE-NEXT:                           // %313 = "ZUNtd"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %314 = jsir.member_expression (%312, %313)
// SOURCE-NEXT:                           // %314 = "2|0|4|3|1"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %315 = jsir.string_literal {#jsir<string_literal_extra "'split'", "split">, "split"}
// SOURCE-NEXT:                           // %315 = "split"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %316 = jsir.member_expression (%314, %315)
// SOURCE-NEXT:                           // %316 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %317 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %317 = "|"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %318 = jsir.call_expression (%316, %317)
// SOURCE-NEXT:                           // %318 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %319 = jsir.variable_declarator (%311, %318)
// SOURCE-NEXT:                           // %319 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %320 = jsir.identifier_ref {"_0x50c043"}
// SOURCE-NEXT:                           // %320 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %321 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                           // %321 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %322 = jsir.variable_declarator (%320, %321)
// SOURCE-NEXT:                           // %322 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%319, %322)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     %97 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %97 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x50c043#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb26:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%97) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %98 = jsir.array_expression
// SOURCE-NEXT:                       // %98 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %99 = jsir.unary_expression (%98) {"!", true}
// SOURCE-NEXT:                       // %99 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %100 = jsir.unary_expression (%99) {"!", true}
// SOURCE-NEXT:                       // %100 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %101 = builtin.unrealized_conversion_cast (%100)
// SOURCE-NEXT:                       // %101 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%101) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb27:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%97) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %102 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %102 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%102) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%102) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %103 = jsir.identifier {"_0x1999fe"}
// SOURCE-NEXT:                       // %103 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %104 = jsir.identifier_ref {"_0x50c043"}
// SOURCE-NEXT:                       // %104 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %105 = jsir.update_expression (%104) {"++", false}
// SOURCE-NEXT:                       // %105 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %106 = jsir.member_expression (%103, %105)
// SOURCE-NEXT:                       // %106 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %107 = jslir.switch_statement_start (%106)
// SOURCE-NEXT:                       // %107 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb28:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %108 = jslir.switch_statement_case_start (%107) {0 : ui32}
// SOURCE-NEXT:                       // %108 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %109 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %109 = "0"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%109)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %110 = jsir.binary_expression (%106, %109) {"==="}
// SOURCE-NEXT:                       // %110 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %111 = builtin.unrealized_conversion_cast (%110)
// SOURCE-NEXT:                       // %111 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%111) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb29:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%108) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %112 = jslir.control_flow_starter {#jsir<cf_kind TryStatement>}
// SOURCE-NEXT:                       // %112 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb30:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%112) {#jsir<cf_marker TryStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %113 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %113 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%113) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%113) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %289 = jsir.identifier_ref {"_0xc6ad63"}
// SOURCE-NEXT:                           // %289 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %290 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %290 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %291 = jsir.string_literal {#jsir<string_literal_extra "'soDZs'", "soDZs">, "soDZs"}
// SOURCE-NEXT:                           // %291 = "soDZs"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %292 = jsir.member_expression (%290, %291)
// SOURCE-NEXT:                           // %292 = #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %293 = jsir.identifier {"Function"}
// SOURCE-NEXT:                           // %293 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %294 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %294 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %295 = jsir.string_literal {#jsir<string_literal_extra "'NieDC'", "NieDC">, "NieDC"}
// SOURCE-NEXT:                           // %295 = "NieDC"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %296 = jsir.member_expression (%294, %295)
// SOURCE-NEXT:                           // %296 = #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %297 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %297 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %298 = jsir.string_literal {#jsir<string_literal_extra "'NieDC'", "NieDC">, "NieDC"}
// SOURCE-NEXT:                           // %298 = "NieDC"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %299 = jsir.member_expression (%297, %298)
// SOURCE-NEXT:                           // %299 = #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %300 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %300 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %301 = jsir.string_literal {#jsir<string_literal_extra "'yEDez'", "yEDez">, "yEDez"}
// SOURCE-NEXT:                           // %301 = "yEDez"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %302 = jsir.member_expression (%300, %301)
// SOURCE-NEXT:                           // %302 = "return (function() "
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %303 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %303 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %304 = jsir.string_literal {#jsir<string_literal_extra "'ZEmIi'", "ZEmIi">, "ZEmIi"}
// SOURCE-NEXT:                           // %304 = "ZEmIi"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %305 = jsir.member_expression (%303, %304)
// SOURCE-NEXT:                           // %305 = "{}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %306 = jsir.call_expression (%299, %302, %305)
// SOURCE-NEXT:                           // %306 = "return (function() {}.constructor(\22return this\22)( )"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %307 = jsir.string_literal {#jsir<string_literal_extra "');'", ");">, ");"}
// SOURCE-NEXT:                           // %307 = ");"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %308 = jsir.call_expression (%296, %306, %307)
// SOURCE-NEXT:                           // %308 = "return (function() {}.constructor(\22return this\22)( ));"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %309 = jsir.call_expression (%292, %293, %308)
// SOURCE-NEXT:                           // %309 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %310 = jsir.variable_declarator (%289, %309)
// SOURCE-NEXT:                           // %310 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%310)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %114 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                       // %114 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %115 = jsir.identifier {"_0xc6ad63"}
// SOURCE-NEXT:                       // %115 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %116 = jsir.call_expression (%115)
// SOURCE-NEXT:                       // %116 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %117 = jsir.assignment_expression (%114, %116) {"="}
// SOURCE-NEXT:                       // %117 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%117)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%113) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb31:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%112) {#jsir<cf_marker TryStatementHandler>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %118 = jsir.identifier_ref {"_0x455513"}
// SOURCE-NEXT:                       // %118 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.catch_clause_start (%118)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %119 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %119 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%119) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%119) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %120 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                       // %120 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %121 = jsir.identifier {"window"}
// SOURCE-NEXT:                       // %121 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     %122 = jsir.assignment_expression (%120, %121) {"="}
// SOURCE-NEXT:                       // %122 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%122)
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%119) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb32:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%112) {#jsir<cf_marker TryStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb33:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb34:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %123 = jslir.switch_statement_case_start (%107) {1 : ui32}
// SOURCE-NEXT:                       // %123 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %124 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %124 = "1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%124)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %125 = jsir.binary_expression (%106, %124) {"==="}
// SOURCE-NEXT:                       // %125 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %126 = builtin.unrealized_conversion_cast (%125)
// SOURCE-NEXT:                       // %126 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%126) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb35:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%123) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %127 = jslir.control_flow_starter {#jsir<cf_kind ForStatement>}
// SOURCE-NEXT:                       // %127 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb36:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%127) {#jsir<cf_marker ForStatementInit>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %286 = jsir.identifier_ref {"_0x4a8534"}
// SOURCE-NEXT:                           // %286 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %287 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                           // %287 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %288 = jsir.variable_declarator (%286, %287)
// SOURCE-NEXT:                           // %288 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%288)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x4a8534#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb37:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%127) {#jsir<cf_marker ForStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %128 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                       // %128 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %129 = jsir.string_literal {#jsir<string_literal_extra "'jXOCo'", "jXOCo">, "jXOCo"}
// SOURCE-NEXT:                       // %129 = "jXOCo"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %130 = jsir.member_expression (%128, %129)
// SOURCE-NEXT:                       // %130 = #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %131 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                       // %131 = 0.000000e+00 : f64
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %132 = jsir.identifier {"_0x27bc28"}
// SOURCE-NEXT:                       // %132 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %133 = jsir.string_literal {#jsir<string_literal_extra "'length'", "length">, "length"}
// SOURCE-NEXT:                       // %133 = "length"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %134 = jsir.member_expression (%132, %133)
// SOURCE-NEXT:                       // %134 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %135 = jsir.call_expression (%130, %131, %134)
// SOURCE-NEXT:                       // %135 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %136 = builtin.unrealized_conversion_cast (%135)
// SOURCE-NEXT:                       // %136 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%136) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb38:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%127) {#jsir<cf_marker ForStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %137 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %137 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %274 = jsir.identifier_ref {"_0x20167d"}
// SOURCE-NEXT:                           // %274 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %275 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %275 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %276 = jsir.string_literal {#jsir<string_literal_extra "'GyCwQ'", "GyCwQ">, "GyCwQ"}
// SOURCE-NEXT:                           // %276 = "GyCwQ"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %277 = jsir.member_expression (%275, %276)
// SOURCE-NEXT:                           // %277 = "3|0|2|4|5|1"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %278 = jsir.string_literal {#jsir<string_literal_extra "'split'", "split">, "split"}
// SOURCE-NEXT:                           // %278 = "split"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %279 = jsir.member_expression (%277, %278)
// SOURCE-NEXT:                           // %279 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %280 = jsir.string_literal {#jsir<string_literal_extra "'|'", "|">, "|"}
// SOURCE-NEXT:                           // %280 = "|"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %281 = jsir.call_expression (%279, %280)
// SOURCE-NEXT:                           // %281 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %282 = jsir.variable_declarator (%274, %281)
// SOURCE-NEXT:                           // %282 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %283 = jsir.identifier_ref {"_0x92b385"}
// SOURCE-NEXT:                           // %283 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %284 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                           // %284 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %285 = jsir.variable_declarator (%283, %284)
// SOURCE-NEXT:                           // %285 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%282, %285)
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     %138 = jslir.control_flow_starter {#jsir<cf_kind WhileStatement>}
// SOURCE-NEXT:                       // %138 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { <_0x92b385#40 : 0.000000e+00 : f64> }
// SOURCE-NEXT:                   ^bb39:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%138) {#jsir<cf_marker WhileStatementTest>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %139 = jsir.array_expression
// SOURCE-NEXT:                       // %139 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %140 = jsir.unary_expression (%139) {"!", true}
// SOURCE-NEXT:                       // %140 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %141 = jsir.unary_expression (%140) {"!", true}
// SOURCE-NEXT:                       // %141 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %142 = builtin.unrealized_conversion_cast (%141)
// SOURCE-NEXT:                       // %142 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%142) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb40:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%138) {#jsir<cf_marker WhileStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %143 = jslir.control_flow_starter {#jsir<cf_kind BlockStatement>}
// SOURCE-NEXT:                       // %143 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%143) {#jsir<cf_marker BlockStatementDirectives>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%143) {#jsir<cf_marker BlockStatementBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %144 = jsir.identifier {"_0x20167d"}
// SOURCE-NEXT:                       // %144 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %145 = jsir.identifier_ref {"_0x92b385"}
// SOURCE-NEXT:                       // %145 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %146 = jsir.update_expression (%145) {"++", false}
// SOURCE-NEXT:                       // %146 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %147 = jsir.member_expression (%144, %146)
// SOURCE-NEXT:                       // %147 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %148 = jslir.switch_statement_start (%147)
// SOURCE-NEXT:                       // %148 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb41:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %149 = jslir.switch_statement_case_start (%148) {0 : ui32}
// SOURCE-NEXT:                       // %149 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %150 = jsir.string_literal {#jsir<string_literal_extra "'0'", "0">, "0"}
// SOURCE-NEXT:                       // %150 = "0"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%150)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %151 = jsir.binary_expression (%147, %150) {"==="}
// SOURCE-NEXT:                       // %151 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %152 = builtin.unrealized_conversion_cast (%151)
// SOURCE-NEXT:                       // %152 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%152) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb42:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%149) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %269 = jsir.identifier_ref {"_0x5154ca"}
// SOURCE-NEXT:                           // %269 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %270 = jsir.identifier {"_0x27bc28"}
// SOURCE-NEXT:                           // %270 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %271 = jsir.numeric_literal {#jsir<numeric_literal_extra "0", 0.000000e+00 : f64>, 0.000000e+00 : f64}
// SOURCE-NEXT:                           // %271 = 0.000000e+00 : f64
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %272 = jsir.member_expression (%270, %271)
// SOURCE-NEXT:                           // %272 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %273 = jsir.variable_declarator (%269, %272)
// SOURCE-NEXT:                           // %273 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%273)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb43:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb44:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %153 = jslir.switch_statement_case_start (%148) {1 : ui32}
// SOURCE-NEXT:                       // %153 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %154 = jsir.string_literal {#jsir<string_literal_extra "'1'", "1">, "1"}
// SOURCE-NEXT:                       // %154 = "1"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%154)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %155 = jsir.binary_expression (%147, %154) {"==="}
// SOURCE-NEXT:                       // %155 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %156 = builtin.unrealized_conversion_cast (%155)
// SOURCE-NEXT:                       // %156 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%156) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb45:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%153) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %157 = jsir.identifier {"_0x223732"}
// SOURCE-NEXT:                       // %157 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %158 = jsir.identifier {"_0x5154ca"}
// SOURCE-NEXT:                       // %158 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %159 = jsir.member_expression_ref (%157, %158)
// SOURCE-NEXT:                       // %159 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %160 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %160 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %161 = jsir.assignment_expression (%159, %160) {"="}
// SOURCE-NEXT:                       // %161 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%161)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb46:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb47:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %162 = jslir.switch_statement_case_start (%148) {2 : ui32}
// SOURCE-NEXT:                       // %162 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %163 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %163 = "2"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%163)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %164 = jsir.binary_expression (%147, %163) {"==="}
// SOURCE-NEXT:                       // %164 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %165 = builtin.unrealized_conversion_cast (%164)
// SOURCE-NEXT:                       // %165 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%165) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb48:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%162) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %260 = jsir.identifier_ref {"_0x3bb083"}
// SOURCE-NEXT:                           // %260 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %261 = jsir.identifier {"_0x223732"}
// SOURCE-NEXT:                           // %261 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %262 = jsir.identifier {"_0x5154ca"}
// SOURCE-NEXT:                           // %262 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %263 = jsir.member_expression (%261, %262)
// SOURCE-NEXT:                           // %263 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %264 = jslir.logical_expression_start (%263) {"||"}
// SOURCE-NEXT:                           // %264 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %265 = builtin.unrealized_conversion_cast (%263)
// SOURCE-NEXT:                           // %265 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%265, %263) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%264) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %266 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                           // %266 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%266)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%264) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %268 = jsir.variable_declarator (%260, %267)
// SOURCE-NEXT:                           // %268 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%268)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb49:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb50:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %166 = jslir.switch_statement_case_start (%148) {3 : ui32}
// SOURCE-NEXT:                       // %166 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %167 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %167 = "3"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%167)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %168 = jsir.binary_expression (%147, %167) {"==="}
// SOURCE-NEXT:                       // %168 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %169 = builtin.unrealized_conversion_cast (%168)
// SOURCE-NEXT:                       // %169 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%169) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb51:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%166) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %249 = jsir.identifier_ref {"_0x3a6f48"}
// SOURCE-NEXT:                           // %249 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %250 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                           // %250 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %251 = jsir.string_literal {#jsir<string_literal_extra "'constructor'", "constructor">, "constructor"}
// SOURCE-NEXT:                           // %251 = "constructor"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %252 = jsir.member_expression (%250, %251)
// SOURCE-NEXT:                           // %252 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %253 = jsir.string_literal {#jsir<string_literal_extra "'prototype'", "prototype">, "prototype"}
// SOURCE-NEXT:                           // %253 = "prototype"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %254 = jsir.member_expression (%252, %253)
// SOURCE-NEXT:                           // %254 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %255 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                           // %255 = "bind"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %256 = jsir.member_expression (%254, %255)
// SOURCE-NEXT:                           // %256 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %257 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                           // %257 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %258 = jsir.call_expression (%256, %257)
// SOURCE-NEXT:                           // %258 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %259 = jsir.variable_declarator (%249, %258)
// SOURCE-NEXT:                           // %259 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%259)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb52:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb53:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %170 = jslir.switch_statement_case_start (%148) {4 : ui32}
// SOURCE-NEXT:                       // %170 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %171 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %171 = "4"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%171)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %172 = jsir.binary_expression (%147, %171) {"==="}
// SOURCE-NEXT:                       // %172 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %173 = builtin.unrealized_conversion_cast (%172)
// SOURCE-NEXT:                       // %173 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%173) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb54:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%170) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %174 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %174 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %175 = jsir.string_literal {#jsir<string_literal_extra "'__proto__'", "__proto__">, "__proto__"}
// SOURCE-NEXT:                       // %175 = "__proto__"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %176 = jsir.member_expression_ref (%174, %175)
// SOURCE-NEXT:                       // %176 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %177 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                       // %177 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %178 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                       // %178 = "bind"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %179 = jsir.member_expression (%177, %178)
// SOURCE-NEXT:                       // %179 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %180 = jsir.identifier {"_0x58a38a"}
// SOURCE-NEXT:                       // %180 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %181 = jsir.call_expression (%179, %180)
// SOURCE-NEXT:                       // %181 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %182 = jsir.assignment_expression (%176, %181) {"="}
// SOURCE-NEXT:                       // %182 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%182)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb55:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb56:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %183 = jslir.switch_statement_case_start (%148) {5 : ui32}
// SOURCE-NEXT:                       // %183 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %184 = jsir.string_literal {#jsir<string_literal_extra "'5'", "5">, "5"}
// SOURCE-NEXT:                       // %184 = "5"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%184)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %185 = jsir.binary_expression (%147, %184) {"==="}
// SOURCE-NEXT:                       // %185 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %186 = builtin.unrealized_conversion_cast (%185)
// SOURCE-NEXT:                       // %186 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%186) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb57:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%183) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %187 = jsir.identifier {"_0x3a6f48"}
// SOURCE-NEXT:                       // %187 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %188 = jsir.string_literal {#jsir<string_literal_extra "'toString'", "toString">, "toString"}
// SOURCE-NEXT:                       // %188 = "toString"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %189 = jsir.member_expression_ref (%187, %188)
// SOURCE-NEXT:                       // %189 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %190 = jsir.identifier {"_0x3bb083"}
// SOURCE-NEXT:                       // %190 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %191 = jsir.string_literal {#jsir<string_literal_extra "'toString'", "toString">, "toString"}
// SOURCE-NEXT:                       // %191 = "toString"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %192 = jsir.member_expression (%190, %191)
// SOURCE-NEXT:                       // %192 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %193 = jsir.string_literal {#jsir<string_literal_extra "'bind'", "bind">, "bind"}
// SOURCE-NEXT:                       // %193 = "bind"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %194 = jsir.member_expression (%192, %193)
// SOURCE-NEXT:                       // %194 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %195 = jsir.identifier {"_0x3bb083"}
// SOURCE-NEXT:                       // %195 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %196 = jsir.call_expression (%194, %195)
// SOURCE-NEXT:                       // %196 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %197 = jsir.assignment_expression (%189, %196) {"="}
// SOURCE-NEXT:                       // %197 = <uninitialized>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expression_statement (%197)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb58:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb59:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%148) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb60:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%143) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb61:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%138) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%137) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb62:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%127) {#jsir<cf_marker ForStatementUpdate>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %198 = jsir.identifier_ref {"_0x4a8534"}
// SOURCE-NEXT:                       // %198 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %199 = jsir.update_expression (%198) {"++", false}
// SOURCE-NEXT:                       // %199 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.expr_region_end (%199)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb63:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%127) {#jsir<cf_marker ForStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb64:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb65:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %200 = jslir.switch_statement_case_start (%107) {2 : ui32}
// SOURCE-NEXT:                       // %200 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %201 = jsir.string_literal {#jsir<string_literal_extra "'2'", "2">, "2"}
// SOURCE-NEXT:                       // %201 = "2"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%201)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %202 = jsir.binary_expression (%106, %201) {"==="}
// SOURCE-NEXT:                       // %202 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %203 = builtin.unrealized_conversion_cast (%202)
// SOURCE-NEXT:                       // %203 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%203) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb66:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%200) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %247 = jsir.identifier_ref {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %247 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %248 = jsir.variable_declarator (%247)
// SOURCE-NEXT:                           // %248 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%248)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb67:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb68:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %204 = jslir.switch_statement_case_start (%107) {3 : ui32}
// SOURCE-NEXT:                       // %204 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %205 = jsir.string_literal {#jsir<string_literal_extra "'3'", "3">, "3"}
// SOURCE-NEXT:                       // %205 = "3"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%205)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %206 = jsir.binary_expression (%106, %205) {"==="}
// SOURCE-NEXT:                       // %206 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %207 = builtin.unrealized_conversion_cast (%206)
// SOURCE-NEXT:                       // %207 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%207) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb69:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%204) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %225 = jsir.identifier_ref {"_0x27bc28"}
// SOURCE-NEXT:                           // %225 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %226 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %226 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %227 = jsir.string_literal {#jsir<string_literal_extra "'Fmzmy'", "Fmzmy">, "Fmzmy"}
// SOURCE-NEXT:                           // %227 = "Fmzmy"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %228 = jsir.member_expression (%226, %227)
// SOURCE-NEXT:                           // %228 = "log"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %229 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %229 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %230 = jsir.string_literal {#jsir<string_literal_extra "'bDDQL'", "bDDQL">, "bDDQL"}
// SOURCE-NEXT:                           // %230 = "bDDQL"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %231 = jsir.member_expression (%229, %230)
// SOURCE-NEXT:                           // %231 = "warn"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %232 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %232 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %233 = jsir.string_literal {#jsir<string_literal_extra "'wkULH'", "wkULH">, "wkULH"}
// SOURCE-NEXT:                           // %233 = "wkULH"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %234 = jsir.member_expression (%232, %233)
// SOURCE-NEXT:                           // %234 = "info"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %235 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %235 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %236 = jsir.string_literal {#jsir<string_literal_extra "'Wftmu'", "Wftmu">, "Wftmu"}
// SOURCE-NEXT:                           // %236 = "Wftmu"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %237 = jsir.member_expression (%235, %236)
// SOURCE-NEXT:                           // %237 = "error"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %238 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %238 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %239 = jsir.string_literal {#jsir<string_literal_extra "'gXlVo'", "gXlVo">, "gXlVo"}
// SOURCE-NEXT:                           // %239 = "gXlVo"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %240 = jsir.member_expression (%238, %239)
// SOURCE-NEXT:                           // %240 = "exception"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %241 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:                           // %241 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %242 = jsir.string_literal {#jsir<string_literal_extra "'DRyXW'", "DRyXW">, "DRyXW"}
// SOURCE-NEXT:                           // %242 = "DRyXW"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %243 = jsir.member_expression (%241, %242)
// SOURCE-NEXT:                           // %243 = "table"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %244 = jsir.string_literal {#jsir<string_literal_extra "'trace'", "trace">, "trace"}
// SOURCE-NEXT:                           // %244 = "trace"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %245 = jsir.array_expression (%228, %231, %234, %237, %240, %243, %244)
// SOURCE-NEXT:                           // %245 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %246 = jsir.variable_declarator (%225, %245)
// SOURCE-NEXT:                           // %246 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jsir.exprs_region_end (%246)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb70:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb71:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %208 = jslir.switch_statement_case_start (%107) {4 : ui32}
// SOURCE-NEXT:                       // %208 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %209 = jsir.string_literal {#jsir<string_literal_extra "'4'", "4">, "4"}
// SOURCE-NEXT:                       // %209 = "4"
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.switch_statement_case_test (%209)
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %210 = jsir.binary_expression (%106, %209) {"==="}
// SOURCE-NEXT:                       // %210 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     %211 = builtin.unrealized_conversion_cast (%210)
// SOURCE-NEXT:                       // %211 = <unknown>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.cond_br (%211) {array<i32: 1, 0, 0>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb72:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%208) {#jsir<cf_marker SwitchStatementCaseBody>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jsir.variable_declaration {"var"} ({
// SOURCE-NEXT:                       ^bb0:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %212 = jsir.identifier_ref {"_0x223732"}
// SOURCE-NEXT:                           // %212 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %213 = jsir.identifier {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %213 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %214 = jsir.string_literal {#jsir<string_literal_extra "'console'", "console">, "console"}
// SOURCE-NEXT:                           // %214 = "console"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %215 = jsir.member_expression_ref (%213, %214)
// SOURCE-NEXT:                           // %215 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %216 = jsir.identifier {"_0x2ed7aa"}
// SOURCE-NEXT:                           // %216 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %217 = jsir.string_literal {#jsir<string_literal_extra "'console'", "console">, "console"}
// SOURCE-NEXT:                           // %217 = "console"
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %218 = jsir.member_expression (%216, %217)
// SOURCE-NEXT:                           // %218 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %219 = jslir.logical_expression_start (%218) {"||"}
// SOURCE-NEXT:                           // %219 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %220 = builtin.unrealized_conversion_cast (%218)
// SOURCE-NEXT:                           // %220 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.cond_br (%220, %218) {array<i32: 1, 1, 0>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb1:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%219) {#jsir<cf_marker LogicalExpressionRight>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %221 = jsir.object_expression ({
// SOURCE-NEXT:                           ^bb0:
// SOURCE-NEXT:                               // <executable>
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                             jsir.exprs_region_end
// SOURCE-NEXT:                               // State [default = <unknown>] { }
// SOURCE-NEXT:                         })
// SOURCE-NEXT:                           // %221 = <unknown>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         cf.br (%221)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                       ^bb2:
// SOURCE-NEXT:                           // <executable>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         jslir.control_flow_marker (%219) {#jsir<cf_marker LogicalExpressionEnd>}
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %223 = jsir.assignment_expression (%215, %222) {"="}
// SOURCE-NEXT:                           // %223 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                         %224 = jsir.variable_declarator (%212, %223)
// SOURCE-NEXT:                           // %224 = <uninitialized>
// SOURCE-NEXT:                           // State [default = <unknown>] { <_0x223732#40 : <uninitialized>> }
// SOURCE-NEXT:                         jsir.exprs_region_end (%224)
// SOURCE-NEXT:                           // State [default = <unknown>] { }
// SOURCE-NEXT:                     })
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.continue_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb73:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb74:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%107) {#jsir<cf_marker SwitchStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.break_statement
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb75:
// SOURCE-NEXT:                       // <not executable>
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%102) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <uninitialized>] { }
// SOURCE-NEXT:                   ^bb76:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%97) {#jsir<cf_marker WhileStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%96) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     cf.br
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                   ^bb77:
// SOURCE-NEXT:                       // <executable>
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%33) {#jsir<cf_marker IfStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                     jslir.control_flow_marker (%22) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:                       // State [default = <unknown>] { }
// SOURCE-NEXT:                 })
// SOURCE-NEXT:                   // %19 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %20 = jsir.call_expression (%17, %18, %19)
// SOURCE-NEXT:                   // %20 = <unknown>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 %21 = jsir.variable_declarator (%16, %20)
// SOURCE-NEXT:                   // %21 = <uninitialized>
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:                 jsir.exprs_region_end (%21)
// SOURCE-NEXT:                   // State [default = <unknown>] { }
// SOURCE-NEXT:             })
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %3 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:               // %3 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %4 = jsir.string_literal {#jsir<string_literal_extra "'fPEpB'", "fPEpB">, "fPEpB"}
// SOURCE-NEXT:               // %4 = "fPEpB"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %5 = jsir.member_expression (%3, %4)
// SOURCE-NEXT:               // %5 = #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %6 = jsir.identifier {"_0x5a5e61"}
// SOURCE-NEXT:               // %6 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %7 = jsir.call_expression (%5, %6)
// SOURCE-NEXT:               // %7 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %8 = jsir.identifier {"console"}
// SOURCE-NEXT:               // %8 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %9 = jsir.string_literal {#jsir<string_literal_extra "'log'", "log">, "log"}
// SOURCE-NEXT:               // %9 = "log"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %10 = jsir.member_expression (%8, %9)
// SOURCE-NEXT:               // %10 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %11 = jsir.identifier {"_0x24a11a"}
// SOURCE-NEXT:               // %11 = #jsir_builtin<inline_expression_object  "cmIIa", #jsir_builtin<inline_expression_function  "_0x4d887e", 19,  "_0x258647", 19, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x4d887e", 19>, #jsir<symbol_id "_0x258647", 19>, "===">>,  "rvTTb", "LtmRg",  "BLRju", #jsir_builtin<inline_expression_function  "_0x32f73d", 20,  "_0x51021c", 20, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x32f73d", 20>, #jsir<symbol_id "_0x51021c", 20>, "===">>,  "INEBZ", "snjPo",  "gCfqE", "Nngrv",  "ZUNtd", "2|0|4|3|1",  "soDZs", #jsir_builtin<inline_expression_function  "_0x38801d", 21,  "_0xf075cb", 21, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x38801d", 21>, #jsir<symbol_id "_0xf075cb", 21>>>,  "NieDC", #jsir_builtin<inline_expression_function  "_0x320e85", 22,  "_0x58fb4d", 22, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x320e85", 22>, #jsir<symbol_id "_0x58fb4d", 22>, "+">>,  "yEDez", "return (function() ",  "ZEmIi", "{}.constructor(\22return this\22)( )",  "jXOCo", #jsir_builtin<inline_expression_function  "_0x482b82", 23,  "_0x2bafd9", 23, #jsir_builtin<inline_expression_binary_expression #jsir<symbol_id "_0x482b82", 23>, #jsir<symbol_id "_0x2bafd9", 23>, "<">>,  "GyCwQ", "3|0|2|4|5|1",  "Fmzmy", "log",  "bDDQL", "warn",  "wkULH", "info",  "Wftmu", "error",  "gXlVo", "exception",  "DRyXW", "table",  "fPEpB", #jsir_builtin<inline_expression_function  "_0x4d07dc", 24, #jsir_builtin<inline_expression_call #jsir<symbol_id "_0x4d07dc", 24>, >>,  "Xxejz", "Hello World!">
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %12 = jsir.string_literal {#jsir<string_literal_extra "'Xxejz'", "Xxejz">, "Xxejz"}
// SOURCE-NEXT:               // %12 = "Xxejz"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %13 = jsir.member_expression (%11, %12)
// SOURCE-NEXT:               // %13 = "Hello World!"
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %14 = jsir.call_expression (%10, %13)
// SOURCE-NEXT:               // %14 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             %15 = jsir.sequence_expression (%7, %14)
// SOURCE-NEXT:               // %15 = <unknown>
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jsir.expression_statement (%15)
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:             jslir.control_flow_marker (%2) {#jsir<cf_marker BlockStatementEnd>}
// SOURCE-NEXT:               // State [default = <unknown>] { }
// SOURCE-NEXT:         })
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %0 = jsir.identifier {"hi"}
// SOURCE-NEXT:           // %0 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         %1 = jsir.call_expression (%0)
// SOURCE-NEXT:           // %1 = <unknown>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:         jsir.expression_statement (%1)
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     }, {
// SOURCE-NEXT:       ^bb0:
// SOURCE-NEXT:           // <executable>
// SOURCE-NEXT:           // State [default = <unknown>] { }
// SOURCE-NEXT:     })
// SOURCE-NEXT:       // State [default = <unknown>] { }
// SOURCE-NEXT: })
// SOURCE-NEXT:   // State [default = <uninitialized>] { }
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Bindings:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: _0x24a11a#18:
// SOURCE-NEXT:     /* 20 properties */ {
// SOURCE-NEXT:         ["cmIIa"]: (_0x4d887e#19, _0x258647#19) => { (_0x4d887e#19 === _0x258647#19) },
// SOURCE-NEXT:         ["rvTTb"]: "LtmRg",
// SOURCE-NEXT:         ["BLRju"]: (_0x32f73d#20, _0x51021c#20) => { (_0x32f73d#20 === _0x51021c#20) },
// SOURCE-NEXT:         ["INEBZ"]: "snjPo",
// SOURCE-NEXT:         ["gCfqE"]: "Nngrv",
// SOURCE-NEXT:         ["ZUNtd"]: "2|0|4|3|1",
// SOURCE-NEXT:         ["soDZs"]: (_0x38801d#21, _0xf075cb#21) => { _0x38801d#21(_0xf075cb#21) },
// SOURCE-NEXT:         ["NieDC"]: (_0x320e85#22, _0x58fb4d#22) => { (_0x320e85#22 + _0x58fb4d#22) },
// SOURCE-NEXT:         ["yEDez"]: "return (function() ",
// SOURCE-NEXT:         ["ZEmIi"]: "{}.constructor(\22return this\22)( )",
// SOURCE-NEXT:         ["jXOCo"]: (_0x482b82#23, _0x2bafd9#23) => { (_0x482b82#23 < _0x2bafd9#23) },
// SOURCE-NEXT:         ["GyCwQ"]: "3|0|2|4|5|1",
// SOURCE-NEXT:         ["Fmzmy"]: "log",
// SOURCE-NEXT:         ["bDDQL"]: "warn",
// SOURCE-NEXT:         ["wkULH"]: "info",
// SOURCE-NEXT:         ["Wftmu"]: "error",
// SOURCE-NEXT:         ["gXlVo"]: "exception",
// SOURCE-NEXT:         ["DRyXW"]: "table",
// SOURCE-NEXT:         ["fPEpB"]: (_0x4d07dc#24) => { _0x4d07dc#24() },
// SOURCE-NEXT:         ["Xxejz"]: "Hello World!",
// SOURCE-NEXT:     }
// SOURCE-NEXT: _0x3e158c#18:
// SOURCE-NEXT:     (_0x3bd438#25, _0x53f095#25, _0x2b1b5d#25, _0x1150ec#25) => { _0x107c#0((_0x1150ec#25 - -343), _0x2b1b5d#25) }
// SOURCE-NEXT: _0x5fb062#18:
// SOURCE-NEXT:     (_0x1176c2#39, _0x37fd7c#39, _0x5718e5#39, _0x3d07ce#39) => { _0x107c#0((_0x1176c2#39 - -122), _0x37fd7c#39) }
// SOURCE-NEXT: _0x167d7e#27:
// SOURCE-NEXT:     (_0x3c0256#29, _0x2b47e1#29, _0x4957e3#29, _0x3b662d#29) => { _0x107c#0((_0x4957e3#29 - 491), _0x3c0256#29) }
// SOURCE-NEXT: _0x4184b2#27:
// SOURCE-NEXT:     (_0x22e15e#28, _0x5174c3#28, _0x1241d4#28, _0x8ab890#28) => { _0x107c#0((_0x8ab890#28 - 283), _0x5174c3#28) }
// SOURCE-NEXT: _0x552a36#31:
// SOURCE-NEXT:     (_0x5b91b5#32, _0x5a4c29#32, _0x102518#32, _0x1d60e6#32) => { _0x4184b2#27((_0x5b91b5#32 - 273), _0x5a4c29#32, (_0x102518#32 - 81), (_0x102518#32 - -946)) }
// SOURCE-NEXT: _0x62708b#31:
// SOURCE-NEXT:     _0x293663#undeclared["apply"](_0x408f4b#undeclared, arguments#undeclared)
// SOURCE-NEXT: _0x5b3fd6#36:
// SOURCE-NEXT:     _0x4f3fc0#27["apply"](_0x1008f4#27, arguments#undeclared)
// SOURCE-NEXT: _0x1999fe#40:
// SOURCE-NEXT:     _0x24a11a#18["ZUNtd"]["split"]("|")
// SOURCE-NEXT: _0x20167d#40:
// SOURCE-NEXT:     _0x24a11a#18["GyCwQ"]["split"]("|")
// SOURCE-NEXT: _0x25cc23#40:
// SOURCE-NEXT:     _0x4e0893#undeclared[_0x3ab0e9#undeclared]
// SOURCE-NEXT: _0x2abedf#40:
// SOURCE-NEXT:     "5|2|1|4|3|0"["split"]("|")
// SOURCE-NEXT: _0x5154ca#40:
// SOURCE-NEXT:     _0x27bc28#40[0]
// SOURCE-NEXT: _0x620196#40:
// SOURCE-NEXT:     (_0x425af0#42, _0x2a4dc9#42, _0x4f88d8#42, _0x5d56ca#42) => { _0x3e158c#18((_0x425af0#42 - 88), (_0x2a4dc9#42 - 394), _0x2a4dc9#42, (_0x5d56ca#42 - 446)) }
// SOURCE-NEXT: _0x9092eb#40:
// SOURCE-NEXT:     (_0x4068cb#41, _0x4ee7f0#41, _0x2d9ed5#41, _0x497bbc#41) => { _0x5fb062#18((_0x497bbc#41 - 457), _0x4ee7f0#41, (_0x2d9ed5#41 - 369), (_0x497bbc#41 - 84)) }
// SOURCE-NEXT: _0xc6ad63#40:
// SOURCE-NEXT:     _0x24a11a#18["soDZs"](Function#undeclared, _0x24a11a#18["NieDC"](_0x24a11a#18["NieDC"](_0x24a11a#18["yEDez"], _0x24a11a#18["ZEmIi"]), ");"))
// SOURCE-NEXT: ================================================================
// SOURCE-EMPTY:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: Computed constants:
// SOURCE-NEXT: ================================================================
// SOURCE-NEXT: From [6361, 6365): `-343` -> `-343`
// SOURCE-NEXT: From [6780, 6798): `_0x24a11a['rvTTb']` -> `LtmRg`
// SOURCE-NEXT: From [6761, 6808): `_0x24a11a['cmIIa'](_0x24a11a['rvTTb'], 'VmyVp')` -> `false`
// SOURCE-NEXT: From [6757, 7587): `if (_0x24a11a['cmIIa'](_0x24a11a['rvTTb'], 'VmyVp')) {
// SOURCE-NEXT:         var _0x5b6c55 = _0x3f313a ? function() {
// SOURCE-NEXT:           function _0x552a36(_0x5b91b5, _0x5a4c29, _0x102518, _0x1d60e6) {
// SOURCE-NEXT:             return _0x4184b2(
// SOURCE-NEXT:                 _0x5b91b5 - 273, _0x5a4c29, _0x102518 - 81, _0x102518 - -946);
// SOURCE-NEXT:           }
// SOURCE-EMPTY:
// SOURCE-NEXT:           if (_0x330f38) {
// SOURCE-NEXT:             var _0x62708b = _0x293663['apply'](_0x408f4b, arguments);
// SOURCE-EMPTY:
// SOURCE-NEXT:             return _0x3b8fa6 = null, _0x62708b;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function() {};
// SOURCE-EMPTY:
// SOURCE-NEXT:         return _0x5ac793 = ![], _0x5b6c55;
// SOURCE-NEXT:       } else {
// SOURCE-NEXT:         var _0x46af11 = _0x10bab4 ? function() {
// SOURCE-NEXT:           if (_0x4f3fc0) {
// SOURCE-NEXT:             var _0x5b3fd6 = _0x4f3fc0['apply'](_0x1008f4, arguments);
// SOURCE-EMPTY:
// SOURCE-NEXT:             return _0x4f3fc0 = null, _0x5b3fd6;
// SOURCE-NEXT:           }
// SOURCE-NEXT:         } : function() {};
// SOURCE-EMPTY:
// SOURCE-NEXT:         return _0x10bab4 = ![], _0x46af11;
// SOURCE-NEXT:       }` -> `false`
// SOURCE-NEXT: From [7038, 7042): `-946` -> `-946`
// SOURCE-NEXT: From [7702, 7706): `-122` -> `-122`
// SOURCE-NEXT: From [8143, 8161): `_0x24a11a['INEBZ']` -> `snjPo`
// SOURCE-NEXT: From [8163, 8181): `_0x24a11a['gCfqE']` -> `Nngrv`
// SOURCE-NEXT: From [8124, 8182): `_0x24a11a['BLRju'](_0x24a11a['INEBZ'], _0x24a11a['gCfqE'])` -> `false`
// SOURCE-NEXT: From [8120, 11341): `if (_0x24a11a['BLRju'](_0x24a11a['INEBZ'], _0x24a11a['gCfqE'])) {
// SOURCE-NEXT:       var _0x2abedf = '5|2|1|4|3|0'['split']('|'), _0x53335d = 0;
// SOURCE-EMPTY:
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x2abedf[_0x53335d++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             _0x233f7c[_0x25cc23] = _0x185f9c;
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             var _0x527da8 = _0x4f1603[_0x25cc23] || _0x185f9c;
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x25cc23 = _0x4e0893[_0x3ab0e9];
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             _0x185f9c['toString'] = _0x527da8['toString']['bind'](_0x527da8);
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             _0x185f9c['__proto__'] = _0x486a8b['bind'](_0x67a5a1);
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '5':
// SOURCE-NEXT:             var _0x185f9c =
// SOURCE-NEXT:                 _0x4b92d5['constructor']['prototype']['bind'](_0x5026e1);
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-EMPTY:
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     } else {
// SOURCE-NEXT:       var _0x1999fe = _0x24a11a['ZUNtd']['split']('|'), _0x50c043 = 0;
// SOURCE-EMPTY:
// SOURCE-NEXT:       while (!![]) {
// SOURCE-NEXT:         switch (_0x1999fe[_0x50c043++]) {
// SOURCE-NEXT:           case '0':
// SOURCE-NEXT:             try {
// SOURCE-NEXT:               var _0xc6ad63 = _0x24a11a['soDZs'](
// SOURCE-NEXT:                   Function,
// SOURCE-NEXT:                   _0x24a11a['NieDC'](
// SOURCE-NEXT:                       _0x24a11a['NieDC'](
// SOURCE-NEXT:                           _0x24a11a['yEDez'], _0x24a11a['ZEmIi']),
// SOURCE-NEXT:                       ');'));
// SOURCE-EMPTY:
// SOURCE-NEXT:               _0x2ed7aa = _0xc6ad63();
// SOURCE-NEXT:             } catch (_0x455513) {
// SOURCE-NEXT:               _0x2ed7aa = window;
// SOURCE-NEXT:             }
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '1':
// SOURCE-NEXT:             for (var _0x4a8534 = 0; _0x24a11a['jXOCo'](0, _0x27bc28['length']);
// SOURCE-NEXT:                  _0x4a8534++) {
// SOURCE-NEXT:               var _0x20167d = _0x24a11a['GyCwQ']['split']('|'), _0x92b385 = 0;
// SOURCE-EMPTY:
// SOURCE-NEXT:               while (!![]) {
// SOURCE-NEXT:                 switch (_0x20167d[_0x92b385++]) {
// SOURCE-NEXT:                   case '0':
// SOURCE-NEXT:                     var _0x5154ca = _0x27bc28[0];
// SOURCE-NEXT:                     continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:                   case '1':
// SOURCE-NEXT:                     _0x223732[_0x5154ca] = _0x3a6f48;
// SOURCE-NEXT:                     continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:                   case '2':
// SOURCE-NEXT:                     var _0x3bb083 = _0x223732[_0x5154ca] || _0x3a6f48;
// SOURCE-EMPTY:
// SOURCE-NEXT:                     continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:                   case '3':
// SOURCE-NEXT:                     var _0x3a6f48 =
// SOURCE-NEXT:                         _0x58a38a['constructor']['prototype']['bind'](
// SOURCE-NEXT:                             _0x58a38a);
// SOURCE-EMPTY:
// SOURCE-NEXT:                     continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:                   case '4':
// SOURCE-NEXT:                     _0x3a6f48['__proto__'] = _0x58a38a['bind'](_0x58a38a);
// SOURCE-NEXT:                     continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:                   case '5':
// SOURCE-NEXT:                     _0x3a6f48['toString'] =
// SOURCE-NEXT:                         _0x3bb083['toString']['bind'](_0x3bb083);
// SOURCE-NEXT:                     continue;
// SOURCE-NEXT:                 }
// SOURCE-EMPTY:
// SOURCE-NEXT:                 break;
// SOURCE-NEXT:               }
// SOURCE-NEXT:             }
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '2':
// SOURCE-NEXT:             var _0x2ed7aa;
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '3':
// SOURCE-NEXT:             var _0x27bc28 = [
// SOURCE-NEXT:               _0x24a11a['Fmzmy'], _0x24a11a['bDDQL'], _0x24a11a['wkULH'],
// SOURCE-NEXT:               _0x24a11a['Wftmu'], _0x24a11a['gXlVo'], _0x24a11a['DRyXW'],
// SOURCE-NEXT:               'trace'
// SOURCE-NEXT:             ];
// SOURCE-NEXT:             continue;
// SOURCE-EMPTY:
// SOURCE-NEXT:           case '4':
// SOURCE-NEXT:             var _0x223732 = _0x2ed7aa['console'] = _0x2ed7aa['console'] || {};
// SOURCE-EMPTY:
// SOURCE-NEXT:             continue;
// SOURCE-NEXT:         }
// SOURCE-EMPTY:
// SOURCE-NEXT:         break;
// SOURCE-NEXT:       }
// SOURCE-NEXT:     }` -> `false`
// SOURCE-NEXT: From [9050, 9068): `_0x24a11a['ZUNtd']` -> `2|0|4|3|1`
// SOURCE-NEXT: From [9385, 9403): `_0x24a11a['yEDez']` -> `return (function() `
// SOURCE-NEXT: From [9405, 9423): `_0x24a11a['ZEmIi']` -> `{}.constructor("return this")( )`
// SOURCE-NEXT: From [9339, 9424): `_0x24a11a['NieDC'](
// SOURCE-NEXT:                           _0x24a11a['yEDez'], _0x24a11a['ZEmIi'])` -> `return (function() {}.constructor("return this")( )`
// SOURCE-NEXT: From [9297, 9453): `_0x24a11a['NieDC'](
// SOURCE-NEXT:                       _0x24a11a['NieDC'](
// SOURCE-NEXT:                           _0x24a11a['yEDez'], _0x24a11a['ZEmIi']),
// SOURCE-NEXT:                       ');')` -> `return (function() {}.constructor("return this")( ));`
// SOURCE-NEXT: From [9764, 9782): `_0x24a11a['GyCwQ']` -> `3|0|2|4|5|1`
// SOURCE-NEXT: From [10986, 11004): `_0x24a11a['Fmzmy']` -> `log`
// SOURCE-NEXT: From [11006, 11024): `_0x24a11a['bDDQL']` -> `warn`
// SOURCE-NEXT: From [11026, 11044): `_0x24a11a['wkULH']` -> `info`
// SOURCE-NEXT: From [11060, 11078): `_0x24a11a['Wftmu']` -> `error`
// SOURCE-NEXT: From [11080, 11098): `_0x24a11a['gXlVo']` -> `exception`
// SOURCE-NEXT: From [11100, 11118): `_0x24a11a['DRyXW']` -> `table`
// SOURCE-NEXT: From [11397, 11415): `_0x24a11a['Xxejz']` -> `Hello World!`
// SOURCE-NEXT: ================================================================
