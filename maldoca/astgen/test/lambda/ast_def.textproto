# proto-file: maldoca/astgen/ast_def.proto
# proto-message: AstDefPb

lang_name: "la"

# interface Expression {
#   type: string
# }
nodes {
  name: "Expression"
  kinds: FIELD_KIND_RVAL
}

# interface Variable <: Expression {
#   type: "Variable"
#   identifier: string
# }
nodes {
  name: "Variable"
  type: "Variable"
  parents: "Expression"
  fields {
    name: "identifier"
    type { string {} }
    kind: FIELD_KIND_ATTR
  }
  kinds: FIELD_KIND_LVAL
  should_generate_ir_op: true
}

# interface FunctionDefinition <: Expression {
#   type: "FunctionDefinition"
#   parameter: Variable
#   body: Expression
# }
nodes {
  name: "FunctionDefinition"
  type: "FunctionDefinition"
  parents: "Expression"
  fields {
    name: "parameter"
    type { class: "Variable" }
    kind: FIELD_KIND_LVAL
    enclose_in_region: true
  }
  fields {
    name: "body"
    type { class: "Expression" }
    kind: FIELD_KIND_RVAL
    enclose_in_region: true
  }
  should_generate_ir_op: true
}

# interface FunctionCall <: Expression {
#   type: "FunctionCall"
#   function: Expression
#   argument: Expression
# }
nodes {
  name: "FunctionCall"
  type: "FunctionCall"
  parents: "Expression"
  fields {
    name: "function"
    type { class: "Expression" }
    kind: FIELD_KIND_RVAL
  }
  fields {
    name: "argument"
    type { class: "Expression" }
    kind: FIELD_KIND_RVAL
  }
  should_generate_ir_op: true
}
